{"remainingRequest":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js!/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js??ref--17!/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/yansha/VDProject/VDFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yansha/VDProject/VDFrontend/src/views/MainView/BottomMainView/TableMainView.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/yansha/VDProject/VDFrontend/src/views/MainView/BottomMainView/TableMainView.vue","mtime":1744442733408},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1744442733384},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1744442733384},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/vue-loader/lib/index.js","mtime":1735202381045}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["d3","mapState","api","onUpdated","debounce","name","components","data","selectedTabValue","fileList","fileContent","currentPage","pageData","pageSize","totalPage","sortedData","imagePreUrl","isShow","searchQuery","filterdData","sortOrder","sortCol","mounted","methods","getTableInfo","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","getTableContent","sent","stop","getPageData","_this2","_callee2","_callee2$","_context2","$store","state","datasetName","console","log","commit","handleSearch","_ref","_callee3","e","_callee3$","_context3","getFiterData","length","tableFiterResults","_x","apply","arguments","handlePageChange","page","getColumnIcon","col","shouldSortColumn","isColumnSorted","order","sortColumn","_this3","_callee4","_callee4$","_context4","getSortData","handleIconClick","handleRowClick","row","file","dataId","undefined","selectedNode","computed","_objectSpread","tableData","updateTable","watch","newVal","oldVal"],"sources":["src/views/MainView/BottomMainView/TableMainView.vue"],"sourcesContent":["<template>\n\n    <div class=\"table-main\">\n\n        <el-tabs v-model=\"selectedTabValue\" type=\"card\">\n            <el-tab-pane v-for=\"(file, index) in fileList\" :key=\"index\" :label=\"file\" :name=\"file\">\n\n                <el-table v-if=\"tableData\" :data=tableData style=\"width: 100%\" height=\"270\" :stripe=\"true\"\n                    :border=\"true\" size=\"mini\" type=\"index\" :highlight-current-row=\"true\"\n                    @row-click=\"(row, column, event) => handleRowClick(row, file, event)\">\n\n\n                    <el-table-column v-for=\"(value, key) in tableData[0]\" :key=\"key\" :prop=\"key\" :label=\"key\"\n                        height=\"10px\" show-overflow-tooltip fixed>\n\n                        <template #header>\n                            <div class=\"header-wrapper\">\n\n                                <div :title=\"key\" class=\"header-left\"\n                                    style=\"height: 20px; display: inline-flex; align-items: center;\">\n                                    {{ `${key}` }}\n                                </div>\n\n                                <i :class=\"getColumnIcon(key)\" class=\"icon\" @click=\"handleIconClick(key)\"\n                                    style=\"margin-left: 10px; font-size: 14px; vertical-align: middle;\" />\n\n                                <div v-if=\"shouldSortColumn(key)\" class=\"sort-icon-container\"\n                                    style=\"display: flex;flex-direction: column;height: 20px;align-items: center;justify-content: center\">\n                                    <!-- 上升排序箭头 -->\n                                    <i :class=\"{ active: isColumnSorted(key, 'ascending') }\" class=\"el-icon-caret-top\"\n                                        style=\"width: 15px;height: 15px\" @click=\"sortColumn(key, 'ascending')\"></i>\n                                    <!-- 下降排序箭头 -->\n                                    <i :class=\"{ active: isColumnSorted(key, 'descending') }\"\n                                        class=\"el-icon-caret-bottom\" style=\"margin-top: -5px;width: 15px;height: 15px\"\n                                        @click=\"sortColumn(key, 'descending')\"></i>\n                                </div>\n\n                            </div>\n                        </template>\n\n                        <template #default=\"{ row, column }\">\n\n                            <div v-if=\"isShow && column.property === 'Image'\"\n                                style=\"display: flex; justify-content: center; align-items: center;\">\n                                <img :src=\"imagePreUrl + row[column.property]\" alt=\"image\"\n                                    style=\"width: 100px; height: 100px;\" />\n                            </div>\n\n                            <div v-else>\n                                {{ row[column.property] }}\n                            </div>\n                        </template>\n\n                    </el-table-column>\n\n                </el-table>\n\n\n                <div class=\"controls-container\">\n                    <!-- 搜索框 -->\n                    <div class=\"search-container\">\n                        <el-input v-model=\"searchQuery\" placeholder=\"Keyword Search\" @input=\"handleSearch\"\n                            style=\"width: 200px;\" suffix-icon=\"el-icon-search\"></el-input>\n                    </div>\n\n                    <!-- Pagination -->\n                    <el-pagination :current-page=\"currentPage\" :page-size=\"pageSize\" :total=\"totalPage\" small background\n                        class=\"pagination-class\" layout=\"total, prev, pager, next\" @current-change=\"handlePageChange\" />\n                </div>\n\n\n            </el-tab-pane>\n        </el-tabs>\n\n    </div>\n\n</template>\n\n<script>\n\nimport * as d3 from \"d3\";\nimport { mapState } from \"vuex\";\nimport api from \"@/api/data\";\nimport { onUpdated } from \"vue\";\nimport { debounce } from 'lodash';\n\nexport default {\n    name: \"TableMainView\",\n    components: {\n\n    },\n    data() {\n        return {\n            selectedTabValue: \"None\",\n            fileList: [],\n            fileContent: {},\n\n            currentPage: 1,\n            pageData: [],\n            pageSize: 10, // Number of items per page\n            totalPage: 0,\n            sortedData: [],\n\n            imagePreUrl: \"\",\n            isShow: false,\n\n            searchQuery: \"\",\n            filterdData: [],\n            sortOrder: \"\",\n            sortCol: \"\"\n\n        };\n    },\n    mounted() {\n\n    },\n    methods: {\n\n        async getTableInfo(data) {\n            const response = await api.getTableContent({ \"datasetName\": data });\n            this.fileList = response[\"data\"][\"tableList\"]\n            this.selectedTabValue = this.fileList[0]\n        },\n        async getPageData() {\n            const response = await api.getPageData({\n                \"datasetName\": this.$store.state.datasetName,\n                \"fileName\": this.selectedTabValue,\n                \"currentPage\": this.currentPage\n            });\n\n            this.pageData = response[\"data\"][\"pageData\"];\n            this.totalPage = response[\"data\"][\"totalPage\"];\n             \n\n            if(this.$store.state.datasetName == \"Wit\"){\n                this.imagePreUrl = response[\"data\"][\"preBaseUrl\"] + \"vision/\";\n            }else{\n                this.imagePreUrl = response[\"data\"][\"preBaseUrl\"];\n            }\n\n            console.log(\"URL\", this.imagePreUrl)\n            this.$store.commit(\"setTableData\", this.pageData)\n\n        },\n        handleSearch: debounce(async function(e) {\n            // 如果事件被正确触发，发送请求：\n            const response = await api.getFiterData({\n                \"datasetName\": this.$store.state.datasetName,\n                \"fileName\": this.selectedTabValue,\n                \"currentPage\": this.currentPage,\n                \"queryText\": this.searchQuery\n            });\n\n            this.filterdData = response[\"data\"][\"filterdData\"];\n            this.$store.commit(\"setTableData\", this.filterdData);\n            this.totalPage = response[\"data\"][\"totalPage\"];\n\n            console.log(\"filter results id\", response[\"data\"][\"idList\"])\n\n            if(response[\"data\"][\"idList\"].length > 0){\n\n                console.log(\"filter results id\", response[\"data\"][\"idList\"])\n                this.$store.commit(\"setTableFiterResults\", response[\"data\"][\"idList\"]);\n\n                console.log(this.$store.state.tableFiterResults)\n            }\n\n            if (this.$store.state.datasetName == \"Wit\") {\n                this.imagePreUrl = response[\"data\"][\"preBaseUrl\"] + \"vision/\";\n            } else {\n                this.imagePreUrl = response[\"data\"][\"preBaseUrl\"];\n            }\n\n        }, 800),  // 300 毫秒的延迟\n        handlePageChange(page) {\n            this.currentPage = page;\n        },\n        getColumnIcon(col) {\n\n            if (col === \"Image\") {\n                return \"el-icon-view\";\n            }\n\n        },\n        shouldSortColumn(col) {\n\n            if (col === \"distance\") {\n                return true;\n            } else if (col == \"Id\" || col == \"id\") {\n                return true;\n            }\n        },\n        isColumnSorted(col, order) {\n            return this.sortCol === col && this.sortOrder === order;\n        },\n        async sortColumn(col, order) {\n\n            // 如果事件被正确触发，发送请求：\n            const response = await api.getSortData({\n                \"datasetName\": this.$store.state.datasetName,\n                \"fileName\": this.selectedTabValue,\n                \"currentPage\": this.currentPage,\n                \"field\": col,\n                \"sortOrder\": order\n            });\n\n            this.sortedData = response[\"data\"][\"sortedData\"];\n            this.$store.commit(\"setTableData\", this.sortedData);\n            this.totalPage = response[\"data\"][\"totalPage\"];\n\n            if(this.$store.state.datasetName == \"Wit\"){\n                this.imagePreUrl = response[\"data\"][\"preBaseUrl\"] + \"vision/\";\n            }else{\n                this.imagePreUrl = response[\"data\"][\"preBaseUrl\"];\n            }\n\n            this.sortCol = col;\n            this.sortOrder = order;\n\n        },\n        handleIconClick(col) {\n            if (col === \"Image\") {\n                this.isShow = !this.isShow;\n            }\n\n        },\n        handleRowClick(row, file, e) {\n            // 从点击的行中获取到对应数据的 id\n            const dataId = (row[\"Id\"] !== undefined ? row[\"Id\"] : row[\"id\"]);\n            console.log(\"选中的id到底是什么！！！！\", row, dataId)\n            console.log(\"ndoelindjgsYFGcyuqegfyu\", this.$store.state.selectedNode)\n            // 提交给全局我当前选中的node id 从而使得各个视图之间的联动\n            this.$store.commit(\"setSelectedNode\", dataId);\n            console.log(\"ndoelindjgsYFGcyuqegfyu\", this.$store.state.selectedNode, \"hahahhaaaaaaaaaaaaaaaaaaaaaaaaaaa\")\n        }\n\n    },\n    computed: {\n        ...mapState({\n            datasetName: \"datasetName\",\n            tableData: \"tableData\",\n            updateTable: \"updateTable\"\n\n        })\n\n    },\n    watch: {\n        datasetName(newVal, oldVal) {\n\n            if (newVal !== oldVal) {\n                this.getTableInfo(newVal);\n                this.selectedTabValue = \"\";\n            }\n\n        },\n        currentPage(newVal, oldVal) {\n            if (this.searchQuery == \"\") {\n                if (this.$store.state.datasetName !== \"\" && this.selectedTabValue != \"\") {\n                    if (this.selectedTabValue) {\n                        this.getPageData();\n                    }\n                }\n            } else {\n                this.handleSearch();\n            }\n        },\n        selectedTabValue(newVal, oldVal) {\n            if (this.$store.state.datasetName !== \"\") {\n                if (this.selectedTabValue) {\n                    this.currentPage = 1;\n                    this.getPageData();\n                }\n\n            }\n\n        },\n        updateTable(newVal, oldVal) {\n            if (newVal === true) {\n                this.getTableInfo(this.$store.state.datasetName);\n                this.getPageData();\n            }\n\n        }\n    }\n};\n</script>\n\n\n<style scoped lang=\"scss\">\n.table-main {\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n\n\n.controls-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 50px;\n    /* 给搜索框和分页组件添加间距 */\n    margin-top: 2.5px;\n}\n\n\n.search-container {\n    margin-left: 20px;\n}\n\n\n.header-wrapper {\n    height: 20px;\n    white-space: nowrap;\n    /*强制单行显示*/\n    text-overflow: ellipsis;\n    /*超出部分省略号表示*/\n    overflow: hidden;\n    /*超出部分隐藏*/\n    padding: 5px 0;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    //justify-content: center;\n    align-items: center;\n    box-sizing: border-box;\n    color: #595959;\n}\n\n.active {\n    color: #e48e41;\n}\n</style>\n\n<style>\n.el-tabs--card>.el-tabs__header {\n    padding: 0;\n    position: relative;\n    margin: 0 0 0px;\n    background-color: white;\n}\n\n.el-tabs__content {\n    overflow: hidden;\n    position: relative;\n    margin-left: 1.5px;\n    background-color: white;\n}\n</style>"],"mappings":"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","ignoreList":[]}]}