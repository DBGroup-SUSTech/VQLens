{"remainingRequest":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js!/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js??ref--17!/home/yansha/VDProject/VDFrontend/src/utils/utils.js","dependencies":[{"path":"/home/yansha/VDProject/VDFrontend/src/utils/utils.js","mtime":1744442733408},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1744442733384},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1744442733384},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["d3","round","num","decimal","Math","Number","EPSILON","pow","random","min","max","floor","downloadJSON","object","dlAnchorElem","arguments","length","undefined","fileName","dataStr","encodeURIComponent","JSON","stringify","myDlAnchorElem","needToRemoveAnchor","document","createElement","classList","add","style","display","setAttribute","concat","click","remove","downloadText","textString","getLuminance","color","r","g","b","transformedRGB","map","v","getContrastRatio","color1","color2","color1L","color2L","ratio","haveContrast","condition","smallText","setsAreEqual","set1","set2","size","_toConsumableArray","every","d","has","splitFileName","file","name","lastDot","lastIndexOf","value","slice","extension","splitStreamTransform","sep","buffer","transform","TransformStream","chunk","controller","parts","split","forEach","part","enqueue","flush","parseJSONTransform","parse","timeitQueue","Set","timeit","label","show","console","timeEnd","time","rgbToHex","numToHex","number","hex","toString","rectsIntersect","rect1","rect2","right1","x","width","right2","bottom1","y","height","bottom2","getRandomSamples","items","seed","replace","targetSize","threshold","randomUniform","source","randomLcg","sampledItems","sampledIndexes","_iterator","_createForOfIteratorHelper","entries","_step","s","n","done","_step$value","_slicedToArray","i","item","push","err","e","f","yieldToMain","Promise","resolve","setTimeout","HOVER_RADIUS"],"sources":["/home/yansha/VDProject/VDFrontend/src/utils/utils.js"],"sourcesContent":["// Author: Jay Wang (jay@zijie.wang)\n// License: MIT\n\nimport d3 from './d3-import';\n\n/**\n * Round a number to a given decimal.\n * @param {number} num Number to round\n * @param {number} decimal Decimal place\n * @returns number\n */\nexport const round = (num, decimal) => {\n  return Math.round((num + Number.EPSILON) * 10 ** decimal) / 10 ** decimal;\n};\n\n/**\n * Get a random number between [min, max], inclusive\n * @param {number} min Min value\n * @param {number} max Max value\n * @returns number\n */\nexport const random = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n};\n\n/**\n * Download a JSON file\n * @param {object} object\n * @param {HTMLElement | null} [dlAnchorElem]\n * @param {string} [fileName]\n */\nexport const downloadJSON = (object, dlAnchorElem = null, fileName = 'download.json') => {\n  const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(object));\n\n  // Create dlAnchor if it is not given\n  let myDlAnchorElem = dlAnchorElem;\n  let needToRemoveAnchor = false;\n\n  if (dlAnchorElem === null) {\n    myDlAnchorElem = document.createElement('a');\n    myDlAnchorElem.classList.add('download-anchor');\n    myDlAnchorElem.style.display = 'none';\n    needToRemoveAnchor = true;\n  }\n\n  myDlAnchorElem.setAttribute('href', dataStr);\n  myDlAnchorElem.setAttribute('download', `${fileName}`);\n  myDlAnchorElem.click();\n\n  if (needToRemoveAnchor) {\n    myDlAnchorElem.remove();\n  }\n};\n\n/**\n * Download a text file\n * @param {string} textString\n * @param {HTMLElement | null} [dlAnchorElem]\n * @param {string} [fileName]\n */\nexport const downloadText = (textString, dlAnchorElem, fileName = 'download.txt') => {\n  const dataStr = 'data:text/plain;charset=utf-8,' + encodeURIComponent(textString);\n\n  // Create dlAnchor if it is not given\n  let myDlAnchorElem = dlAnchorElem;\n  let needToRemoveAnchor = false;\n\n  if (dlAnchorElem === null) {\n    myDlAnchorElem = document.createElement('a');\n    myDlAnchorElem.style.display = 'none';\n    needToRemoveAnchor = true;\n  }\n\n  myDlAnchorElem.setAttribute('href', dataStr);\n  myDlAnchorElem.setAttribute('download', `${fileName}`);\n  myDlAnchorElem.click();\n\n  if (needToRemoveAnchor) {\n    myDlAnchorElem.remove();\n  }\n};\n\n/**\n * Compute the luminance of a RGB color\n * https://www.w3.org/TR/WCAG21/#dfn-contrast-ratio\n * @param {number[]} color [R, G, B in 0..255]\n * @returns {number}\n */\nexport const getLuminance = (color) => {\n  const r = color[0];\n  const g = color[1];\n  const b = color[2];\n\n  // Some strange required transformations\n  const transformedRGB = [r, g, b].map(v => {\n    v /= 255;\n    return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  });\n\n  return (\n    transformedRGB[0] * 0.2126 +\n    transformedRGB[1] * 0.7152 +\n    transformedRGB[2] * 0.0722\n  );\n};\n\n/**\n * Compute color contrast ratio\n * @param {number[]} color1 [r, g, b] in 255 scale\n * @param {number[]} color2 [r, g, b] in 255 scale\n * @returns {number} Contrast ratio\n */\nexport const getContrastRatio = (color1, color2) => {\n  const color1L = getLuminance(color1);\n  const color2L = getLuminance(color2);\n  const ratio =\n    color1L > color2L\n      ? (color2L + 0.05) / (color1L + 0.05)\n      : (color1L + 0.05) / (color2L + 0.05);\n  return ratio;\n};\n\n/**\n * Check if two colors have enough contrast\n * @param {number[]} color1 [r, g, b] in 255 scale\n * @param {number[]} color2 [r, g, b] in 255 scale\n * @param {string} condition 'AA' or 'AAA'\n * @param {boolean} smallText If it is small text\n * @returns {boolean} If two colors have enough contrast\n */\nexport const haveContrast = (color1, color2, condition = 'AAA', smallText = true) => {\n  const ratio = getContrastRatio(color1, color2);\n\n  // Compare the ratio with different thresholds\n  if (condition === 'AA') {\n    return smallText ? ratio <= 4.5 : ratio <= 3;\n  } else {\n    return smallText ? ratio <= 7 : ratio <= 4.5;\n  }\n};\n\n/**\n * Check if two sets are the same\n * @param {Set} set1 Set 1\n * @param {Set} set2 Set 2\n * @returns {boolean}\n */\nexport const setsAreEqual = (set1, set2) => {\n  return set1.size === set2.size && [...set1].every(d => set2.has(d));\n};\n\n/**\n * Get the file name and file extension from a File object\n * @param {File} file File object\n * @returns {[string, string]} [file name, file extension]\n */\nexport const splitFileName = (file) => {\n  const name = file.name;\n  const lastDot = name.lastIndexOf('.');\n  const value = name.slice(0, lastDot);\n  const extension = name.slice(lastDot + 1);\n  return [value, extension];\n};\n\n/**\n * Split the reader stream text by a string\n * @param {string} sep String used to separate the input string\n * @returns {TransformStream}\n */\nexport const splitStreamTransform = (sep) => {\n  let buffer = '';\n\n  const transform = new TransformStream({\n    transform: (chunk, controller) => {\n      buffer += chunk;\n      const parts = buffer.split(sep);\n      parts.slice(0, -1).forEach(part => controller.enqueue(part));\n      buffer = parts[parts.length - 1];\n    },\n    flush: (controller) => {\n      if (buffer) {\n        controller.enqueue(buffer);\n      }\n    }\n  });\n\n  return transform;\n};\n\n/**\n * Parse the input stream as JSON\n * @returns {TransformStream}\n */\nexport const parseJSONTransform = () => {\n  const transform = new TransformStream({\n    transform: (chunk, controller) => {\n      controller.enqueue(JSON.parse(chunk));\n    }\n  });\n  return transform;\n};\n\nconst timeitQueue = new Set();\n/**\n * Trace the execution time\n * @param {string} label Label for the time tracer\n * @param {boolean} show Whether to printout the output in console\n */\nexport const timeit = (label, show) => {\n  if (show) {\n    if (timeitQueue.has(label)) {\n      console.timeEnd(label);\n      timeitQueue.delete(label);\n    } else {\n      console.time(label);\n      timeitQueue.add(label);\n    }\n  }\n};\n\n/**\n * Convert a color from rgb to hex\n * @param {number} r Value in the red channel\n * @param {number} g Value in the green channel\n * @param {number} b Value in the blue channel\n * @returns {string} Hex string\n */\nexport const rgbToHex = (r, g, b) => {\n  const numToHex = (number) => {\n    const hex = number.toString(16);\n    return hex.length === 1 ? `0${hex}` : hex;\n  };\n  return `#${numToHex(r)}${numToHex(g)}${numToHex(b)}`;\n};\n\nexport const rectsIntersect = (rect1, rect2) => {\n  const right1 = rect1.x + rect1.width;\n  const right2 = rect2.x + rect2.width;\n  const bottom1 = rect1.y + rect1.height;\n  const bottom2 = rect2.y + rect2.height;\n\n  return (\n    rect1.x < right2 &&\n    right1 > rect2.x &&\n    rect1.y < bottom2 &&\n    bottom1 > rect2.y\n  );\n};\n\n/**\n * Get a uniformly random sample from a list.\n * @param {Array} items Array of items to sample from\n * @param {number} size Target size of the sample\n * @param {number} seed Random seed (default to 1212)\n * @param {boolean} replace True if sample with replace\n * @returns {Array} Sampled items\n */\nexport const getRandomSamples = (items, size, seed = 1212, replace = false) => {\n  const targetSize = Math.min(size, items.length);\n  const threshold = targetSize / items.length;\n  const randomUniform = d3.randomUniform.source(d3.randomLcg(seed))(0, 1);\n\n  const sampledItems = [];\n  const sampledIndexes = new Set();\n\n  // Repeat sampling until we have enough points sampled\n  while (sampledItems.length < targetSize) {\n    for (const [i, item] of items.entries()) {\n      if ((replace || !sampledIndexes.has(i)) && randomUniform() <= threshold) {\n        sampledIndexes.add(i);\n        sampledItems.push(item);\n\n        // Exit early if we have enough points\n        if (sampledItems.length >= targetSize) break;\n      }\n    }\n  }\n\n  return sampledItems;\n};\n\n/**\n * A helper function to break up a long function into multiple tasks\n * https://web.dev/optimize-long-tasks/\n * @returns {Promise}\n */\nexport const yieldToMain = () => {\n  return new Promise(resolve => {\n    setTimeout(resolve, 0);\n  });\n};\n\nexport const HOVER_RADIUS = 0.5;"],"mappings":"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","ignoreList":[]}]}