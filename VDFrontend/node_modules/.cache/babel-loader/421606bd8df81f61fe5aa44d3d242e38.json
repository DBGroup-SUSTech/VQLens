{"remainingRequest":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js!/home/yansha/VDProject/VDFrontend/src/components/Embedding/workers/loader.worker.js?worker&inline","dependencies":[{"path":"/home/yansha/VDProject/VDFrontend/src/components/Embedding/workers/loader.worker.js","mtime":1735204531902},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1730469387355},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5zZWxmLmpzIjsKaW1wb3J0IHsgc3BsaXRTdHJlYW1UcmFuc2Zvcm0sIHBhcnNlSlNPTlRyYW5zZm9ybSwgdGltZWl0IH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbHMnOwppbXBvcnQgZDMgZnJvbSAnLi4vLi4vLi4vdXRpbHMvZDMtaW1wb3J0JzsKaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vLi4vLi4vY29uZmlnL2NvbmZpZyc7CmltcG9ydCB7IExvYWRlciB9IGZyb20gJ3RocmVlJzsKaW1wb3J0IHsgTG9hZGVyV29ya2VyTWVzc2FnZSB9IGZyb20gJy4uLy4uLy4uLy4uL3R5cGVzL2VtYmVkZGluZy10eXBlcyc7Ci8vIGltcG9ydCB7IFByb21wdFBvaW50LCBVTUFQUG9pbnRTdHJlYW0sIExvYWRlcldvcmtlck1lc3NhZ2UgfSBmcm9tICcuLi8uLi8uLi90eXBlcy9lbWJlZGRpbmctdHlwZXMnOwoKY29uc3QgREVCVUcgPSBjb25maWcuZGVidWc7CnNlbGYub25tZXNzYWdlID0gZSA9PiB7CiAgLy8gU3RyZWFtIHBvaW50IGRhdGEKICBzd2l0Y2ggKGUuZGF0YS5jb21tYW5kKSB7CiAgICBjYXNlICdzdGFydExvYWREYXRhJzoKICAgICAgewogICAgICAgIGNvbnNvbGUubG9nKCdXb3JrZXI6IHN0YXJ0IHN0cmVhbWluZyBkYXRhJyk7CiAgICAgICAgdGltZWl0KCdTdHJlYW0gZGF0YScsIHRydWUpOwogICAgICAgIGNvbnN0IHVybCA9IGUuZGF0YS5wYXlsb2FkLnVybDsKICAgICAgICBzdGFydExvYWREYXRhKHVybCk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIGRlZmF1bHQ6CiAgICAgIHsKICAgICAgICBjb25zb2xlLmVycm9yKCdXb3JrZXI6IHVua25vd24gbWVzc2FnZScsIGUuZGF0YS5jb21tYW5kKTsKICAgICAgICBicmVhazsKICAgICAgfQogIH0KfTsKY29uc3Qgc3RhcnRMb2FkRGF0YSA9IHVybCA9PiB7CiAgZmV0Y2godXJsKS50aGVuKGFzeW5jIHJlc3BvbnNlID0+IHsKICAgIHZhciBfcmVzcG9uc2UkYm9keTsKICAgIGlmICghcmVzcG9uc2Uub2spIHsKICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGxvYWQgZGF0YScsIHJlc3BvbnNlKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgY29uc3QgcmVhZGVyID0gKF9yZXNwb25zZSRib2R5ID0gcmVzcG9uc2UuYm9keSkgPT09IG51bGwgfHwgX3Jlc3BvbnNlJGJvZHkgPT09IHZvaWQgMCB8fCAoX3Jlc3BvbnNlJGJvZHkgPSBfcmVzcG9uc2UkYm9keS5waXBlVGhyb3VnaChuZXcgVGV4dERlY29kZXJTdHJlYW0oKSkpID09PSBudWxsIHx8IF9yZXNwb25zZSRib2R5ID09PSB2b2lkIDAgfHwgKF9yZXNwb25zZSRib2R5ID0gX3Jlc3BvbnNlJGJvZHkucGlwZVRocm91Z2goc3BsaXRTdHJlYW1UcmFuc2Zvcm0oJ1xuJykpKSA9PT0gbnVsbCB8fCBfcmVzcG9uc2UkYm9keSA9PT0gdm9pZCAwIHx8IChfcmVzcG9uc2UkYm9keSA9IF9yZXNwb25zZSRib2R5LnBpcGVUaHJvdWdoKHBhcnNlSlNPTlRyYW5zZm9ybSgpKSkgPT09IG51bGwgfHwgX3Jlc3BvbnNlJGJvZHkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9yZXNwb25zZSRib2R5LmdldFJlYWRlcigpOwogICAgd2hpbGUgKHRydWUgJiYgcmVhZGVyICE9PSB1bmRlZmluZWQpIHsKICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVhZGVyLnJlYWQoKTsKICAgICAgY29uc3QgcG9pbnQgPSByZXN1bHQudmFsdWU7IC8vIOWkhOeQhueahOaVsOaNrueCuQogICAgICBjb25zdCBkb25lID0gcmVzdWx0LmRvbmU7IC8vIOa1geaYr+WQpue7k+adnwoKICAgICAgaWYgKGRvbmUpIHsKICAgICAgICB0aW1laXQoJ1N0cmVhbSBkYXRhJywgREVCVUcpOwogICAgICAgIHBvaW50U3RyZWFtRmluaXNoZWQoKTsKICAgICAgICBicmVhazsKICAgICAgfSBlbHNlIHsKICAgICAgICBwcm9jZXNzUG9pbnRTdHJlYW0ocG9pbnQpOwoKICAgICAgICAvLyAvLyBUT0RPOiBSZW1vdmUgbWUgaW4gcHJvZAogICAgICAgIC8vIGlmIChsb2FkZWRQb2ludENvdW50ID49IDMwNTAwMCkgewogICAgICAgIC8vICAgcG9pbnRTdHJlYW1GaW5pc2hlZCgpOwogICAgICAgIC8vICAgdGltZWl0KCdTdHJlYW0gZGF0YScsIERFQlVHKTsKICAgICAgICAvLyAgIGJyZWFrOwogICAgICAgIC8vIH0KICAgICAgfQogICAgfQogIH0pOwp9OwoKLyoqCiAqIFByb2Nlc3Mgb25lIGRhdGEgcG9pbnQKICogQHBhcmFtIHBvaW50IExvYWRlZCBkYXRhIHBvaW50CiAqLwpjb25zdCBwcm9jZXNzUG9pbnRTdHJlYW0gPSBwb2ludCA9PiB7CiAgY29uc3QgcHJvbXB0UG9pbnQgPSB7CiAgICB4OiBwb2ludFswXSwKICAgIHk6IHBvaW50WzFdLAogICAgcHJvbXB0OiBwb2ludFsyXSwKICAgIGlkOiBsb2FkZWRQb2ludENvdW50CiAgfTsKICBpZiAocG9pbnQubGVuZ3RoID4gMykgewogICAgcHJvbXB0UG9pbnQudGltZSA9IHBvaW50WzNdOwogIH0KICBpZiAocG9pbnQubGVuZ3RoID4gNCkgewogICAgcHJvbXB0UG9pbnQuZ3JvdXBJRCA9IHBvaW50WzRdOwogIH0KICBwZW5kaW5nRGF0YVBvaW50cy5wdXNoKHByb21wdFBvaW50KTsKICBsb2FkZWRQb2ludENvdW50ICs9IDE7CgogIC8vIE5vdGlmeSB0aGUgbWFpbiB0aHJlYWQgaWYgd2UgaGF2ZSBsb2FkZWQgZW5vdWdoIGRhdGEKICBpZiAocGVuZGluZ0RhdGFQb2ludHMubGVuZ3RoID49IFBPSU5UX1RIUkVTSE9MRCkgewogICAgY29uc3QgcmVzdWx0ID0gewogICAgICBjb21tYW5kOiAndHJhbnNmZXJMb2FkRGF0YScsCiAgICAgIHBheWxvYWQ6IHsKICAgICAgICBpc0ZpcnN0QmF0Y2g6IGxhc3REcmF3blBvaW50cyA9PT0gbnVsbCwKICAgICAgICBpc0xhc3RCYXRjaDogZmFsc2UsCiAgICAgICAgcG9pbnRzOiBwZW5kaW5nRGF0YVBvaW50cywKICAgICAgICBsb2FkZWRQb2ludENvdW50CiAgICAgIH0KICAgIH07CiAgICBwb3N0TWVzc2FnZShyZXN1bHQpOwogICAgc2VudFBvaW50Q291bnQgKz0gcGVuZGluZ0RhdGFQb2ludHMubGVuZ3RoOwogICAgbGFzdERyYXduUG9pbnRzID0gcGVuZGluZ0RhdGFQb2ludHMuc2xpY2UoKTsKICAgIHBlbmRpbmdEYXRhUG9pbnRzID0gW107CiAgfQp9OwoKLyoqCiAqIENvbnN0cnVjdCB0cmVlIGFuZCBub3RpZnkgdGhlIG1haW4gdGhyZWFkIHdoZW4gZmluaXNoIHJlYWRpbmcgYWxsIGRhdGEKICovCmNvbnN0IHBvaW50U3RyZWFtRmluaXNoZWQgPSAoKSA9PiB7CiAgLy8gU2VuZCBhbnkgbGVmdG92ZXIgcG9pbnRzCgogIGNvbnN0IHJlc3VsdCA9IHsKICAgIGNvbW1hbmQ6ICd0cmFuc2ZlckxvYWREYXRhJywKICAgIHBheWxvYWQ6IHsKICAgICAgaXNGaXJzdEJhdGNoOiBsYXN0RHJhd25Qb2ludHMgPT09IG51bGwsCiAgICAgIGlzTGFzdEJhdGNoOiB0cnVlLAogICAgICBwb2ludHM6IHBlbmRpbmdEYXRhUG9pbnRzLAogICAgICBsb2FkZWRQb2ludENvdW50CiAgICB9CiAgfTsKICBwb3N0TWVzc2FnZShyZXN1bHQpOwogIHNlbnRQb2ludENvdW50ICs9IHBlbmRpbmdEYXRhUG9pbnRzLmxlbmd0aDsKICBsYXN0RHJhd25Qb2ludHMgPSBwZW5kaW5nRGF0YVBvaW50cy5zbGljZSgpOwogIHBlbmRpbmdEYXRhUG9pbnRzID0gW107Cn07CmV4cG9ydCBkZWZhdWx0IHNlbGY7"},{"version":3,"names":["splitStreamTransform","parseJSONTransform","timeit","d3","config","Loader","LoaderWorkerMessage","DEBUG","debug","self","onmessage","e","data","command","console","log","url","payload","startLoadData","error","fetch","then","response","_response$body","ok","reader","body","pipeThrough","TextDecoderStream","getReader","undefined","result","read","point","value","done","pointStreamFinished","processPointStream","promptPoint","x","y","prompt","id","loadedPointCount","length","time","groupID","pendingDataPoints","push","POINT_THRESHOLD","isFirstBatch","lastDrawnPoints","isLastBatch","points","postMessage","sentPointCount","slice"],"sources":["/home/yansha/VDProject/VDFrontend/src/components/Embedding/workers/loader.worker.js"],"sourcesContent":["import {\n    splitStreamTransform,\n    parseJSONTransform,\n    timeit\n} from '../../../utils/utils';\n\nimport d3 from '../../../utils/d3-import';\nimport { config } from '../../../config/config';\nimport { Loader } from 'three';\nimport { LoaderWorkerMessage } from '../../../../types/embedding-types';\n// import { PromptPoint, UMAPPointStream, LoaderWorkerMessage } from '../../../types/embedding-types';\n\nconst DEBUG = config.debug;\n\n\nself.onmessage = (e) => {\n    // Stream point data\n    switch (e.data.command) {\n        case 'startLoadData': {\n            console.log('Worker: start streaming data');\n            timeit('Stream data', true);\n\n            const url = e.data.payload.url;\n            startLoadData(url);\n            break;\n        }\n\n        default: {\n            console.error('Worker: unknown message', e.data.command);\n            break;\n        }\n    }\n};\n\n\nconst startLoadData = (url) => {\n    fetch(url).then(async (response) => {\n        if (!response.ok) {\n            console.error('Failed to load data', response);\n            return;\n        }\n\n        const reader = response.body\n            ?.pipeThrough(new TextDecoderStream())\n            ?.pipeThrough(splitStreamTransform('\\n'))\n            ?.pipeThrough(parseJSONTransform())\n            ?.getReader();\n\n        while (true && reader !== undefined) {\n            const result = await reader.read();\n            const point = result.value; // 处理的数据点\n            const done = result.done; // 流是否结束\n\n            if (done) {\n                timeit('Stream data', DEBUG);\n                pointStreamFinished();\n                break;\n            } else {\n                processPointStream(point);\n\n                // // TODO: Remove me in prod\n                // if (loadedPointCount >= 305000) {\n                //   pointStreamFinished();\n                //   timeit('Stream data', DEBUG);\n                //   break;\n                // }\n            }\n        }\n    });\n};\n\n/**\n * Process one data point\n * @param point Loaded data point\n */\nconst processPointStream = (point) => {\n    const promptPoint = {\n        x: point[0],\n        y: point[1],\n        prompt: point[2],\n        id: loadedPointCount\n    };\n\n    if (point.length > 3) {\n        promptPoint.time = point[3];\n    }\n\n    if (point.length > 4) {\n        promptPoint.groupID = point[4];\n    }\n\n    pendingDataPoints.push(promptPoint);\n    loadedPointCount += 1;\n\n    // Notify the main thread if we have loaded enough data\n    if (pendingDataPoints.length >= POINT_THRESHOLD) {\n        const result = {\n            command: 'transferLoadData',\n            payload: {\n                isFirstBatch: lastDrawnPoints === null,\n                isLastBatch: false,\n                points: pendingDataPoints,\n                loadedPointCount\n            }\n        };\n        postMessage(result);\n\n        sentPointCount += pendingDataPoints.length;\n        lastDrawnPoints = pendingDataPoints.slice();\n        pendingDataPoints = [];\n    }\n};\n\n/**\n * Construct tree and notify the main thread when finish reading all data\n */\nconst pointStreamFinished = () => {\n    // Send any leftover points\n\n    const result = {\n        command: 'transferLoadData',\n        payload: {\n            isFirstBatch: lastDrawnPoints === null,\n            isLastBatch: true,\n            points: pendingDataPoints,\n            loadedPointCount\n        }\n    };\n    postMessage(result);\n\n    sentPointCount += pendingDataPoints.length;\n    lastDrawnPoints = pendingDataPoints.slice();\n    pendingDataPoints = [];\n};\n\n\nexport default self;"],"mappings":";;AAAA,SACIA,oBAAoB,EACpBC,kBAAkB,EAClBC,MAAM,QACH,sBAAsB;AAE7B,OAAOC,EAAE,MAAM,0BAA0B;AACzC,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,mCAAmC;AACvE;;AAEA,MAAMC,KAAK,GAAGH,MAAM,CAACI,KAAK;AAG1BC,IAAI,CAACC,SAAS,GAAIC,CAAC,IAAK;EACpB;EACA,QAAQA,CAAC,CAACC,IAAI,CAACC,OAAO;IAClB,KAAK,eAAe;MAAE;QAClBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC3Cb,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;QAE3B,MAAMc,GAAG,GAAGL,CAAC,CAACC,IAAI,CAACK,OAAO,CAACD,GAAG;QAC9BE,aAAa,CAACF,GAAG,CAAC;QAClB;MACJ;IAEA;MAAS;QACLF,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAER,CAAC,CAACC,IAAI,CAACC,OAAO,CAAC;QACxD;MACJ;EACJ;AACJ,CAAC;AAGD,MAAMK,aAAa,GAAIF,GAAG,IAAK;EAC3BI,KAAK,CAACJ,GAAG,CAAC,CAACK,IAAI,CAAC,MAAOC,QAAQ,IAAK;IAAA,IAAAC,cAAA;IAChC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACdV,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEG,QAAQ,CAAC;MAC9C;IACJ;IAEA,MAAMG,MAAM,IAAAF,cAAA,GAAGD,QAAQ,CAACI,IAAI,cAAAH,cAAA,gBAAAA,cAAA,GAAbA,cAAA,CACTI,WAAW,CAAC,IAAIC,iBAAiB,CAAC,CAAC,CAAC,cAAAL,cAAA,gBAAAA,cAAA,GAD3BA,cAAA,CAETI,WAAW,CAAC3B,oBAAoB,CAAC,IAAI,CAAC,CAAC,cAAAuB,cAAA,gBAAAA,cAAA,GAF9BA,cAAA,CAGTI,WAAW,CAAC1B,kBAAkB,CAAC,CAAC,CAAC,cAAAsB,cAAA,uBAHxBA,cAAA,CAITM,SAAS,CAAC,CAAC;IAEjB,OAAO,IAAI,IAAIJ,MAAM,KAAKK,SAAS,EAAE;MACjC,MAAMC,MAAM,GAAG,MAAMN,MAAM,CAACO,IAAI,CAAC,CAAC;MAClC,MAAMC,KAAK,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC;MAC5B,MAAMC,IAAI,GAAGJ,MAAM,CAACI,IAAI,CAAC,CAAC;;MAE1B,IAAIA,IAAI,EAAE;QACNjC,MAAM,CAAC,aAAa,EAAEK,KAAK,CAAC;QAC5B6B,mBAAmB,CAAC,CAAC;QACrB;MACJ,CAAC,MAAM;QACHC,kBAAkB,CAACJ,KAAK,CAAC;;QAEzB;QACA;QACA;QACA;QACA;QACA;MACJ;IACJ;EACJ,CAAC,CAAC;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMI,kBAAkB,GAAIJ,KAAK,IAAK;EAClC,MAAMK,WAAW,GAAG;IAChBC,CAAC,EAAEN,KAAK,CAAC,CAAC,CAAC;IACXO,CAAC,EAAEP,KAAK,CAAC,CAAC,CAAC;IACXQ,MAAM,EAAER,KAAK,CAAC,CAAC,CAAC;IAChBS,EAAE,EAAEC;EACR,CAAC;EAED,IAAIV,KAAK,CAACW,MAAM,GAAG,CAAC,EAAE;IAClBN,WAAW,CAACO,IAAI,GAAGZ,KAAK,CAAC,CAAC,CAAC;EAC/B;EAEA,IAAIA,KAAK,CAACW,MAAM,GAAG,CAAC,EAAE;IAClBN,WAAW,CAACQ,OAAO,GAAGb,KAAK,CAAC,CAAC,CAAC;EAClC;EAEAc,iBAAiB,CAACC,IAAI,CAACV,WAAW,CAAC;EACnCK,gBAAgB,IAAI,CAAC;;EAErB;EACA,IAAII,iBAAiB,CAACH,MAAM,IAAIK,eAAe,EAAE;IAC7C,MAAMlB,MAAM,GAAG;MACXlB,OAAO,EAAE,kBAAkB;MAC3BI,OAAO,EAAE;QACLiC,YAAY,EAAEC,eAAe,KAAK,IAAI;QACtCC,WAAW,EAAE,KAAK;QAClBC,MAAM,EAAEN,iBAAiB;QACzBJ;MACJ;IACJ,CAAC;IACDW,WAAW,CAACvB,MAAM,CAAC;IAEnBwB,cAAc,IAAIR,iBAAiB,CAACH,MAAM;IAC1CO,eAAe,GAAGJ,iBAAiB,CAACS,KAAK,CAAC,CAAC;IAC3CT,iBAAiB,GAAG,EAAE;EAC1B;AACJ,CAAC;;AAED;AACA;AACA;AACA,MAAMX,mBAAmB,GAAGA,CAAA,KAAM;EAC9B;;EAEA,MAAML,MAAM,GAAG;IACXlB,OAAO,EAAE,kBAAkB;IAC3BI,OAAO,EAAE;MACLiC,YAAY,EAAEC,eAAe,KAAK,IAAI;MACtCC,WAAW,EAAE,IAAI;MACjBC,MAAM,EAAEN,iBAAiB;MACzBJ;IACJ;EACJ,CAAC;EACDW,WAAW,CAACvB,MAAM,CAAC;EAEnBwB,cAAc,IAAIR,iBAAiB,CAACH,MAAM;EAC1CO,eAAe,GAAGJ,iBAAiB,CAACS,KAAK,CAAC,CAAC;EAC3CT,iBAAiB,GAAG,EAAE;AAC1B,CAAC;AAGD,eAAetC,IAAI","ignoreList":[]}]}