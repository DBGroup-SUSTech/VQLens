{"remainingRequest":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js!/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js??ref--17!/home/yansha/VDProject/VDFrontend/src/components/Embedding/EmbeddingLabel.js","dependencies":[{"path":"/home/yansha/VDProject/VDFrontend/src/components/Embedding/EmbeddingLabel.js","mtime":1744442733392},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1744442733384},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1744442733384},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["timeit","rectsIntersect","d3","config","computePosition","flip","shift","offset","arrow","IDEAL_TILE_WIDTH","LABEL_SPLIT","labelMouseenterTimer","labelMouseleaveTimer","updatePopperTooltip","tooltip","anchor","text","placement","length","slice","lastIndexOf","concat","arrowElement","querySelector","contentElement","innerHTML","middleware","element","then","_ref","x","y","middlewareData","style","left","top","_middlewareData$arrow","arrowX","arrowY","staticSide","includes","right","bottom","roundRect","ctx","width","height","r","radius","tl","tr","br","bl","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","redrawTopicGrid","that","strokeColor","arguments","undefined","topicCtxs","topicCanvases","map","c","node","getContext","_iterator","_createForOfIteratorHelper","_step","s","n","done","topicCtx","value","setTransform","clearRect","svgFullSize","translate","curZoomTransform","scale","k","err","e","f","drawTopicGrid","showGrid","idealTreeLevel","getIdealTopicTreeLevel","lastGridTreeLevels","lastLevel","classed","on","push","_iterator2","_step2","_loop","treeLevel","canvas","v","topicTree","topicLevelTrees","get","treeExtent","extent","tileWidth","Math","pow","tileScreenWidth","abs","xScale","zoomBox","getCurZoomBox","tiles","data","d","tileRect","yScale","name","label","filter","save","strokeStyle","anyTrue","showContours","gridColorLight","gridColorDark","lineWidth","_iterator3","_step3","tile","stroke","restore","_ret","size","bestLevel","bestDistance","Infinity","_iterator4","keys","_step4","level","treeViewWidth","tileNum","tileSize","scaledTileWidth","max","mouseoverLabel","offx","hideHighlights","bottomGroup","topSvg","select","labelGroup","topGroup","oldBottomRect","oldTopRect","hoverDelay","showLabel","removeHighlight","clearTimeout","setTimeout","interrupt","remove","tooltipBottom","classList","add","x0","invert","invertX","y0","invertY","tree","sqrt","find","empty","rect","append","attr","clone","topRect","appendChild","transition","duration","ease","easeCubicInOut","items","reduce","a","b","allTrue"],"sources":["/home/yansha/VDProject/VDFrontend/src/components/Embedding/EmbeddingLabel.js"],"sourcesContent":["\nimport { timeit, rectsIntersect } from '../../utils/utils';\n\nimport d3 from '../../utils/d3-import';\nimport { config } from '../../config/config';\nimport { computePosition, flip, shift, offset, arrow } from '@floating-ui/dom';\n\nconst IDEAL_TILE_WIDTH = 35;\nconst LABEL_SPLIT = '-';\nlet labelMouseenterTimer = null;\nlet labelMouseleaveTimer = null;\n\n\nexport const updatePopperTooltip = (tooltip, anchor, text, placement) => {\n    // 如果文本太长则截断\n    if (text.length > 300) {\n        text = text.slice(0, 300);\n        text = text.slice(0, text.lastIndexOf(' '));\n        text = text.concat('...');\n    }\n\n    const arrowElement = tooltip.querySelector('.popper-arrow');\n    const contentElement = tooltip.querySelector('.popper-content');\n    contentElement.innerHTML = text;\n\n    computePosition(anchor, tooltip, {\n        placement: placement,\n        middleware: [offset(6), flip(), shift(), arrow({ element: arrowElement })]\n    }).then(({ x, y, placement, middlewareData }) => {\n        tooltip.style.left = `${x}px`;\n        tooltip.style.top = `${y}px`;\n\n        const { x: arrowX, y: arrowY } = middlewareData.arrow;\n        let staticSide = 'bottom';\n        if (placement.includes('top')) staticSide = 'bottom';\n        if (placement.includes('right')) staticSide = 'left';\n        if (placement.includes('bottom')) staticSide = 'top';\n        if (placement.includes('left')) staticSide = 'right';\n\n        arrowElement.style.left = arrowX ? `${arrowX}px` : '';\n        arrowElement.style.top = arrowY ? `${arrowY}px` : '';\n        arrowElement.style.right = '';\n        arrowElement.style.bottom = '';\n        arrowElement.style[staticSide] = '-4px';\n    });\n};\n\nfunction roundRect(ctx, x, y, width, height, r) {\n    const radius = {\n        tl: 0,\n        tr: 0,\n        br: 0,\n        bl: 0\n    };\n\n    if (typeof r === 'number') {\n        radius.tl = r;\n        radius.tr = r;\n        radius.br = r;\n        radius.bl = r;\n    } else {\n        radius.tl = r[0];\n        radius.tr = r[1];\n        radius.br = r[2];\n        radius.bl = r[3];\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius.br,\n        y + height\n    );\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n}\n\nexport function redrawTopicGrid(that, strokeColor = null) {\n\n    const topicCtxs = that.topicCanvases.map(\n        c => c.node().getContext('2d')\n    );\n\n    for (const topicCtx of topicCtxs) {\n        topicCtx.setTransform(1, 0, 0, 1, 0, 0);\n        topicCtx.clearRect(0, 0, that.svgFullSize.width, that.svgFullSize.height);\n        topicCtx.translate(that.curZoomTransform.x, that.curZoomTransform.y);\n        topicCtx.scale(that.curZoomTransform.k, that.curZoomTransform.k);\n    }\n\n\n    drawTopicGrid(that, strokeColor);\n}\n\n\nexport function drawTopicGrid(that, strokeColor = null) {\n    if (!that.showGrid) return;\n\n    // Choose the topic tree level based on the current zoom level\n    const idealTreeLevel = getIdealTopicTreeLevel(that);\n    if (idealTreeLevel === null) return;\n\n    // Crossfade two canvas elements if tree level changes\n    if (that.lastGridTreeLevels.length > 0) {\n        const lastLevel = that.lastGridTreeLevels[that.lastGridTreeLevels.length - 1];\n\n\n        // Tree level changes\n        if (idealTreeLevel !== lastLevel) {\n            // Fade the last canvas\n            that.topicCanvases[lastLevel % 2]\n                .classed('faded', true)\n                .on('transitionend', () => {\n                    if (that.lastGridTreeLevels[0] === lastLevel) {\n                        // No need to draw this faded canvas\n                        that.lastGridTreeLevels.shift();\n                    }\n                });\n\n            // Show the current canvas\n            that.topicCanvases[idealTreeLevel % 2].classed('faded', false);\n\n            // Track this new level\n            that.lastGridTreeLevels.push(idealTreeLevel);\n\n            // The stack only tracks two levels\n            if (that.lastGridTreeLevels.length > 2) {\n                that.lastGridTreeLevels.shift();\n            }\n        }\n    }\n\n    if (that.lastGridTreeLevels.length === 0) {\n        that.lastGridTreeLevels.push(idealTreeLevel);\n    }\n\n    for (const treeLevel of that.lastGridTreeLevels) {\n        const canvas = that.topicCanvases[treeLevel % 2].node();\n        const ctx = canvas.getContext('2d');\n        if (ctx === null) return;\n\n        const topicTree = that.topicLevelTrees.get(treeLevel);\n        const treeExtent = topicTree.extent();\n        const tileWidth = (treeExtent[1][0] - treeExtent[0][0]) / Math.pow(2, treeLevel);\n        const tileScreenWidth = Math.abs(that.xScale(tileWidth) - that.xScale(0));\n\n        // Only draw the tiles that are visible\n        const zoomBox = that.getCurZoomBox();\n\n        const tiles = topicTree\n            .data()\n            .map(d => {\n                const tileRect = {\n                    x: that.xScale(d[0] - tileWidth / 2),\n                    // x: that.xScale(d[0] - tileWidth / 2) + (that.svgFullSize.width - that.svgFullSize.height) / 2,\n                    y: that.yScale(d[1] + tileWidth / 2),\n                    width: tileScreenWidth,\n                    height: tileScreenWidth,\n                    name: `${d[0]}, ${d[1]}`,\n                    label: d[2]\n                };\n                return tileRect;\n            })\n            .filter(d => rectsIntersect(d, zoomBox));\n\n        // Draw the tiles on a canvas\n        ctx.save();\n\n        // Use specified stroke color or default based on contours\n        if (strokeColor) {\n            ctx.strokeStyle = strokeColor;\n        } else {\n            if (anyTrue(that.showContours)) {\n                ctx.strokeStyle = config.gridColorLight;\n            } else {\n                ctx.strokeStyle = config.gridColorDark;\n            }\n        }\n        ctx.lineWidth = 1 / (4 * that.curZoomTransform.k);\n\n        for (const tile of tiles) {\n            ctx.moveTo(tile.x, tile.y);\n            roundRect(ctx, tile.x, tile.y, tile.width, tile.height, 4 / that.curZoomTransform.k);\n            ctx.stroke();\n        }\n        ctx.restore();\n    }\n}\n\nexport function getIdealTopicTreeLevel(that) {\n\n    // 根据当前的缩放级别选择最佳的topic树级别进行展示\n\n    if (that.topicLevelTrees.size < 1) return null;\n\n    let bestLevel = -1;\n    let bestDistance = Infinity;\n\n    for (const level of that.topicLevelTrees.keys()) {\n        const extent = that.topicLevelTrees.get(level).extent();\n        const treeViewWidth = extent[1][0] - extent[0][0];\n        const tileNum = Math.pow(2, level);\n        const tileSize = treeViewWidth / tileNum;\n        const scaledTileWidth =\n            Math.max(\n                that.xScale(tileSize) - that.xScale(0),\n                that.yScale(tileSize) - that.yScale(0)\n            ) * that.curZoomTransform.k;\n\n        if (Math.abs(scaledTileWidth - IDEAL_TILE_WIDTH) < bestDistance) {\n            bestLevel = level;\n            bestDistance = Math.abs(scaledTileWidth - IDEAL_TILE_WIDTH);\n        }\n    }\n\n    return bestLevel;\n}\n\n\nexport function mouseoverLabel(that, x, y) {\n    // const offx = (that.svgFullSize.width - that.svgFullSize.height) / 2;\n    const offx = 0;\n    if (!that.showGrid) return;\n    if (that.hideHighlights) return;\n\n    const bottomGroup = that.topSvg.select('g.top-content g.topics-bottom');\n    const labelGroup = that.topSvg.select('g.top-content g.topics');\n    const topGroup = that.topSvg.select('g.top-content g.topics-top');\n\n    const oldBottomRect = bottomGroup.select('rect.highlight-tile');\n    const oldTopRect = topGroup.select('rect.highlight-tile');\n\n    const hoverDelay = that.showLabel ? 700 : 300;\n\n    const removeHighlight = () => {\n        if (labelMouseleaveTimer !== null) {\n            clearTimeout(labelMouseleaveTimer);\n            labelMouseleaveTimer = null;\n        }\n\n        // Clear the highlight and tooltip in a short delay\n        labelMouseleaveTimer = setTimeout(() => {\n            labelGroup.classed('faded', false);\n            oldTopRect.interrupt('top-fade').remove();\n            oldBottomRect.remove();\n            that.tooltipBottom.classList.add('hidden');\n            labelMouseleaveTimer = null;\n        }, 50);\n    };\n\n    // Remove the tile if x and y are null\n    if (x === null || y === null) {\n        removeHighlight();\n        return;\n    }\n\n    // Get the coordinate in the embedding coordinate\n    const x0 = that.xScale.invert(that.curZoomTransform.invertX(x));\n    const y0 = that.yScale.invert(that.curZoomTransform.invertY(y));\n\n    // Get the corresponding tree\n    const idealTreeLevel = getIdealTopicTreeLevel(that);\n    const tree = that.topicLevelTrees.get(idealTreeLevel);\n    const treeExtent = tree.extent();\n    const tileWidth = (treeExtent[1][0] - treeExtent[0][0]) / Math.pow(2, idealTreeLevel);\n    const tileScreenWidth = Math.abs(that.xScale(tileWidth) - that.xScale(0));\n\n    const radius = Math.sqrt(2) * tileWidth;\n    const tile = tree.find(x0, y0, radius);\n\n    // No tile near the mouse location\n    if (tile === undefined) {\n        if (!oldBottomRect.empty()) {\n            removeHighlight();\n        }\n        return;\n    }\n\n    if (oldBottomRect.empty()) {\n        // Add a new highlight rect at the bottom layer\n        const rect = bottomGroup\n            .append('rect')\n            .attr('class', 'highlight-tile')\n            .attr('x', that.xScale(tile[0]) - tileScreenWidth / 2)\n            .attr('y', that.yScale(tile[1]) - tileScreenWidth / 2)\n            .attr('width', tileScreenWidth)\n            .attr('height', tileScreenWidth)\n            .attr('rx', 4 / that.curZoomTransform.k)\n            .attr('ry', 4 / that.curZoomTransform.k)\n            .style('stroke-width', 2.6 / that.curZoomTransform.k)\n            .style('stroke', anyTrue(that.showContours) ? config.gridColorLight : config.gridColorDark);\n\n        // Show the tooltip\n        updatePopperTooltip(that.tooltipBottom, rect.node(), tile[2], 'bottom');\n\n        // Insert a clone to the top layer\n        const clone = rect.clone(true).style('stroke', null).remove().node();\n        const topRect = d3.select((topGroup.node()).appendChild(clone));\n\n        labelMouseenterTimer = tile[2];\n        topRect\n            .style('opacity', 0)\n            .transition('top-fade')\n            .duration(hoverDelay)\n            .ease(d3.easeCubicInOut)\n            .on('end', () => {\n                topRect.style('opacity', 1);\n                labelGroup.classed('faded', true);\n                that.tooltipBottom.classList.remove('hidden');\n                labelMouseenterTimer = null;\n            });\n    } else {\n        // Update the old highlight rect\n        oldBottomRect\n            .attr('x', that.xScale(tile[0]) - tileScreenWidth / 2)\n            .attr('y', that.yScale(tile[1]) - tileScreenWidth / 2)\n            .attr('width', tileScreenWidth)\n            .attr('height', tileScreenWidth)\n            .attr('rx', 4 / that.curZoomTransform.k)\n            .attr('ry', 4 / that.curZoomTransform.k)\n            .style('stroke-width', 2.6 / that.curZoomTransform.k);\n\n        oldTopRect\n            .attr('x', that.xScale(tile[0]) - tileScreenWidth / 2)\n            .attr('y', that.yScale(tile[1]) - tileScreenWidth / 2)\n            .attr('width', tileScreenWidth)\n            .attr('height', tileScreenWidth)\n            .attr('rx', 4 / that.curZoomTransform.k)\n            .attr('ry', 4 / that.curZoomTransform.k)\n            .style('stroke-width', 2.6 / that.curZoomTransform.k);\n\n        // Show the tooltip\n        updatePopperTooltip(that.tooltipBottom, oldBottomRect.node(), tile[2], 'bottom');\n\n        if (labelMouseenterTimer === null) {\n            that.tooltipBottom.classList.remove('hidden');\n        } else {\n            labelMouseenterTimer = tile[2];\n            oldTopRect\n                .interrupt('top-fade')\n                .style('opacity', 0)\n                .transition('top-fade')\n                .duration(hoverDelay)\n                .ease(d3.easeCubicInOut)\n                .on('end', () => {\n                    oldTopRect.style('opacity', 1);\n                    labelGroup.classed('faded', true);\n                    that.tooltipBottom.classList.remove('hidden');\n                    labelMouseenterTimer = null;\n                });\n        }\n    }\n}\n\nconst anyTrue = (items) => items.reduce((a, b) => a || b, false);\nconst allTrue = (items) => items.reduce((a, b) => a && b, true);\n"],"mappings":"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","ignoreList":[]}]}