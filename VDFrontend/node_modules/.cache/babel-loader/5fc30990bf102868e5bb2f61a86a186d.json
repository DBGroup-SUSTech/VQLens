{"remainingRequest":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js!/home/yansha/VDProject/VDFrontend/src/components/Embedding/EmbeddingLabel.js","dependencies":[{"path":"/home/yansha/VDProject/VDFrontend/src/components/Embedding/EmbeddingLabel.js","mtime":1735302841221},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1730469387355},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuaXRlcmF0b3IubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLnJlZHVjZS5qcyI7CmltcG9ydCB7IHRpbWVpdCwgcmVjdHNJbnRlcnNlY3QgfSBmcm9tICcuLi8uLi91dGlscy91dGlscyc7CmltcG9ydCBkMyBmcm9tICcuLi8uLi91dGlscy9kMy1pbXBvcnQnOwppbXBvcnQgeyBjb25maWcgfSBmcm9tICcuLi8uLi9jb25maWcvY29uZmlnJzsKY29uc3QgSURFQUxfVElMRV9XSURUSCA9IDM1Owpjb25zdCBMQUJFTF9TUExJVCA9ICctJzsKbGV0IGxhYmVsTW91c2VlbnRlclRpbWVyID0gbnVsbDsKbGV0IGxhYmVsTW91c2VsZWF2ZVRpbWVyID0gbnVsbDsKZnVuY3Rpb24gcm91bmRSZWN0KGN0eCwgeCwgeSwgd2lkdGgsIGhlaWdodCwgcikgewogIGNvbnN0IHJhZGl1cyA9IHsKICAgIHRsOiAwLAogICAgdHI6IDAsCiAgICBicjogMCwKICAgIGJsOiAwCiAgfTsKICBpZiAodHlwZW9mIHIgPT09ICdudW1iZXInKSB7CiAgICByYWRpdXMudGwgPSByOwogICAgcmFkaXVzLnRyID0gcjsKICAgIHJhZGl1cy5iciA9IHI7CiAgICByYWRpdXMuYmwgPSByOwogIH0gZWxzZSB7CiAgICByYWRpdXMudGwgPSByWzBdOwogICAgcmFkaXVzLnRyID0gclsxXTsKICAgIHJhZGl1cy5iciA9IHJbMl07CiAgICByYWRpdXMuYmwgPSByWzNdOwogIH0KICBjdHguYmVnaW5QYXRoKCk7CiAgY3R4Lm1vdmVUbyh4ICsgcmFkaXVzLnRsLCB5KTsKICBjdHgubGluZVRvKHggKyB3aWR0aCAtIHJhZGl1cy50ciwgeSk7CiAgY3R4LnF1YWRyYXRpY0N1cnZlVG8oeCArIHdpZHRoLCB5LCB4ICsgd2lkdGgsIHkgKyByYWRpdXMudHIpOwogIGN0eC5saW5lVG8oeCArIHdpZHRoLCB5ICsgaGVpZ2h0IC0gcmFkaXVzLmJyKTsKICBjdHgucXVhZHJhdGljQ3VydmVUbyh4ICsgd2lkdGgsIHkgKyBoZWlnaHQsIHggKyB3aWR0aCAtIHJhZGl1cy5iciwgeSArIGhlaWdodCk7CiAgY3R4LmxpbmVUbyh4ICsgcmFkaXVzLmJsLCB5ICsgaGVpZ2h0KTsKICBjdHgucXVhZHJhdGljQ3VydmVUbyh4LCB5ICsgaGVpZ2h0LCB4LCB5ICsgaGVpZ2h0IC0gcmFkaXVzLmJsKTsKICBjdHgubGluZVRvKHgsIHkgKyByYWRpdXMudGwpOwogIGN0eC5xdWFkcmF0aWNDdXJ2ZVRvKHgsIHksIHggKyByYWRpdXMudGwsIHkpOwogIGN0eC5jbG9zZVBhdGgoKTsKfQpleHBvcnQgZnVuY3Rpb24gcmVkcmF3VG9waWNHcmlkKHRoYXQsIHN0cm9rZUNvbG9yID0gbnVsbCkgewogIGNvbnN0IHRvcGljQ3R4cyA9IHRoYXQudG9waWNDYW52YXNlcy5tYXAoYyA9PiBjLm5vZGUoKS5nZXRDb250ZXh0KCcyZCcpKTsKICBmb3IgKGNvbnN0IHRvcGljQ3R4IG9mIHRvcGljQ3R4cykgewogICAgdG9waWNDdHguc2V0VHJhbnNmb3JtKDEsIDAsIDAsIDEsIDAsIDApOwogICAgdG9waWNDdHguY2xlYXJSZWN0KDAsIDAsIHRoYXQuc3ZnRnVsbFNpemUud2lkdGgsIHRoYXQuc3ZnRnVsbFNpemUuaGVpZ2h0KTsKICAgIHRvcGljQ3R4LnRyYW5zbGF0ZSh0aGF0LmN1clpvb21UcmFuc2Zvcm0ueCwgdGhhdC5jdXJab29tVHJhbnNmb3JtLnkpOwogICAgdG9waWNDdHguc2NhbGUodGhhdC5jdXJab29tVHJhbnNmb3JtLmssIHRoYXQuY3VyWm9vbVRyYW5zZm9ybS5rKTsKICB9CiAgZHJhd1RvcGljR3JpZCh0aGF0LCBzdHJva2VDb2xvcik7Cn0KZXhwb3J0IGZ1bmN0aW9uIGRyYXdUb3BpY0dyaWQodGhhdCwgc3Ryb2tlQ29sb3IgPSBudWxsKSB7CiAgaWYgKCF0aGF0LnNob3dHcmlkKSByZXR1cm47CgogIC8vIENob29zZSB0aGUgdG9waWMgdHJlZSBsZXZlbCBiYXNlZCBvbiB0aGUgY3VycmVudCB6b29tIGxldmVsCiAgY29uc3QgaWRlYWxUcmVlTGV2ZWwgPSBnZXRJZGVhbFRvcGljVHJlZUxldmVsKHRoYXQpOwogIGlmIChpZGVhbFRyZWVMZXZlbCA9PT0gbnVsbCkgcmV0dXJuOwoKICAvLyBDcm9zc2ZhZGUgdHdvIGNhbnZhcyBlbGVtZW50cyBpZiB0cmVlIGxldmVsIGNoYW5nZXMKICBpZiAodGhhdC5sYXN0R3JpZFRyZWVMZXZlbHMubGVuZ3RoID4gMCkgewogICAgY29uc3QgbGFzdExldmVsID0gdGhhdC5sYXN0R3JpZFRyZWVMZXZlbHNbdGhhdC5sYXN0R3JpZFRyZWVMZXZlbHMubGVuZ3RoIC0gMV07CgogICAgLy8gVHJlZSBsZXZlbCBjaGFuZ2VzCiAgICBpZiAoaWRlYWxUcmVlTGV2ZWwgIT09IGxhc3RMZXZlbCkgewogICAgICAvLyBGYWRlIHRoZSBsYXN0IGNhbnZhcwogICAgICB0aGF0LnRvcGljQ2FudmFzZXNbbGFzdExldmVsICUgMl0uY2xhc3NlZCgnZmFkZWQnLCB0cnVlKS5vbigndHJhbnNpdGlvbmVuZCcsICgpID0+IHsKICAgICAgICBpZiAodGhhdC5sYXN0R3JpZFRyZWVMZXZlbHNbMF0gPT09IGxhc3RMZXZlbCkgewogICAgICAgICAgLy8gTm8gbmVlZCB0byBkcmF3IHRoaXMgZmFkZWQgY2FudmFzCiAgICAgICAgICB0aGF0Lmxhc3RHcmlkVHJlZUxldmVscy5zaGlmdCgpOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICAvLyBTaG93IHRoZSBjdXJyZW50IGNhbnZhcwogICAgICB0aGF0LnRvcGljQ2FudmFzZXNbaWRlYWxUcmVlTGV2ZWwgJSAyXS5jbGFzc2VkKCdmYWRlZCcsIGZhbHNlKTsKCiAgICAgIC8vIFRyYWNrIHRoaXMgbmV3IGxldmVsCiAgICAgIHRoYXQubGFzdEdyaWRUcmVlTGV2ZWxzLnB1c2goaWRlYWxUcmVlTGV2ZWwpOwoKICAgICAgLy8gVGhlIHN0YWNrIG9ubHkgdHJhY2tzIHR3byBsZXZlbHMKICAgICAgaWYgKHRoYXQubGFzdEdyaWRUcmVlTGV2ZWxzLmxlbmd0aCA+IDIpIHsKICAgICAgICB0aGF0Lmxhc3RHcmlkVHJlZUxldmVscy5zaGlmdCgpOwogICAgICB9CiAgICB9CiAgfQogIGlmICh0aGF0Lmxhc3RHcmlkVHJlZUxldmVscy5sZW5ndGggPT09IDApIHsKICAgIHRoYXQubGFzdEdyaWRUcmVlTGV2ZWxzLnB1c2goaWRlYWxUcmVlTGV2ZWwpOwogIH0KICBmb3IgKGNvbnN0IHRyZWVMZXZlbCBvZiB0aGF0Lmxhc3RHcmlkVHJlZUxldmVscykgewogICAgY29uc3QgY2FudmFzID0gdGhhdC50b3BpY0NhbnZhc2VzW3RyZWVMZXZlbCAlIDJdLm5vZGUoKTsKICAgIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpOwogICAgaWYgKGN0eCA9PT0gbnVsbCkgcmV0dXJuOwogICAgY29uc3QgdG9waWNUcmVlID0gdGhhdC50b3BpY0xldmVsVHJlZXMuZ2V0KHRyZWVMZXZlbCk7CiAgICBjb25zdCB0cmVlRXh0ZW50ID0gdG9waWNUcmVlLmV4dGVudCgpOwogICAgY29uc3QgdGlsZVdpZHRoID0gKHRyZWVFeHRlbnRbMV1bMF0gLSB0cmVlRXh0ZW50WzBdWzBdKSAvIE1hdGgucG93KDIsIHRyZWVMZXZlbCk7CiAgICBjb25zdCB0aWxlU2NyZWVuV2lkdGggPSBNYXRoLmFicyh0aGF0LnhTY2FsZSh0aWxlV2lkdGgpIC0gdGhhdC54U2NhbGUoMCkpOwoKICAgIC8vIE9ubHkgZHJhdyB0aGUgdGlsZXMgdGhhdCBhcmUgdmlzaWJsZQogICAgY29uc3Qgem9vbUJveCA9IHRoYXQuZ2V0Q3VyWm9vbUJveCgpOwogICAgY29uc3QgdGlsZXMgPSB0b3BpY1RyZWUuZGF0YSgpLm1hcChkID0+IHsKICAgICAgY29uc3QgdGlsZVJlY3QgPSB7CiAgICAgICAgeDogdGhhdC54U2NhbGUoZFswXSAtIHRpbGVXaWR0aCAvIDIpICsgKHRoYXQuc3ZnRnVsbFNpemUud2lkdGggLSB0aGF0LnN2Z0Z1bGxTaXplLmhlaWdodCkgLyAyLAogICAgICAgIHk6IHRoYXQueVNjYWxlKGRbMV0gKyB0aWxlV2lkdGggLyAyKSwKICAgICAgICB3aWR0aDogdGlsZVNjcmVlbldpZHRoLAogICAgICAgIGhlaWdodDogdGlsZVNjcmVlbldpZHRoLAogICAgICAgIG5hbWU6IGAke2RbMF19LCAke2RbMV19YCwKICAgICAgICBsYWJlbDogZFsyXQogICAgICB9OwogICAgICByZXR1cm4gdGlsZVJlY3Q7CiAgICB9KS5maWx0ZXIoZCA9PiByZWN0c0ludGVyc2VjdChkLCB6b29tQm94KSk7CgogICAgLy8gRHJhdyB0aGUgdGlsZXMgb24gYSBjYW52YXMKICAgIGN0eC5zYXZlKCk7CgogICAgLy8gVXNlIHNwZWNpZmllZCBzdHJva2UgY29sb3Igb3IgZGVmYXVsdCBiYXNlZCBvbiBjb250b3VycwogICAgaWYgKHN0cm9rZUNvbG9yKSB7CiAgICAgIGN0eC5zdHJva2VTdHlsZSA9IHN0cm9rZUNvbG9yOwogICAgfSBlbHNlIHsKICAgICAgaWYgKGFueVRydWUodGhhdC5zaG93Q29udG91cnMpKSB7CiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gY29uZmlnLmdyaWRDb2xvckxpZ2h0OwogICAgICB9IGVsc2UgewogICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IGNvbmZpZy5ncmlkQ29sb3JEYXJrOwogICAgICB9CiAgICB9CiAgICBjdHgubGluZVdpZHRoID0gMSAvICg0ICogdGhhdC5jdXJab29tVHJhbnNmb3JtLmspOwogICAgZm9yIChjb25zdCB0aWxlIG9mIHRpbGVzKSB7CiAgICAgIGN0eC5tb3ZlVG8odGlsZS54LCB0aWxlLnkpOwogICAgICByb3VuZFJlY3QoY3R4LCB0aWxlLngsIHRpbGUueSwgdGlsZS53aWR0aCwgdGlsZS5oZWlnaHQsIDQgLyB0aGF0LmN1clpvb21UcmFuc2Zvcm0uayk7CiAgICAgIGN0eC5zdHJva2UoKTsKICAgIH0KICAgIGN0eC5yZXN0b3JlKCk7CiAgfQp9CmV4cG9ydCBmdW5jdGlvbiBnZXRJZGVhbFRvcGljVHJlZUxldmVsKHRoYXQpIHsKICAvLyDmoLnmja7lvZPliY3nmoTnvKnmlL7nuqfliKvpgInmi6nmnIDkvbPnmoR0b3BpY+agkee6p+WIq+i/m+ihjOWxleekugoKICBpZiAodGhhdC50b3BpY0xldmVsVHJlZXMuc2l6ZSA8IDEpIHJldHVybiBudWxsOwogIGxldCBiZXN0TGV2ZWwgPSAtMTsKICBsZXQgYmVzdERpc3RhbmNlID0gSW5maW5pdHk7CiAgZm9yIChjb25zdCBsZXZlbCBvZiB0aGF0LnRvcGljTGV2ZWxUcmVlcy5rZXlzKCkpIHsKICAgIGNvbnN0IGV4dGVudCA9IHRoYXQudG9waWNMZXZlbFRyZWVzLmdldChsZXZlbCkuZXh0ZW50KCk7CiAgICBjb25zdCB0cmVlVmlld1dpZHRoID0gZXh0ZW50WzFdWzBdIC0gZXh0ZW50WzBdWzBdOwogICAgY29uc3QgdGlsZU51bSA9IE1hdGgucG93KDIsIGxldmVsKTsKICAgIGNvbnN0IHRpbGVTaXplID0gdHJlZVZpZXdXaWR0aCAvIHRpbGVOdW07CiAgICBjb25zdCBzY2FsZWRUaWxlV2lkdGggPSBNYXRoLm1heCh0aGF0LnhTY2FsZSh0aWxlU2l6ZSkgLSB0aGF0LnhTY2FsZSgwKSwgdGhhdC55U2NhbGUodGlsZVNpemUpIC0gdGhhdC55U2NhbGUoMCkpICogdGhhdC5jdXJab29tVHJhbnNmb3JtLms7CiAgICBpZiAoTWF0aC5hYnMoc2NhbGVkVGlsZVdpZHRoIC0gSURFQUxfVElMRV9XSURUSCkgPCBiZXN0RGlzdGFuY2UpIHsKICAgICAgYmVzdExldmVsID0gbGV2ZWw7CiAgICAgIGJlc3REaXN0YW5jZSA9IE1hdGguYWJzKHNjYWxlZFRpbGVXaWR0aCAtIElERUFMX1RJTEVfV0lEVEgpOwogICAgfQogIH0KICByZXR1cm4gYmVzdExldmVsOwp9CmNvbnN0IGFueVRydWUgPSBpdGVtcyA9PiBpdGVtcy5yZWR1Y2UoKGEsIGIpID0+IGEgfHwgYiwgZmFsc2UpOwpjb25zdCBhbGxUcnVlID0gaXRlbXMgPT4gaXRlbXMucmVkdWNlKChhLCBiKSA9PiBhICYmIGIsIHRydWUpOw=="},{"version":3,"names":["timeit","rectsIntersect","d3","config","IDEAL_TILE_WIDTH","LABEL_SPLIT","labelMouseenterTimer","labelMouseleaveTimer","roundRect","ctx","x","y","width","height","r","radius","tl","tr","br","bl","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","redrawTopicGrid","that","strokeColor","topicCtxs","topicCanvases","map","c","node","getContext","topicCtx","setTransform","clearRect","svgFullSize","translate","curZoomTransform","scale","k","drawTopicGrid","showGrid","idealTreeLevel","getIdealTopicTreeLevel","lastGridTreeLevels","length","lastLevel","classed","on","shift","push","treeLevel","canvas","topicTree","topicLevelTrees","get","treeExtent","extent","tileWidth","Math","pow","tileScreenWidth","abs","xScale","zoomBox","getCurZoomBox","tiles","data","d","tileRect","yScale","name","label","filter","save","strokeStyle","anyTrue","showContours","gridColorLight","gridColorDark","lineWidth","tile","stroke","restore","size","bestLevel","bestDistance","Infinity","level","keys","treeViewWidth","tileNum","tileSize","scaledTileWidth","max","items","reduce","a","b","allTrue"],"sources":["/home/yansha/VDProject/VDFrontend/src/components/Embedding/EmbeddingLabel.js"],"sourcesContent":["\nimport { timeit, rectsIntersect } from '../../utils/utils';\n\nimport d3 from '../../utils/d3-import';\nimport { config } from '../../config/config';\n\nconst IDEAL_TILE_WIDTH = 35;\nconst LABEL_SPLIT = '-';\nlet labelMouseenterTimer = null;\nlet labelMouseleaveTimer = null;\n\n\nfunction roundRect(ctx, x, y, width, height, r) {\n    const radius = {\n        tl: 0,\n        tr: 0,\n        br: 0,\n        bl: 0\n    };\n\n    if (typeof r === 'number') {\n        radius.tl = r;\n        radius.tr = r;\n        radius.br = r;\n        radius.bl = r;\n    } else {\n        radius.tl = r[0];\n        radius.tr = r[1];\n        radius.br = r[2];\n        radius.bl = r[3];\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius.br,\n        y + height\n    );\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n}\n\nexport function redrawTopicGrid(that, strokeColor = null) {\n\n    const topicCtxs = that.topicCanvases.map(\n        c => c.node().getContext('2d')\n    );\n\n    for (const topicCtx of topicCtxs) {\n        topicCtx.setTransform(1, 0, 0, 1, 0, 0);\n        topicCtx.clearRect(0, 0, that.svgFullSize.width, that.svgFullSize.height);\n        topicCtx.translate(that.curZoomTransform.x, that.curZoomTransform.y);\n        topicCtx.scale(that.curZoomTransform.k, that.curZoomTransform.k);\n    }\n\n\n    drawTopicGrid(that, strokeColor);\n}\n\n\nexport function drawTopicGrid(that, strokeColor = null) {\n    if (!that.showGrid) return;\n\n    // Choose the topic tree level based on the current zoom level\n    const idealTreeLevel = getIdealTopicTreeLevel(that);\n    if (idealTreeLevel === null) return;\n\n    // Crossfade two canvas elements if tree level changes\n    if (that.lastGridTreeLevels.length > 0) {\n        const lastLevel = that.lastGridTreeLevels[that.lastGridTreeLevels.length - 1];\n\n\n        // Tree level changes\n        if (idealTreeLevel !== lastLevel) {\n            // Fade the last canvas\n            that.topicCanvases[lastLevel % 2]\n                .classed('faded', true)\n                .on('transitionend', () => {\n                    if (that.lastGridTreeLevels[0] === lastLevel) {\n                        // No need to draw this faded canvas\n                        that.lastGridTreeLevels.shift();\n                    }\n                });\n\n            // Show the current canvas\n            that.topicCanvases[idealTreeLevel % 2].classed('faded', false);\n\n            // Track this new level\n            that.lastGridTreeLevels.push(idealTreeLevel);\n\n            // The stack only tracks two levels\n            if (that.lastGridTreeLevels.length > 2) {\n                that.lastGridTreeLevels.shift();\n            }\n        }\n    }\n\n    if (that.lastGridTreeLevels.length === 0) {\n        that.lastGridTreeLevels.push(idealTreeLevel);\n    }\n\n    for (const treeLevel of that.lastGridTreeLevels) {\n        const canvas = that.topicCanvases[treeLevel % 2].node();\n        const ctx = canvas.getContext('2d');\n        if (ctx === null) return;\n\n        const topicTree = that.topicLevelTrees.get(treeLevel);\n        const treeExtent = topicTree.extent();\n        const tileWidth = (treeExtent[1][0] - treeExtent[0][0]) / Math.pow(2, treeLevel);\n        const tileScreenWidth = Math.abs(that.xScale(tileWidth) - that.xScale(0));\n\n        // Only draw the tiles that are visible\n        const zoomBox = that.getCurZoomBox();\n\n        const tiles = topicTree\n            .data()\n            .map(d => {\n                const tileRect = {\n                    x: that.xScale(d[0] - tileWidth / 2) + (that.svgFullSize.width - that.svgFullSize.height) / 2,\n                    y: that.yScale(d[1] + tileWidth / 2),\n                    width: tileScreenWidth,\n                    height: tileScreenWidth,\n                    name: `${d[0]}, ${d[1]}`,\n                    label: d[2]\n                };\n                return tileRect;\n            })\n            .filter(d => rectsIntersect(d, zoomBox));\n\n        // Draw the tiles on a canvas\n        ctx.save();\n\n        // Use specified stroke color or default based on contours\n        if (strokeColor) {\n            ctx.strokeStyle = strokeColor;\n        } else {\n            if (anyTrue(that.showContours)) {\n                ctx.strokeStyle = config.gridColorLight;\n            } else {\n                ctx.strokeStyle = config.gridColorDark;\n            }\n        }\n        ctx.lineWidth = 1 / (4 * that.curZoomTransform.k);\n\n        for (const tile of tiles) {\n            ctx.moveTo(tile.x, tile.y);\n            roundRect(ctx, tile.x, tile.y, tile.width, tile.height, 4 / that.curZoomTransform.k);\n            ctx.stroke();\n        }\n        ctx.restore();\n    }\n}\n\nexport function getIdealTopicTreeLevel(that) {\n\n    // 根据当前的缩放级别选择最佳的topic树级别进行展示\n\n    if (that.topicLevelTrees.size < 1) return null;\n\n    let bestLevel = -1;\n    let bestDistance = Infinity;\n\n    for (const level of that.topicLevelTrees.keys()) {\n        const extent = that.topicLevelTrees.get(level).extent();\n        const treeViewWidth = extent[1][0] - extent[0][0];\n        const tileNum = Math.pow(2, level);\n        const tileSize = treeViewWidth / tileNum;\n        const scaledTileWidth =\n            Math.max(\n                that.xScale(tileSize) - that.xScale(0),\n                that.yScale(tileSize) - that.yScale(0)\n            ) * that.curZoomTransform.k;\n\n        if (Math.abs(scaledTileWidth - IDEAL_TILE_WIDTH) < bestDistance) {\n            bestLevel = level;\n            bestDistance = Math.abs(scaledTileWidth - IDEAL_TILE_WIDTH);\n        }\n    }\n\n    return bestLevel;\n}\n\nconst anyTrue = (items) => items.reduce((a, b) => a || b, false);\nconst allTrue = (items) => items.reduce((a, b) => a && b, true);\n"],"mappings":"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","ignoreList":[]}]}