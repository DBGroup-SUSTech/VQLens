{"remainingRequest":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js!/home/yansha/VDProject/VDFrontend/src/components/Embedding/Embedding.js","dependencies":[{"path":"/home/yansha/VDProject/VDFrontend/src/components/Embedding/Embedding.js","mtime":1735742884969},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1730469387355},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["d3","config","updatePopperTooltip","fragmentShader","vertexShader","pointMouseenterTimer","pointMouseleaveTimer","initWebGLMatrices","that","xDomainMid","xScale","domain","yDomainMid","yScale","xRangeMid","range","yRangeMid","xMultiplier","yMultiplier","dataScaleMatrix","svgFullSize","width","height","dataScaleMatrix1D","flat","normalizeMatrix","normalizeMatrix1D","webGLMatrices","initWebGLBuffers","gridData","Error","positions","textureCoords","point","promptPoints","push","x","y","totalPointSize","frontPositionBuffer","pointRegl","buffer","length","type","usage","subdata","frontTextureCoordinateBuffer","frontBufferPointSize","drawScatterPlot","clear","color","depth","pointCount","loadedPointCount","a","b","curPointWidth","Math","log","layout","scatterDotRadius","min","max","alpha","zoomMatrix","getZoomMatrix","curZoomTransform","textureArray","defaultPointColorInt","secondPointColorInt","texture","data","format","userAlpha","opacity","undefined","drawPoints","enable","stencil","frag","vert","attributes","position","stride","offset","textureCoord","uniforms","pointWidth","blend","func","srcRGB","srcAlpha","dstRGB","dstAlpha","count","primitive","drawGroupContour","console","error","contourGroup","svg","select","gridData1D","grid","row","item","levels","contourLevels","thresholds","minValue","maxValue","step","i","contours","size","contourXScale","scaleLinear","xRange","contourYScale","yRange","map","coordinates","colorScaleInterpolator","interpolateLab","colorScale","scaleSequential","extent","d","selectAll","slice","join","attr","value","geoPath","zoomTransform","k","zoomMatrix1D","updateWebGLBuffers","newPoints","timeTextureMap","groupNames","groupID","has","time","u","get","highlightPoint","args","animated","anyTrue","showPoints","hoverPoint","hideHighlights","group","topSvg","oldHighlightPoint","clearTimeout","setTimeout","tooltipTop","classList","add","remove","image","imageGroup","prompt","imageURLPrefix","highlightRadius","exp","highlightStroke","curHighlightPoint","empty","append","style","transition","duration","on","node","items","reduce","allTrue"],"sources":["/home/yansha/VDProject/VDFrontend/src/components/Embedding/Embedding.js"],"sourcesContent":["import d3 from '../../utils/d3-import';\nimport { config } from '../../config/config';\nimport { updatePopperTooltip } from './EmbeddingLabel';\nimport fragmentShader from './shaders/point.frag?raw';\nimport vertexShader from './shaders/point.vert?raw';\n\nlet pointMouseenterTimer = null;\nlet pointMouseleaveTimer = null;\n\nexport function initWebGLMatrices(that) {\n    // Convert the x and y scales to a matrix (applying scale is cheaper in GPU)\n\n    const xDomainMid = (that.xScale.domain()[0] + that.xScale.domain()[1]) / 2;\n    const yDomainMid = (that.yScale.domain()[0] + that.yScale.domain()[1]) / 2;\n\n    const xRangeMid = (that.xScale.range()[0] + that.xScale.range()[1]) / 2;\n    const yRangeMid = (that.yScale.range()[0] + that.yScale.range()[1]) / 2;\n\n    const xMultiplier =\n        (that.xScale.range()[1] - that.xScale.range()[0]) /\n        (that.xScale.domain()[1] - that.xScale.domain()[0]);\n\n    const yMultiplier =\n        (that.yScale.range()[1] - that.yScale.range()[0]) /\n        (that.yScale.domain()[1] - that.yScale.domain()[0]);\n\n    // WebGL is column-major!\n    // Transform from data space to stage space (same as applying that.xScale(),\n    // and that.yScale())\n\n    const dataScaleMatrix = [\n        [xMultiplier, 0, -xMultiplier * xDomainMid + xRangeMid],\n        [0, yMultiplier, -yMultiplier * yDomainMid + yRangeMid],\n        [0, 0, 1]\n    ];\n\n    // 适当调整平移量，使得绘图区域的中心与视图的中心对齐\n    dataScaleMatrix[0][2] += (that.svgFullSize.width / 2 - xRangeMid);\n    dataScaleMatrix[1][2] += (that.svgFullSize.height / 2 - yRangeMid);\n    const dataScaleMatrix1D = dataScaleMatrix.flat();\n\n    // Transforming the stage space to the normalized coordinate\n    // Note we need to flip the y coordinate\n    const normalizeMatrix = [\n        [2 / that.svgFullSize.width, 0, -1],\n        [0, -2 / that.svgFullSize.height, 1],\n        [0, 0, 1]\n    ];\n\n    const normalizeMatrix1D = normalizeMatrix.flat();\n\n    that.webGLMatrices = {\n        dataScaleMatrix: dataScaleMatrix1D,\n        normalizeMatrix: normalizeMatrix1D\n    };\n\n}\n\nexport function initWebGLBuffers(that) {\n    if (that.gridData === null) {\n        throw new Error('GridData is null.');\n    }\n\n    // 获取每个点的位置和颜色\n    const positions = [];\n    const textureCoords = [];\n\n    for (const point of that.promptPoints) {\n        positions.push([point.x, point.y]);\n        textureCoords.push([0, 0]);\n    }\n\n    let totalPointSize = that.gridData.totalPointSize;\n\n    that.frontPositionBuffer = that.pointRegl.buffer({\n        length: totalPointSize * 4 * 2,\n        type: 'float',\n        usage: 'dynamic'\n    });\n    that.frontPositionBuffer.subdata(positions, 0);\n\n    that.frontTextureCoordinateBuffer = that.pointRegl.buffer({\n        length: totalPointSize * 4 * 2,\n        type: 'float',\n        usage: 'dynamic'\n    });\n    that.frontTextureCoordinateBuffer.subdata(textureCoords, 0);\n\n    that.frontBufferPointSize = that.promptPoints.length;\n}\n\n/**\n * Draw a scatter plot for the UMAP.\n */\nexport function drawScatterPlot(that) {\n    if (!that.webGLMatrices) {\n        throw Error('webGLMatrices not initialized');\n    }\n\n    that.pointRegl.clear({\n        color: [0, 0, 0, 0],\n        depth: 1\n    });\n\n    // Adjust point width based on the number of points to draw\n    let pointCount = that.loadedPointCount;\n\n\n    // Logarithmic regression by fitting the following three points\n    // https://keisan.casio.com/exec/system/14059930226691\n    // [(6e4, 2), (3e5, 1), [1.8e6, 0.5]]\n    const a = 6.71682071;\n    const b = -0.437974871;\n    that.curPointWidth =\n        a +\n        b *\n        Math.log(\n            config.layout.scatterDotRadius *\n            (that.svgFullSize.height / 10000000) *\n            pointCount\n        );\n    that.curPointWidth = Math.min(5, that.curPointWidth);\n    that.curPointWidth = Math.max(0.4, that.curPointWidth);\n    const alpha = 1 / (Math.log(pointCount) / Math.log(500));\n\n    // Get the current zoom\n    const zoomMatrix = getZoomMatrix(that.curZoomTransform);\n\n    // Create a texture array (default 3x1)\n    let textureArray = [\n        config.layout.defaultPointColorInt[0],\n        config.layout.defaultPointColorInt[1],\n        config.layout.defaultPointColorInt[2],\n        255,\n        config.layout.secondPointColorInt[0],\n        config.layout.secondPointColorInt[1],\n        config.layout.secondPointColorInt[2],\n        255,\n        255,\n        255,\n        255,\n        0\n    ];\n    // [default color, second color, transparent, empty]\n    const texture = that.pointRegl.texture({\n        width: 3,\n        height: 1,\n        data: textureArray,\n        format: 'rgba'\n    });\n\n    // If user specifies an alpha level, we use it to override auto-alpha\n    let userAlpha = -1.0;\n    if (that.gridData && that.gridData.opacity !== undefined) {\n        userAlpha = Math.max(0, Math.min(that.gridData.opacity, 1));\n    }\n\n    const drawPoints = that.pointRegl({\n        depth: { enable: false },\n        stencil: { enable: false },\n        frag: fragmentShader,\n        vert: vertexShader,\n\n        attributes: {\n            position: {\n                buffer: that.frontPositionBuffer,\n                stride: 2 * 4,\n                offset: 0\n            },\n            textureCoord: {\n                buffer: that.frontTextureCoordinateBuffer,\n                stride: 2 * 4,\n                offset: 0\n            }\n        },\n        uniforms: {\n            // Placeholder for function parameters\n            pointWidth: 1.2,\n            dataScaleMatrix: that.webGLMatrices.dataScaleMatrix,\n            zoomMatrix: zoomMatrix,\n            normalizeMatrix: that.webGLMatrices.normalizeMatrix,\n            alpha: alpha,\n            userAlpha: userAlpha,\n            texture: texture\n        },\n        blend: {\n            enable: true,\n            func: {\n                srcRGB: 'one',\n                srcAlpha: 'one',\n                dstRGB: 'one minus src alpha',\n                dstAlpha: 'one minus src alpha'\n            }\n        },\n\n        count: that.frontBufferPointSize,\n        primitive: 'points'\n    });\n\n    drawPoints();\n}\n\n\nexport function drawGroupContour(that) {\n\n    if (that.gridData == null) {\n        console.error('Grid data not initialized');\n        return null;\n    }\n\n    const contourGroup = that.svg.select(`.contour-group`);\n\n    const gridData1D = [];\n    const grid = that.gridData.grid;\n    for (const row of grid) {\n        for (const item of row) {\n            gridData1D.push(item);\n        }\n    }\n\n    // Linear interpolate the levels to determine the thresholds\n    const levels = config.layout.contourLevels;\n    const thresholds = [];\n    const minValue = Math.min(...gridData1D);\n    const maxValue = Math.max(...gridData1D);\n    const step = (maxValue - minValue) / levels;\n    for (let i = 0; i < levels; i++) {\n        thresholds.push(minValue + step * i);\n    }\n\n    let contours = d3\n        .contours()\n        .thresholds(thresholds)\n        .size([grid.length, grid[0].length])(gridData1D);\n\n    // Convert the scale of the generated paths\n    const contourXScale = d3\n        .scaleLinear()\n        .domain([0, grid.length])\n        .range(that.gridData.xRange);\n\n    const contourYScale = d3\n        .scaleLinear()\n        .domain([0, grid[0].length])\n        .range(that.gridData.yRange);\n\n    contours = contours.map(item => {\n        item.coordinates = item.coordinates.map(coordinates => {\n            return coordinates.map(positions => {\n                return positions.map(point => {\n                    return [\n                        // that.xScale(contourXScale(point[0])),\n                        that.xScale(contourXScale(point[0])) + (that.svgFullSize.width - that.svgFullSize.height) / 2,\n                        that.yScale(contourYScale(point[1]))\n                    ];\n                });\n            });\n        });\n        return item;\n    });\n\n    // Create a new color interpolator\n    // (starting from white here)\n    const colorScaleInterpolator = d3.interpolateLab(\n        '#ffffff',\n        config.layout['groupColors'][0]\n    );\n    const colorScale = d3.scaleSequential(\n        d3.extent(thresholds),\n        d => colorScaleInterpolator(d / 1)\n    );\n\n    // Draw the contours\n    contourGroup\n        .selectAll('path')\n        .data(contours.slice(1))\n        .join('path')\n        .attr('fill', d => colorScale(d.value))\n        .attr('d', d3.geoPath());\n\n    return contours;\n};\n\n/**\n * Convert the current zoom transform into a matrix\n * @param zoomTransform D3 zoom transform\n * @returns 1D matrix\n */\nconst getZoomMatrix = (zoomTransform) => {\n    // Transforming the stage space based on the current zoom transform\n    const zoomMatrix = [\n        [zoomTransform.k, 0, zoomTransform.x],\n        [0, zoomTransform.k, zoomTransform.y],\n        [0, 0, 1]\n    ];\n    const zoomMatrix1D = zoomMatrix.flat();\n    return zoomMatrix1D;\n};\n\nexport function updateWebGLBuffers(that, newPoints) {\n    // Get the position and color of each new point\n    const positions = [];\n    const textureCoords = [];\n\n    for (const point of newPoints) {\n        positions.push([point.x, point.y]);\n\n        if (that.timeTextureMap === null) {\n            if (that.groupNames && point.groupID !== undefined) {\n                textureCoords.push([point.groupID / that.groupNames.length, 0]);\n            } else {\n                textureCoords.push([0, 0]);\n            }\n        } else {\n            if (that.timeTextureMap.has(point.time)) {\n                const u =\n                    that.timeTextureMap.get(point.time) /\n                    (that.timeTextureMap.size - 1);\n                textureCoords.push([u, 0.5]);\n            } else {\n                // The last entry in the texture array is reserved for 'bad' points\n                // (e.g., wrong year)\n                textureCoords.push([1, 0]);\n            }\n        }\n    }\n\n    // Update the buffer using byte offsets\n    that.frontPositionBuffer.subdata(\n        positions,\n        that.frontBufferPointSize * 2 * 4\n    );\n    that.frontTextureCoordinateBuffer.subdata(\n        textureCoords,\n        that.frontBufferPointSize * 2 * 4\n    );\n    that.frontBufferPointSize += newPoints.length;\n}\n\nexport function highlightPoint(that, args) {\n    const { point, animated } = args;\n    if (!anyTrue(that.showPoints)) return;\n    if (point === that.hoverPoint) return;\n    if (that.hideHighlights) return;\n\n    // Draw the point on the top svg\n    const group = that.topSvg.select('g.top-content g.highlights');\n    const oldHighlightPoint = group.select('circle.highlight-point');\n\n    // 整体向右进行偏移 \n\n    // Hovering empty space\n    if (point === undefined) {\n        if (pointMouseleaveTimer !== null) {\n            clearTimeout(pointMouseleaveTimer);\n            pointMouseleaveTimer = null;\n        }\n\n        if (pointMouseenterTimer !== null) {\n            clearTimeout(pointMouseenterTimer);\n            pointMouseenterTimer = null;\n        }\n\n        // Clear the highlight and tooltip in a short delay\n        pointMouseleaveTimer = setTimeout(() => {\n            that.hoverPoint = null;\n            that.tooltipTop.classList.add('hidden');\n            oldHighlightPoint.remove();\n            pointMouseleaveTimer = null;\n        }, 50);\n\n        return;\n    }\n\n    // Hovering over a point\n    that.hoverPoint = point;\n\n\n    // Change the point's text to an image tag if this is an image point\n    if (that.gridData && that.gridData.image !== undefined) {\n        if (that.gridData.image.imageGroup === that.hoverPoint.groupID) {\n            that.hoverPoint.prompt = `<img class=\"tooltip-image\" src=\"${that.gridData.image.imageURLPrefix + that.hoverPoint.prompt}\">`;\n        }\n    }\n\n\n\n    if (pointMouseleaveTimer !== null) {\n        clearTimeout(pointMouseleaveTimer);\n        pointMouseleaveTimer = null;\n    }\n\n    const highlightRadius = Math.max(\n        10 / that.curZoomTransform.k,\n        (that.curPointWidth * Math.exp(Math.log(that.curZoomTransform.k) * 0.55)) / that.curZoomTransform.k\n    );\n\n    const highlightStroke = 1.2 / that.curZoomTransform.k;\n    let curHighlightPoint; // 用于存储当前高亮点的选择器\n\n    // 如果没有高亮点\n    if (oldHighlightPoint.empty()) {\n        curHighlightPoint = group\n            .append('circle')\n            .attr('class', 'highlight-point')\n            .attr('cx', that.xScale(point.x))\n            .attr('cy', that.yScale(point.y))\n            .attr('r', highlightRadius)\n            .style('stroke-width', highlightStroke);\n    } else {\n        // 如果已有高亮点\n        curHighlightPoint = oldHighlightPoint;\n\n        if (animated) {\n            curHighlightPoint\n                .transition()\n                .duration(150)\n                .attr('cx', that.xScale(point.x))\n                .attr('cy', that.yScale(point.y))\n                .attr('r', highlightRadius)\n                .style('stroke-width', highlightStroke)\n                .on('end', () => {\n                    updatePopperTooltip(\n                        that.tooltipTop,\n                        curHighlightPoint.node(),\n                        point.prompt,\n                        'top'\n                    );\n                });\n        } else {\n            curHighlightPoint\n                .attr('cx', that.xScale(point.x))\n                .attr('cy', that.yScale(point.y))\n                .attr('r', highlightRadius)\n                .style('stroke-width', highlightStroke);\n\n            updatePopperTooltip(\n                that.tooltipTop,\n                curHighlightPoint.node(),\n                point.prompt,\n                'top'\n            );\n        }\n    }\n\n    if (pointMouseenterTimer !== null) {\n        clearTimeout(pointMouseenterTimer);\n    }\n\n    pointMouseenterTimer = setTimeout(() => {\n        that.tooltipTop.classList.remove('hidden');\n        pointMouseenterTimer = null;\n    }, 300);\n}\n\nexport const anyTrue = (items) => items.reduce((a, b) => a || b);\nexport const allTrue = (items) => items.reduce((a, b) => a && b);\n"],"mappings":";;;;;;AAAA,OAAOA,EAAE,MAAM,uBAAuB;AACtC,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,OAAOC,cAAc,MAAM,0BAA0B;AACrD,OAAOC,YAAY,MAAM,0BAA0B;AAEnD,IAAIC,oBAAoB,GAAG,IAAI;AAC/B,IAAIC,oBAAoB,GAAG,IAAI;AAE/B,OAAO,SAASC,iBAAiBA,CAACC,IAAI,EAAE;EACpC;;EAEA,MAAMC,UAAU,GAAG,CAACD,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGH,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;EAC1E,MAAMC,UAAU,GAAG,CAACJ,IAAI,CAACK,MAAM,CAACF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGH,IAAI,CAACK,MAAM,CAACF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;EAE1E,MAAMG,SAAS,GAAG,CAACN,IAAI,CAACE,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGP,IAAI,CAACE,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;EACvE,MAAMC,SAAS,GAAG,CAACR,IAAI,CAACK,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGP,IAAI,CAACK,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;EAEvE,MAAME,WAAW,GACb,CAACT,IAAI,CAACE,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGP,IAAI,CAACE,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAC/CP,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGH,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAEvD,MAAMO,WAAW,GACb,CAACV,IAAI,CAACK,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGP,IAAI,CAACK,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAC/CP,IAAI,CAACK,MAAM,CAACF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGH,IAAI,CAACK,MAAM,CAACF,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvD;EACA;EACA;;EAEA,MAAMQ,eAAe,GAAG,CACpB,CAACF,WAAW,EAAE,CAAC,EAAE,CAACA,WAAW,GAAGR,UAAU,GAAGK,SAAS,CAAC,EACvD,CAAC,CAAC,EAAEI,WAAW,EAAE,CAACA,WAAW,GAAGN,UAAU,GAAGI,SAAS,CAAC,EACvD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACZ;;EAED;EACAG,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAKX,IAAI,CAACY,WAAW,CAACC,KAAK,GAAG,CAAC,GAAGP,SAAU;EACjEK,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAKX,IAAI,CAACY,WAAW,CAACE,MAAM,GAAG,CAAC,GAAGN,SAAU;EAClE,MAAMO,iBAAiB,GAAGJ,eAAe,CAACK,IAAI,CAAC,CAAC;;EAEhD;EACA;EACA,MAAMC,eAAe,GAAG,CACpB,CAAC,CAAC,GAAGjB,IAAI,CAACY,WAAW,CAACC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EACnC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGb,IAAI,CAACY,WAAW,CAACE,MAAM,EAAE,CAAC,CAAC,EACpC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACZ;EAED,MAAMI,iBAAiB,GAAGD,eAAe,CAACD,IAAI,CAAC,CAAC;EAEhDhB,IAAI,CAACmB,aAAa,GAAG;IACjBR,eAAe,EAAEI,iBAAiB;IAClCE,eAAe,EAAEC;EACrB,CAAC;AAEL;AAEA,OAAO,SAASE,gBAAgBA,CAACpB,IAAI,EAAE;EACnC,IAAIA,IAAI,CAACqB,QAAQ,KAAK,IAAI,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EACxC;;EAEA;EACA,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,aAAa,GAAG,EAAE;EAExB,KAAK,MAAMC,KAAK,IAAIzB,IAAI,CAAC0B,YAAY,EAAE;IACnCH,SAAS,CAACI,IAAI,CAAC,CAACF,KAAK,CAACG,CAAC,EAAEH,KAAK,CAACI,CAAC,CAAC,CAAC;IAClCL,aAAa,CAACG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9B;EAEA,IAAIG,cAAc,GAAG9B,IAAI,CAACqB,QAAQ,CAACS,cAAc;EAEjD9B,IAAI,CAAC+B,mBAAmB,GAAG/B,IAAI,CAACgC,SAAS,CAACC,MAAM,CAAC;IAC7CC,MAAM,EAAEJ,cAAc,GAAG,CAAC,GAAG,CAAC;IAC9BK,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE;EACX,CAAC,CAAC;EACFpC,IAAI,CAAC+B,mBAAmB,CAACM,OAAO,CAACd,SAAS,EAAE,CAAC,CAAC;EAE9CvB,IAAI,CAACsC,4BAA4B,GAAGtC,IAAI,CAACgC,SAAS,CAACC,MAAM,CAAC;IACtDC,MAAM,EAAEJ,cAAc,GAAG,CAAC,GAAG,CAAC;IAC9BK,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE;EACX,CAAC,CAAC;EACFpC,IAAI,CAACsC,4BAA4B,CAACD,OAAO,CAACb,aAAa,EAAE,CAAC,CAAC;EAE3DxB,IAAI,CAACuC,oBAAoB,GAAGvC,IAAI,CAAC0B,YAAY,CAACQ,MAAM;AACxD;;AAEA;AACA;AACA;AACA,OAAO,SAASM,eAAeA,CAACxC,IAAI,EAAE;EAClC,IAAI,CAACA,IAAI,CAACmB,aAAa,EAAE;IACrB,MAAMG,KAAK,CAAC,+BAA+B,CAAC;EAChD;EAEAtB,IAAI,CAACgC,SAAS,CAACS,KAAK,CAAC;IACjBC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnBC,KAAK,EAAE;EACX,CAAC,CAAC;;EAEF;EACA,IAAIC,UAAU,GAAG5C,IAAI,CAAC6C,gBAAgB;;EAGtC;EACA;EACA;EACA,MAAMC,CAAC,GAAG,UAAU;EACpB,MAAMC,CAAC,GAAG,CAAC,WAAW;EACtB/C,IAAI,CAACgD,aAAa,GACdF,CAAC,GACDC,CAAC,GACDE,IAAI,CAACC,GAAG,CACJzD,MAAM,CAAC0D,MAAM,CAACC,gBAAgB,IAC7BpD,IAAI,CAACY,WAAW,CAACE,MAAM,GAAG,QAAQ,CAAC,GACpC8B,UACJ,CAAC;EACL5C,IAAI,CAACgD,aAAa,GAAGC,IAAI,CAACI,GAAG,CAAC,CAAC,EAAErD,IAAI,CAACgD,aAAa,CAAC;EACpDhD,IAAI,CAACgD,aAAa,GAAGC,IAAI,CAACK,GAAG,CAAC,GAAG,EAAEtD,IAAI,CAACgD,aAAa,CAAC;EACtD,MAAMO,KAAK,GAAG,CAAC,IAAIN,IAAI,CAACC,GAAG,CAACN,UAAU,CAAC,GAAGK,IAAI,CAACC,GAAG,CAAC,GAAG,CAAC,CAAC;;EAExD;EACA,MAAMM,UAAU,GAAGC,aAAa,CAACzD,IAAI,CAAC0D,gBAAgB,CAAC;;EAEvD;EACA,IAAIC,YAAY,GAAG,CACflE,MAAM,CAAC0D,MAAM,CAACS,oBAAoB,CAAC,CAAC,CAAC,EACrCnE,MAAM,CAAC0D,MAAM,CAACS,oBAAoB,CAAC,CAAC,CAAC,EACrCnE,MAAM,CAAC0D,MAAM,CAACS,oBAAoB,CAAC,CAAC,CAAC,EACrC,GAAG,EACHnE,MAAM,CAAC0D,MAAM,CAACU,mBAAmB,CAAC,CAAC,CAAC,EACpCpE,MAAM,CAAC0D,MAAM,CAACU,mBAAmB,CAAC,CAAC,CAAC,EACpCpE,MAAM,CAAC0D,MAAM,CAACU,mBAAmB,CAAC,CAAC,CAAC,EACpC,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,CAAC,CACJ;EACD;EACA,MAAMC,OAAO,GAAG9D,IAAI,CAACgC,SAAS,CAAC8B,OAAO,CAAC;IACnCjD,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTiD,IAAI,EAAEJ,YAAY;IAClBK,MAAM,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,IAAIC,SAAS,GAAG,CAAC,GAAG;EACpB,IAAIjE,IAAI,CAACqB,QAAQ,IAAIrB,IAAI,CAACqB,QAAQ,CAAC6C,OAAO,KAAKC,SAAS,EAAE;IACtDF,SAAS,GAAGhB,IAAI,CAACK,GAAG,CAAC,CAAC,EAAEL,IAAI,CAACI,GAAG,CAACrD,IAAI,CAACqB,QAAQ,CAAC6C,OAAO,EAAE,CAAC,CAAC,CAAC;EAC/D;EAEA,MAAME,UAAU,GAAGpE,IAAI,CAACgC,SAAS,CAAC;IAC9BW,KAAK,EAAE;MAAE0B,MAAM,EAAE;IAAM,CAAC;IACxBC,OAAO,EAAE;MAAED,MAAM,EAAE;IAAM,CAAC;IAC1BE,IAAI,EAAE5E,cAAc;IACpB6E,IAAI,EAAE5E,YAAY;IAElB6E,UAAU,EAAE;MACRC,QAAQ,EAAE;QACNzC,MAAM,EAAEjC,IAAI,CAAC+B,mBAAmB;QAChC4C,MAAM,EAAE,CAAC,GAAG,CAAC;QACbC,MAAM,EAAE;MACZ,CAAC;MACDC,YAAY,EAAE;QACV5C,MAAM,EAAEjC,IAAI,CAACsC,4BAA4B;QACzCqC,MAAM,EAAE,CAAC,GAAG,CAAC;QACbC,MAAM,EAAE;MACZ;IACJ,CAAC;IACDE,QAAQ,EAAE;MACN;MACAC,UAAU,EAAE,GAAG;MACfpE,eAAe,EAAEX,IAAI,CAACmB,aAAa,CAACR,eAAe;MACnD6C,UAAU,EAAEA,UAAU;MACtBvC,eAAe,EAAEjB,IAAI,CAACmB,aAAa,CAACF,eAAe;MACnDsC,KAAK,EAAEA,KAAK;MACZU,SAAS,EAAEA,SAAS;MACpBH,OAAO,EAAEA;IACb,CAAC;IACDkB,KAAK,EAAE;MACHX,MAAM,EAAE,IAAI;MACZY,IAAI,EAAE;QACFC,MAAM,EAAE,KAAK;QACbC,QAAQ,EAAE,KAAK;QACfC,MAAM,EAAE,qBAAqB;QAC7BC,QAAQ,EAAE;MACd;IACJ,CAAC;IAEDC,KAAK,EAAEtF,IAAI,CAACuC,oBAAoB;IAChCgD,SAAS,EAAE;EACf,CAAC,CAAC;EAEFnB,UAAU,CAAC,CAAC;AAChB;AAGA,OAAO,SAASoB,gBAAgBA,CAACxF,IAAI,EAAE;EAEnC,IAAIA,IAAI,CAACqB,QAAQ,IAAI,IAAI,EAAE;IACvBoE,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;IAC1C,OAAO,IAAI;EACf;EAEA,MAAMC,YAAY,GAAG3F,IAAI,CAAC4F,GAAG,CAACC,MAAM,CAAC,gBAAgB,CAAC;EAEtD,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,IAAI,GAAG/F,IAAI,CAACqB,QAAQ,CAAC0E,IAAI;EAC/B,KAAK,MAAMC,GAAG,IAAID,IAAI,EAAE;IACpB,KAAK,MAAME,IAAI,IAAID,GAAG,EAAE;MACpBF,UAAU,CAACnE,IAAI,CAACsE,IAAI,CAAC;IACzB;EACJ;;EAEA;EACA,MAAMC,MAAM,GAAGzG,MAAM,CAAC0D,MAAM,CAACgD,aAAa;EAC1C,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,QAAQ,GAAGpD,IAAI,CAACI,GAAG,CAAC,GAAGyC,UAAU,CAAC;EACxC,MAAMQ,QAAQ,GAAGrD,IAAI,CAACK,GAAG,CAAC,GAAGwC,UAAU,CAAC;EACxC,MAAMS,IAAI,GAAG,CAACD,QAAQ,GAAGD,QAAQ,IAAIH,MAAM;EAC3C,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,MAAM,EAAEM,CAAC,EAAE,EAAE;IAC7BJ,UAAU,CAACzE,IAAI,CAAC0E,QAAQ,GAAGE,IAAI,GAAGC,CAAC,CAAC;EACxC;EAEA,IAAIC,QAAQ,GAAGjH,EAAE,CACZiH,QAAQ,CAAC,CAAC,CACVL,UAAU,CAACA,UAAU,CAAC,CACtBM,IAAI,CAAC,CAACX,IAAI,CAAC7D,MAAM,EAAE6D,IAAI,CAAC,CAAC,CAAC,CAAC7D,MAAM,CAAC,CAAC,CAAC4D,UAAU,CAAC;;EAEpD;EACA,MAAMa,aAAa,GAAGnH,EAAE,CACnBoH,WAAW,CAAC,CAAC,CACbzG,MAAM,CAAC,CAAC,CAAC,EAAE4F,IAAI,CAAC7D,MAAM,CAAC,CAAC,CACxB3B,KAAK,CAACP,IAAI,CAACqB,QAAQ,CAACwF,MAAM,CAAC;EAEhC,MAAMC,aAAa,GAAGtH,EAAE,CACnBoH,WAAW,CAAC,CAAC,CACbzG,MAAM,CAAC,CAAC,CAAC,EAAE4F,IAAI,CAAC,CAAC,CAAC,CAAC7D,MAAM,CAAC,CAAC,CAC3B3B,KAAK,CAACP,IAAI,CAACqB,QAAQ,CAAC0F,MAAM,CAAC;EAEhCN,QAAQ,GAAGA,QAAQ,CAACO,GAAG,CAACf,IAAI,IAAI;IAC5BA,IAAI,CAACgB,WAAW,GAAGhB,IAAI,CAACgB,WAAW,CAACD,GAAG,CAACC,WAAW,IAAI;MACnD,OAAOA,WAAW,CAACD,GAAG,CAACzF,SAAS,IAAI;QAChC,OAAOA,SAAS,CAACyF,GAAG,CAACvF,KAAK,IAAI;UAC1B,OAAO;UACH;UACAzB,IAAI,CAACE,MAAM,CAACyG,aAAa,CAAClF,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAACzB,IAAI,CAACY,WAAW,CAACC,KAAK,GAAGb,IAAI,CAACY,WAAW,CAACE,MAAM,IAAI,CAAC,EAC7Fd,IAAI,CAACK,MAAM,CAACyG,aAAa,CAACrF,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CACvC;QACL,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAOwE,IAAI;EACf,CAAC,CAAC;;EAEF;EACA;EACA,MAAMiB,sBAAsB,GAAG1H,EAAE,CAAC2H,cAAc,CAC5C,SAAS,EACT1H,MAAM,CAAC0D,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAClC,CAAC;EACD,MAAMiE,UAAU,GAAG5H,EAAE,CAAC6H,eAAe,CACjC7H,EAAE,CAAC8H,MAAM,CAAClB,UAAU,CAAC,EACrBmB,CAAC,IAAIL,sBAAsB,CAACK,CAAC,GAAG,CAAC,CACrC,CAAC;;EAED;EACA5B,YAAY,CACP6B,SAAS,CAAC,MAAM,CAAC,CACjBzD,IAAI,CAAC0C,QAAQ,CAACgB,KAAK,CAAC,CAAC,CAAC,CAAC,CACvBC,IAAI,CAAC,MAAM,CAAC,CACZC,IAAI,CAAC,MAAM,EAAEJ,CAAC,IAAIH,UAAU,CAACG,CAAC,CAACK,KAAK,CAAC,CAAC,CACtCD,IAAI,CAAC,GAAG,EAAEnI,EAAE,CAACqI,OAAO,CAAC,CAAC,CAAC;EAE5B,OAAOpB,QAAQ;AACnB;AAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMhD,aAAa,GAAIqE,aAAa,IAAK;EACrC;EACA,MAAMtE,UAAU,GAAG,CACf,CAACsE,aAAa,CAACC,CAAC,EAAE,CAAC,EAAED,aAAa,CAAClG,CAAC,CAAC,EACrC,CAAC,CAAC,EAAEkG,aAAa,CAACC,CAAC,EAAED,aAAa,CAACjG,CAAC,CAAC,EACrC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACZ;EACD,MAAMmG,YAAY,GAAGxE,UAAU,CAACxC,IAAI,CAAC,CAAC;EACtC,OAAOgH,YAAY;AACvB,CAAC;AAED,OAAO,SAASC,kBAAkBA,CAACjI,IAAI,EAAEkI,SAAS,EAAE;EAChD;EACA,MAAM3G,SAAS,GAAG,EAAE;EACpB,MAAMC,aAAa,GAAG,EAAE;EAExB,KAAK,MAAMC,KAAK,IAAIyG,SAAS,EAAE;IAC3B3G,SAAS,CAACI,IAAI,CAAC,CAACF,KAAK,CAACG,CAAC,EAAEH,KAAK,CAACI,CAAC,CAAC,CAAC;IAElC,IAAI7B,IAAI,CAACmI,cAAc,KAAK,IAAI,EAAE;MAC9B,IAAInI,IAAI,CAACoI,UAAU,IAAI3G,KAAK,CAAC4G,OAAO,KAAKlE,SAAS,EAAE;QAChD3C,aAAa,CAACG,IAAI,CAAC,CAACF,KAAK,CAAC4G,OAAO,GAAGrI,IAAI,CAACoI,UAAU,CAAClG,MAAM,EAAE,CAAC,CAAC,CAAC;MACnE,CAAC,MAAM;QACHV,aAAa,CAACG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC9B;IACJ,CAAC,MAAM;MACH,IAAI3B,IAAI,CAACmI,cAAc,CAACG,GAAG,CAAC7G,KAAK,CAAC8G,IAAI,CAAC,EAAE;QACrC,MAAMC,CAAC,GACHxI,IAAI,CAACmI,cAAc,CAACM,GAAG,CAAChH,KAAK,CAAC8G,IAAI,CAAC,IAClCvI,IAAI,CAACmI,cAAc,CAACzB,IAAI,GAAG,CAAC,CAAC;QAClClF,aAAa,CAACG,IAAI,CAAC,CAAC6G,CAAC,EAAE,GAAG,CAAC,CAAC;MAChC,CAAC,MAAM;QACH;QACA;QACAhH,aAAa,CAACG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC9B;IACJ;EACJ;;EAEA;EACA3B,IAAI,CAAC+B,mBAAmB,CAACM,OAAO,CAC5Bd,SAAS,EACTvB,IAAI,CAACuC,oBAAoB,GAAG,CAAC,GAAG,CACpC,CAAC;EACDvC,IAAI,CAACsC,4BAA4B,CAACD,OAAO,CACrCb,aAAa,EACbxB,IAAI,CAACuC,oBAAoB,GAAG,CAAC,GAAG,CACpC,CAAC;EACDvC,IAAI,CAACuC,oBAAoB,IAAI2F,SAAS,CAAChG,MAAM;AACjD;AAEA,OAAO,SAASwG,cAAcA,CAAC1I,IAAI,EAAE2I,IAAI,EAAE;EACvC,MAAM;IAAElH,KAAK;IAAEmH;EAAS,CAAC,GAAGD,IAAI;EAChC,IAAI,CAACE,OAAO,CAAC7I,IAAI,CAAC8I,UAAU,CAAC,EAAE;EAC/B,IAAIrH,KAAK,KAAKzB,IAAI,CAAC+I,UAAU,EAAE;EAC/B,IAAI/I,IAAI,CAACgJ,cAAc,EAAE;;EAEzB;EACA,MAAMC,KAAK,GAAGjJ,IAAI,CAACkJ,MAAM,CAACrD,MAAM,CAAC,4BAA4B,CAAC;EAC9D,MAAMsD,iBAAiB,GAAGF,KAAK,CAACpD,MAAM,CAAC,wBAAwB,CAAC;;EAEhE;;EAEA;EACA,IAAIpE,KAAK,KAAK0C,SAAS,EAAE;IACrB,IAAIrE,oBAAoB,KAAK,IAAI,EAAE;MAC/BsJ,YAAY,CAACtJ,oBAAoB,CAAC;MAClCA,oBAAoB,GAAG,IAAI;IAC/B;IAEA,IAAID,oBAAoB,KAAK,IAAI,EAAE;MAC/BuJ,YAAY,CAACvJ,oBAAoB,CAAC;MAClCA,oBAAoB,GAAG,IAAI;IAC/B;;IAEA;IACAC,oBAAoB,GAAGuJ,UAAU,CAAC,MAAM;MACpCrJ,IAAI,CAAC+I,UAAU,GAAG,IAAI;MACtB/I,IAAI,CAACsJ,UAAU,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;MACvCL,iBAAiB,CAACM,MAAM,CAAC,CAAC;MAC1B3J,oBAAoB,GAAG,IAAI;IAC/B,CAAC,EAAE,EAAE,CAAC;IAEN;EACJ;;EAEA;EACAE,IAAI,CAAC+I,UAAU,GAAGtH,KAAK;;EAGvB;EACA,IAAIzB,IAAI,CAACqB,QAAQ,IAAIrB,IAAI,CAACqB,QAAQ,CAACqI,KAAK,KAAKvF,SAAS,EAAE;IACpD,IAAInE,IAAI,CAACqB,QAAQ,CAACqI,KAAK,CAACC,UAAU,KAAK3J,IAAI,CAAC+I,UAAU,CAACV,OAAO,EAAE;MAC5DrI,IAAI,CAAC+I,UAAU,CAACa,MAAM,GAAG,mCAAmC5J,IAAI,CAACqB,QAAQ,CAACqI,KAAK,CAACG,cAAc,GAAG7J,IAAI,CAAC+I,UAAU,CAACa,MAAM,IAAI;IAC/H;EACJ;EAIA,IAAI9J,oBAAoB,KAAK,IAAI,EAAE;IAC/BsJ,YAAY,CAACtJ,oBAAoB,CAAC;IAClCA,oBAAoB,GAAG,IAAI;EAC/B;EAEA,MAAMgK,eAAe,GAAG7G,IAAI,CAACK,GAAG,CAC5B,EAAE,GAAGtD,IAAI,CAAC0D,gBAAgB,CAACqE,CAAC,EAC3B/H,IAAI,CAACgD,aAAa,GAAGC,IAAI,CAAC8G,GAAG,CAAC9G,IAAI,CAACC,GAAG,CAAClD,IAAI,CAAC0D,gBAAgB,CAACqE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAI/H,IAAI,CAAC0D,gBAAgB,CAACqE,CACtG,CAAC;EAED,MAAMiC,eAAe,GAAG,GAAG,GAAGhK,IAAI,CAAC0D,gBAAgB,CAACqE,CAAC;EACrD,IAAIkC,iBAAiB,CAAC,CAAC;;EAEvB;EACA,IAAId,iBAAiB,CAACe,KAAK,CAAC,CAAC,EAAE;IAC3BD,iBAAiB,GAAGhB,KAAK,CACpBkB,MAAM,CAAC,QAAQ,CAAC,CAChBxC,IAAI,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAChCA,IAAI,CAAC,IAAI,EAAE3H,IAAI,CAACE,MAAM,CAACuB,KAAK,CAACG,CAAC,CAAC,CAAC,CAChC+F,IAAI,CAAC,IAAI,EAAE3H,IAAI,CAACK,MAAM,CAACoB,KAAK,CAACI,CAAC,CAAC,CAAC,CAChC8F,IAAI,CAAC,GAAG,EAAEmC,eAAe,CAAC,CAC1BM,KAAK,CAAC,cAAc,EAAEJ,eAAe,CAAC;EAC/C,CAAC,MAAM;IACH;IACAC,iBAAiB,GAAGd,iBAAiB;IAErC,IAAIP,QAAQ,EAAE;MACVqB,iBAAiB,CACZI,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACb3C,IAAI,CAAC,IAAI,EAAE3H,IAAI,CAACE,MAAM,CAACuB,KAAK,CAACG,CAAC,CAAC,CAAC,CAChC+F,IAAI,CAAC,IAAI,EAAE3H,IAAI,CAACK,MAAM,CAACoB,KAAK,CAACI,CAAC,CAAC,CAAC,CAChC8F,IAAI,CAAC,GAAG,EAAEmC,eAAe,CAAC,CAC1BM,KAAK,CAAC,cAAc,EAAEJ,eAAe,CAAC,CACtCO,EAAE,CAAC,KAAK,EAAE,MAAM;QACb7K,mBAAmB,CACfM,IAAI,CAACsJ,UAAU,EACfW,iBAAiB,CAACO,IAAI,CAAC,CAAC,EACxB/I,KAAK,CAACmI,MAAM,EACZ,KACJ,CAAC;MACL,CAAC,CAAC;IACV,CAAC,MAAM;MACHK,iBAAiB,CACZtC,IAAI,CAAC,IAAI,EAAE3H,IAAI,CAACE,MAAM,CAACuB,KAAK,CAACG,CAAC,CAAC,CAAC,CAChC+F,IAAI,CAAC,IAAI,EAAE3H,IAAI,CAACK,MAAM,CAACoB,KAAK,CAACI,CAAC,CAAC,CAAC,CAChC8F,IAAI,CAAC,GAAG,EAAEmC,eAAe,CAAC,CAC1BM,KAAK,CAAC,cAAc,EAAEJ,eAAe,CAAC;MAE3CtK,mBAAmB,CACfM,IAAI,CAACsJ,UAAU,EACfW,iBAAiB,CAACO,IAAI,CAAC,CAAC,EACxB/I,KAAK,CAACmI,MAAM,EACZ,KACJ,CAAC;IACL;EACJ;EAEA,IAAI/J,oBAAoB,KAAK,IAAI,EAAE;IAC/BuJ,YAAY,CAACvJ,oBAAoB,CAAC;EACtC;EAEAA,oBAAoB,GAAGwJ,UAAU,CAAC,MAAM;IACpCrJ,IAAI,CAACsJ,UAAU,CAACC,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;IAC1C5J,oBAAoB,GAAG,IAAI;EAC/B,CAAC,EAAE,GAAG,CAAC;AACX;AAEA,OAAO,MAAMgJ,OAAO,GAAI4B,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC,CAAC5H,CAAC,EAAEC,CAAC,KAAKD,CAAC,IAAIC,CAAC,CAAC;AAChE,OAAO,MAAM4H,OAAO,GAAIF,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC,CAAC5H,CAAC,EAAEC,CAAC,KAAKD,CAAC,IAAIC,CAAC,CAAC","ignoreList":[]}]}