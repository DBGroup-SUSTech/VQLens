{"remainingRequest":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js!/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js??ref--17!/home/yansha/VDProject/VDFrontend/src/components/Graph/NodeGraph.js","dependencies":[{"path":"/home/yansha/VDProject/VDFrontend/src/components/Graph/NodeGraph.js","mtime":1744442733392},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1744442733384},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1744442733384},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["d3","_NodeGraph_brand","WeakSet","NodeGraph","_ref","_this","component","data","_ref$strengths","strengths","_ref$width","width","_ref$height","height","_ref$nodeRadius","nodeRadius","_ref$minLinkStrokeWid","minLinkStrokeWidth","_ref$maxLinkStrokeWid","maxLinkStrokeWidth","_ref$selectedNode","selectedNode","_classCallCheck","_classPrivateMethodInitSpec","padding","top","bottom","left","right","initStrengths","nodes","map","d","id","links","source","target","nodeGroups","group","Set","size","console","warn","colorScale","scaleOrdinal","schemeTableau10","linkValues","value","strokeWidthScale","scaleLinear","domain","range","Math","min","apply","_toConsumableArray","max","nodeLinkCounts","nodeIDMap","Map","i","_iterator","_createForOfIteratorHelper","_step","s","n","done","l","sourceIndex","get","targetIndex","err","e","f","countNodeLink","node","curIndex","undefined","nodeIDs","forceNode","forceManyBody","forceLink","index","forceCenter","forceCollide","radius","strength","linkStrength","link","linkDistance","distance","nodeStrength","collideStrength","simulation","forceSimulation","force","on","_assertClassBrand","_ticked","call","svg","select","append","attr","concat","result","drawGraphView","nodeElements","linkElements","handleNodeClick","_createClass","key","_this2","content","selectAll","join","x","y","style","groupColorMap","zoomFunction","zoom","scaleExtent","event","log","transform","dragFactory","text","_this3","filter","boxBoundX","boxBoundY","_this4","dragstarted","active","alpha","restart","subject","fx","fy","dragged","dragended","drag","updateNodeForceStrength","newStrength","updateLinkForceStrength","_this5","updateLinkForceDistance","newDistance","updateCollideForceStrength","_this6"],"sources":["/home/yansha/VDProject/VDFrontend/src/components/Graph/NodeGraph.js"],"sourcesContent":["\nimport d3 from \"../../utils/d3-import\";\n\nexport class NodeGraph {\n    constructor({\n        component,\n        data,\n        strengths = null,\n        width = 300,\n        height = 300,\n        nodeRadius = 5,\n        minLinkStrokeWidth = 1,\n        maxLinkStrokeWidth = 6,\n        selectedNode = null\n    }) {\n        this.component = component;\n        this.data = data;\n        this.padding = {\n            top: 5,\n            bottom: 5,\n            left: 5,\n            right: 5\n        };\n        this.width = width - this.padding.left - this.padding.right;\n        this.height = height - this.padding.top - this.padding.bottom;\n\n        this.nodeRadius = nodeRadius;\n        this.maxLinkStrokeWidth = maxLinkStrokeWidth;\n        this.minLinkStrokeWidth = minLinkStrokeWidth;\n        this.initStrengths = strengths;\n        this.selectedNode = selectedNode;\n\n        // Deep copy nodes and links from the data object\n        this.nodes = data.nodes.map(d => ({ id: d.id }));\n        this.links = data.links.map(d => ({ source: d.source, target: d.target }));\n\n\n\n        // Construct the color scale\n        this.nodeGroups = data.nodes.map(d => d.group);\n        if (new Set(this.nodeGroups).size > 10) {\n            console.warn('Number of node groups is more than 10.');\n        }\n        this.colorScale = d3.scaleOrdinal(this.nodeGroups, d3.schemeTableau10);   // 为不同的组别节点分配颜色\n\n        // Construct the edge thickness scale\n        this.linkValues = data.links.map(d => d.value || 0);\n\n        if (new Set(this.linkValues).size === 1) {\n            this.strokeWidthScale = d3\n                .scaleLinear()\n                .domain([this.linkValues[0], this.linkValues[0]])\n                .range([minLinkStrokeWidth, minLinkStrokeWidth]);\n        } else {\n            this.strokeWidthScale = d3\n                .scaleLinear()\n                .domain([Math.min(...this.linkValues), Math.max(...this.linkValues)])\n                .range([minLinkStrokeWidth, maxLinkStrokeWidth]);\n        }\n\n        // Keep track link counts (used in updating link strength)\n        const nodeLinkCounts = [];\n        const nodeIDMap = new Map(this.nodes.map((d, i) => [d.id, i]));\n        for (const l of this.links) {\n            const sourceIndex = nodeIDMap.get(l.source);\n            const targetIndex = nodeIDMap.get(l.target);\n            nodeLinkCounts[sourceIndex] = (nodeLinkCounts[sourceIndex] || 0) + 1;\n            nodeLinkCounts[targetIndex] = (nodeLinkCounts[targetIndex] || 0) + 1;\n        }\n\n        this.countNodeLink = (node) => {\n            const curIndex = nodeIDMap.get(node.id);\n            if (curIndex !== undefined) {\n                return nodeLinkCounts[curIndex];\n            } else {\n                return 0;\n            }\n        };\n\n        // Initialize the force simulation\n        const nodeIDs = data.nodes.map(d => d.id);\n        this.forceNode = d3.forceManyBody();\n        this.forceLink = d3.forceLink(this.links).id(node => {\n            // 确保 node.index 存在\n            if (node.index !== undefined) {\n                return nodeIDs[node.index];\n            }\n            return null; // 或者处理没有索引的情况\n\n        });\n        this.forceCenter = d3.forceCenter(width / 2, height / 2);\n        this.forceCollide = d3\n            .forceCollide()\n            .radius(d => this.nodeRadius + 0.5)\n            .strength(1);\n\n        // Set the initial strengths if they are provided\n        if (strengths !== null) {\n            if (strengths.linkStrength !== undefined) {\n                this.forceLink.strength(link => {\n                    return (\n                        strengths.linkStrength /\n                        Math.min(\n                            this.countNodeLink(link.source),\n                            this.countNodeLink(link.target)\n                        )\n                    );\n                });\n            }\n\n            if (strengths.linkDistance !== undefined) {\n                this.forceLink.distance(strengths.linkDistance);\n            }\n            if (strengths.nodeStrength !== undefined) {\n                this.forceNode.strength(strengths.nodeStrength);\n            }\n            if (strengths.collideStrength !== undefined) {\n                this.forceCollide.strength(strengths.collideStrength);\n            }\n\n            this.simulation = d3\n                .forceSimulation(this.nodes)\n                .force('link', this.forceLink)\n                .force('charge', this.forceNode)\n                .force('center', this.forceCenter)\n                .force('collide', this.forceCollide)\n                .on('tick', () => this.#ticked());\n\n            // Initialize the SVG element\n            this.svg = d3.select(component)\n                .append('svg') // 创建一个新的 SVG 元素\n                .attr('class', 'graph-svg')\n                .attr('width', width)\n                .attr('height', height)\n                .attr('viewbox', `0 0 ${width} ${height}`)\n                .attr('preserveAspectRatio', 'none');\n\n\n\n            // Initialize the graph view\n            const result = this.drawGraphView();\n            this.nodeElements = result.nodeElements;\n            this.linkElements = result.linkElements;\n\n            this.handleNodeClick()\n\n\n        }\n    }\n\n    drawGraphView() {\n        const content = this.svg\n            .append('g')\n            .attr('class', 'content')\n            .attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n        // Draw links as lines\n        const linkElements = content\n            .append('g')\n            .attr('class', 'link-group')\n            .selectAll('line.link')\n            .data(this.links)\n            .join('line')\n            .attr('class', 'link')\n            .attr('x1', d => d.source.x) // 起点 x 坐标\n            .attr('y1', d => d.source.y) // 起点 y 坐标\n            .attr('x2', d => d.target.x) // 终点 x 坐标\n            .attr('y2', d => d.target.y) // 终点 y 坐标\n            .style('stroke', 'hsl(0, 0.0%, 74.12%)')\n            .style('stroke-opacity', 0.6)\n            .style('stroke-width', d => this.strokeWidthScale(this.linkValues[d.index]));\n\n        // 尽量换成一样的颜色\n        const groupColorMap = {\n                    0: \"#FF0000\",\n                    1: \"#A4D3EE\",\n                    2: \"#32CD32\",\n                    3: \"#FF7F50\",\n                  };\n\n        // Draw nodes as circles\n        const nodeElements = content\n            .append('g')\n            .attr('class', 'node-group')\n            .selectAll('circle.node')\n            .data(this.nodes)\n            .join('circle')\n            .attr('class', 'node')\n            .attr('r', this.nodeRadius)\n            .style('fill', d => groupColorMap[this.nodeGroups[d.index]] || \"#A4D3EE\") // 移除 `!`\n            .style('stroke', 'white')\n            .style('stroke-width', 1.5);\n\n\n        // Initialize the zoom behavior\n        const zoomFunction = d3.zoom()\n            .scaleExtent([0.5, 5]) // 设置缩放范围\n            .on('zoom', (event) => {\n\n                console.log(\"zoom in and out\")\n                content.attr('transform', event.transform); // 应用缩放变换\n            });\n\n        this.svg.call(zoomFunction);\n\n        // 应用拖拽功能\n        nodeElements.call(this.dragFactory()); // 移除 `as d3.Selection<SVGCircleElement, Node, SVGElement, unknown>`\n\n        // Add tooltips for nodes\n        nodeElements\n            .append('title')\n            .text(d => `${d.id}, ${this.nodeGroups[d.index]}`); // 移除 `!`\n\n        return { nodeElements, linkElements };\n    }\n\n    handleNodeClick() {\n        // 更新选中状态\n        if (this.selectedNode === null) {\n            return;\n        }\n\n        console.log(\"是否 执行 nodel-link的颜色\", this.selectedNode)\n\n        // 更新节点样式，直接选择对应的节点\n        this.nodeElements\n            .filter(d => d.id === this.selectedNode) // 选择当前选中的节点\n            .style('stroke', 'orange') // 设置边框颜色\n            .style('stroke-width', 3); // 设置边框宽度\n\n        // 还原未选中节点的样式\n        this.nodeElements\n            .filter(d => d.id !== this.selectedNode) // 选择未选中的节点\n            .style('stroke', 'white') // 恢复边框颜色\n            .style('stroke-width', 1.5); // 恢复边框宽度\n    }\n\n\n\n    /**\n   * Always keep nodes in the bounding box\n   * @param x\n   * @returns new x\n   */\n    boxBoundX(x) {\n        return Math.max(this.nodeRadius, Math.min(this.width - this.nodeRadius, x));\n    }\n\n    /**\n     * Always keep nodes in the bounding box\n     * @param y\n     * @returns new y\n     */\n    boxBoundY(y) {\n        return Math.max(this.nodeRadius, Math.min(this.height - this.nodeRadius, y));\n    }\n\n    #ticked() {\n        // Update node and link positions\n        this.linkElements\n            .attr('x1', d => {\n                const source = d.source; // 移除类型注释\n                return source.x ? this.boxBoundX(source.x) : 0; // 移除私有方法标记\n            })\n            .attr('y1', d => {\n                const source = d.source; // 移除类型注释\n                return source.y ? this.boxBoundY(source.y) : 0; // 移除私有方法标记\n            })\n            .attr('x2', d => {\n                const target = d.target; // 移除类型注释\n                return target.x ? this.boxBoundX(target.x) : 0; // 移除私有方法标记\n            })\n            .attr('y2', d => {\n                const target = d.target; // 移除类型注释\n                return target.y ? this.boxBoundY(target.y) : 0; // 移除私有方法标记\n            });\n\n        this.nodeElements\n            .attr('cx', d => (d.x !== undefined ? this.boxBoundX(d.x) : 0)) // 移除私有方法标记\n            .attr('cy', d => (d.y !== undefined ? this.boxBoundY(d.y) : 0)); // 移除私有方法标记\n    }\n\n    dragFactory() {\n        const dragstarted = (e) => {\n            // Restart the simulation if it has already paused\n            if (!e.active) {\n                this.simulation.alpha(0.3).restart();\n            }\n            // Init fixed position fx and fy\n            e.subject.fx = e.subject.x;\n            e.subject.fy = e.subject.y;\n        };\n\n        const dragged = (e) => {\n            // Move the node to the targeted position using fixed position fx and fy\n            e.subject.fx = this.boxBoundX(e.x); // 移除私有方法标记\n            e.subject.fy = this.boxBoundY(e.y); // 移除私有方法标记\n        };\n\n        const dragended = (e) => {\n            // Reset fixed position fx and fy\n            e.subject.fx = null;\n            e.subject.fy = null;\n        };\n\n        return d3\n            .drag()\n            .on('start', dragstarted)\n            .on('drag', dragged)\n            .on('end', dragended);\n    }\n\n    updateNodeForceStrength(newStrength) {\n        // Update the forces\n        this.forceNode.strength(newStrength);\n\n        // Update the simulation\n        this.simulation.alpha(0.3).restart();\n    }\n\n    updateLinkForceStrength(newStrength) {\n        // Update the forces\n        this.forceLink.strength((link, i, links) => {\n            return (\n                newStrength /\n                Math.min(\n                    this.countNodeLink(link.source), // 移除类型注释\n                    this.countNodeLink(link.target)  // 移除类型注释\n                )\n            );\n        });\n\n        // Update the simulation\n        this.simulation.alpha(0.3).restart();\n    }\n\n    updateLinkForceDistance(newDistance) {\n        // Update the forces\n        this.forceLink.distance(newDistance);\n\n        // Update the simulation\n        this.simulation.alpha(0.3).restart();\n    }\n\n\n    updateCollideForceStrength(newStrength) {\n        // Update the forces\n        this.forceCollide.strength(newStrength);\n\n        // Update the simulation\n        this.simulation.alpha(0.3).restart();\n    }\n\n}"],"mappings":"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","ignoreList":[]}]}