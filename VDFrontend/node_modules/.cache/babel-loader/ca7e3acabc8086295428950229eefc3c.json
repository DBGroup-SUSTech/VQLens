{"remainingRequest":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js!/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js??ref--17!/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/yansha/VDProject/VDFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yansha/VDProject/VDFrontend/src/views/MainView/RightMainView/TreeView.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/yansha/VDProject/VDFrontend/src/views/MainView/RightMainView/TreeView.vue","mtime":1744442733412},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1744442733384},{"path":"/home/yansha/VDProject/VDFrontend/babel.config.js","mtime":1744442733384},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/vue-loader/lib/index.js","mtime":1735202381045}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["d3","mapState","api","name","components","data","treeData","svgWidth","svgHeight","velocityDecay","thumbnailTreeWidth","thumbnailTreeHeight","oldSelectedNode","mounted","getViewSize","$store","state","dataTree","initGraph","methods","tree","$refs","treeMain","clientWidth","clientHeight","updateSelectedNode","selectedNode","selectedElement","select","concat","empty","attr","console","log","convertToImage","event","node","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","imageUrl","patternId","targetElement","targetBBox","targetWidth","targetHeight","pattern","svg","defs","_pattern","image","wrap","_callee$","_context","prev","next","getImageUrl","datasetName","sent","target","getBBox","width","height","append","stop","initThumbnail","thumbnail","thumbnailTree","updateThumbnail","that","selectAll","remove","container","legendNode","cloneNode","linkNode","dataObj","recall","root","hierarchy","dx","dy","nodeSize","sort","a","b","ascending","x0","Infinity","x1","each","d","x","Math","max","call","zoom","on","transform","offheight","offwidth","text","link","links","join","linkHorizontal","y","descendants","border","style","raise","groupColorMap","group","existingBox","document","querySelector","parseInt","dataset","nodeId","id","options","pageX","pageY","closest","stopPropagation","children","distance","legend","uniqueGroups","legendItems","enter","i","computed","_objectSpread","dataNodelink","retrievalSet","modelName","retrievalInfo","watch","newVal","oldVal","selectedTab","_this2","$nextTick"],"sources":["src/views/MainView/RightMainView/TreeView.vue"],"sourcesContent":["<template>\n  <div class=\"tree-main\" ref=\"treeMain\">\n    <svg ref=\"tree\" class=\"tree-svg\"></svg>\n    <!-- <svg ref=\"thumbnailTree\" class=\"thumbnail-tree-svg\"></svg> -->\n  </div>\n</template>\n\n<script>\n\nimport * as d3 from \"d3\";\nimport { mapState } from \"vuex\";\nimport api from \"@/api/data\";\n\nexport default {\n  name: \"TreeView\",\n  components: {},\n  data() {\n    return {\n      treeData: {},\n      svgWidth: 0,\n      svgHeight: 0,\n      velocityDecay: 0.6,\n      thumbnailTreeWidth: 0, // 缩略图宽度\n      thumbnailTreeHeight: 0, // 缩略图高度\n\n\n\n      oldSelectedNode: '-1',\n\n    };\n  },\n  mounted() {\n    this.getViewSize();\n\n    this.treeData = this.$store.state.dataTree;\n    this.initGraph(this.treeData);\n\n    // this.initThumbnail();\n\n  },\n  methods: {\n    getViewSize() {\n      const tree = this.$refs.treeMain;\n      this.svgWidth = tree.clientWidth;\n      this.svgHeight = tree.clientHeight;\n\n      this.thumbnailTreeWidth = this.svgWidth / 5;\n      this.thumbnailTreeHeight = this.svgHeight / 5;\n    },\n    updateSelectedNode(selectedNode) {\n\n      // 使用选择器查找节点\n      const selectedElement = d3.select(`#nodes-${selectedNode}`);\n\n      // 检查元素是否存在\n      if (!selectedElement.empty()) {\n        if (selectedNode === this.oldSelectedNode) {\n          selectedElement\n            .attr(\"r\", 10) // 边框半径\n            .attr(\"stroke\", \"none\") // 边框颜色\n            .attr(\"stroke-width\", 3); // 边框宽度\n\n          this.oldSelectedNode = '-1';\n\n        } else {\n          selectedElement\n            .attr(\"r\", 4) // 边框半径\n            .attr(\"stroke\", \"yellow\") // 边框颜色\n            .attr(\"stroke-width\", 4); // 边框宽度\n\n          this.oldSelectedNode = selectedNode;\n\n        }\n\n      } else if (this.oldSelectedNode !== -1) {\n        d3.select(`#nodes-${this.oldSelectedNode}`)\n          .attr(\"r\", 10) // 边框半径\n          .attr(\"stroke\", \"none\") // 边框颜色\n          .attr(\"stroke-width\", 3); // 边框宽度\n\n        this.oldSelectedNode = '-1';\n\n      } else {\n        console.log(`元素 #nodes-${selectedNode} 未找到`);\n      }\n\n\n    },\n    async convertToImage(event, node) {\n\n      const res = await api.getImageUrl({ \"datasetName\": this.$store.state.datasetName, \"nodeId\": +node.data.name });\n      const imageUrl = res[\"data\"][\"imageUrl\"];\n      const patternId = `pattern-${+node.data.name}`;\n      const targetElement = d3.select(event.target);\n\n      const targetBBox = targetElement.node().getBBox();\n      const targetWidth = targetBBox.width;\n      const targetHeight = targetBBox.height;\n\n      let pattern = d3.select(`#${patternId}`);\n      if (pattern.empty()) {\n        // 如果 pattern 不存在，则创建\n        const svg = d3.select(this.$refs.tree);\n\n        // 确保 defs 存在\n        let defs = svg.select(\"defs\");\n        if (defs.empty()) {\n          defs = svg.append(\"defs\");\n        }\n\n        const pattern = defs.append(\"pattern\")\n          .attr(\"id\", patternId)\n          .attr(\"patternUnits\", \"objectBoundingBox\")\n          .attr(\"width\", 1) // 宽度为 1 表示相对于目标元素的宽度\n          .attr(\"height\", 1) // 高度为 1 表示相对于目标元素的高度\n          .attr(\"patternTransform\", \"translate(1, 1)\"); // 向右和向下移动 10 个单位\n\n        const image = pattern.append(\"image\")\n          .attr(\"xlink:href\", imageUrl)\n          .attr(\"width\", 58)\n          .attr(\"height\", 58)\n          .attr(\"preserveAspectRatio\", \"xMidYMid slice\");\n      }\n\n      // 填充目标元素\n      targetElement\n        .attr(\"r\", 30)\n        .attr(\"fill\", `url(#${patternId})`)\n        .attr(\"stroke\", \"#000\") // 设置边框颜色\n        .attr(\"stroke-width\", 2); // 设置边框宽度\n    },\n    initThumbnail() {\n      const thumbnail = d3.select(this.$refs.thumbnailTree);\n      thumbnail\n        .attr(\"width\", this.thumbnailTreeWidth)\n        .attr(\"height\", this.thumbnailTreeHeight)\n        .attr(\"viewBox\", `0 0 ${this.thumbnailTreeWidth} ${this.thumbnailTreeHeight}`)\n        .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n        .attr(\"style\", \"position: absolute; top: 120px; right: 40px; border: 1px solid #ccc; background: #fff;\");\n    },\n    updateThumbnail() {\n      const that = this;\n      const thumbnail = d3.select(this.$refs.thumbnailTree);\n      thumbnail.selectAll(\"*\").remove();\n      const container = thumbnail.append(\"g\")\n        .attr(\"transform\", `scale(${that.thumbnailTreeWidth / that.svgWidth}, ${that.thumbnailTreeHeight / that.svgHeight}) translate(0, ${that.svgHeight / 2})`);\n\n      // Clone legend and link nodes\n      const legendNode = d3.select(that.$refs.tree).select(`.nodes`).node().cloneNode(true);\n      const linkNode = d3.select(that.$refs.tree).select(`#linkTree`).node().cloneNode(true);\n\n      container.append(() => legendNode);\n      container.append(() => linkNode);\n\n    },\n    initGraph(dataObj) {\n      const that = this;\n      const width = that.svgWidth;\n      // parse data\n      const recall = dataObj[\"metric\"]['recall'];\n      const data = dataObj.treeData[\"0\"];\n      const root = d3.hierarchy(data);\n\n      const dx = 30;\n      const dy = width / (root.height + 1);\n\n      const tree = d3.tree().nodeSize([dx, dy]);\n\n      root.sort((a, b) => d3.ascending(a.data.name, b.data.name));\n      tree(root);\n\n      let x0 = Infinity;\n      let x1 = -x0;\n      root.each(d => {\n        if (d.x > x1) x1 = d.x;\n        if (d.x < x0) x0 = d.x;\n      });\n\n      // 打印结果\n      const height = Math.max(x1 - x0 + dx * 2, that.svgHeight);\n\n      d3.select(this.$refs[\"tree\"]).selectAll(\"*\").remove();\n\n      const svg = d3.select(this.$refs[\"tree\"])\n        .attr(\"viewBox\", [-dy / 2, x0 - dx, width, height])\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"style\", \"max-width: 100%; height: auto; font: 10px sans-serif;\")\n        .call(d3.zoom().on(\"zoom\", (event) => {\n          container.attr(\"transform\", event.transform);\n        }));\n\n      const container = svg\n        .append(\"g\")\n        .attr(\"class\", \"container\");\n      // .attr(\"transform\", `translate(0, ${dx})`);\n      const offheight = -dy / 3;\n      const offwidth = x0 + dx / 3 * 2;\n      svg.append(\"text\")\n        .attr(\"transform\", `translate(${offheight}, ${offwidth})`)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", 15)\n        .text(`Recall: ${recall}`);\n\n      const link = container.append(\"g\")\n        .attr(\"class\", \"links\")\n        .attr(\"id\", `linkTree`)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#555\")\n        .attr(\"stroke-opacity\", 0.4)\n        .attr(\"stroke-width\", 1.5)\n        .selectAll()\n        .data(root.links())\n        .join(\"path\")\n        .attr(\"d\", d3.linkHorizontal()\n          .x(d => d.y)\n          .y(d => d.x));\n\n      const node = container.append(\"g\")\n        .attr(\"class\", \"nodes\")\n        .attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke-width\", 3)\n        .selectAll(\"g\")\n        .data(root.descendants())\n        .join(\"g\")\n        .attr(\"transform\", d => `translate(${d.y},${d.x})`)\n        .attr(\"id\", d => `nodes-${d.data.name}`);\n\n      console.log(\"nodes\", node)\n\n      const border = container.append(\"g\")\n        .attr(\"class\", \"borders\")\n        .selectAll(\"circle\")\n        .data(root.descendants())\n        .join(\"circle\")\n        .attr(\"r\", 12)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"none\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"transform\", d => `translate(${d.y},${d.x})`)\n        .style(\"pointer-events\", \"none\"); // 禁止 border 元素接收鼠标事件\n\n      border.raise();\n\n      node.on(\"mouseover\", function (event, d) {\n        // console.log(\"mouseover\", d.data.name);\n\n        // 设置 border 元素的样式\n        border.attr(\"stroke\", b => b === d ? \"#6096E6\" : \"none\");\n\n        // console.log(\"Node name on mouseover:\", d.data.name);\n      })\n        .on(\"mouseout\", function (event, d) {\n          // 移除 border 元素的样式\n          border.attr(\"stroke\", \"none\");\n        });\n\n\n      const groupColorMap = {\n        0: \"#FF0000\",\n        1: \"#A4D3EE\",\n        2: \"#32CD32\",\n        3: \"#FF7F50\",\n      };\n\n      node.append(\"circle\")\n        .attr(\"fill\", d => groupColorMap[d.data.group] || \"#A4D3EE\")\n        .attr(\"id\", `nodeTree`)\n        .attr(\"r\", 10);\n\n      node.on(\"click\", function (event, d) {\n        const existingBox = document.querySelector('.option-box');\n        if (existingBox) {\n          if (parseInt(existingBox.dataset.nodeId) === parseInt(d.id)) {\n            existingBox.remove();\n            return;\n          }\n          existingBox.remove();\n        }\n        const options = d3.select(\"body\").append(\"div\")\n          .attr(\"class\", \"option-box\")\n          .attr(\"data-node-id\", d.id)\n          .style(\"position\", \"absolute\")\n          .style(\"left\", `${event.pageX + 10}px`)\n          .style(\"top\", `${event.pageY + 10}px`)\n          .style(\"display\", \"flex\")\n          .style(\"gap\", \"8px\")\n          .style(\"border\", \"1px solid #7F7F7F\")\n          .style(\"background-color\", \"#F7F7F7\")\n          .style(\"width\", \"86px\")\n          .style(\"height\", \"25px\")\n          .style(\"padding\", \"2.5px 0\")\n          .style(\"padding-left\", \"8px\")\n          .style(\"border-radius\", \"8px\")\n          .style(\"align-items\", \"center\")\n          .style(\"z-index\", 1000);\n        options.append(\"div\")\n          .text(\"+\")\n          .style(\"font-size\", \"20px\")\n          .style(\"color\", \"#679D43\")\n          .style(\"border-radius\", \"50%\")\n          .style(\"width\", \"20px\")\n          .style(\"height\", \"20px\")\n          .style(\"text-align\", \"center\")\n          .style(\"line-height\", \"20px\")\n          .style(\"background-color\", \"#D4E2C8\")\n          .on(\"click\", () => console.log(\"Plus clicked\", d));\n        options.append(\"div\")\n          .text(\"-\")\n          .text(\"-\")\n          .style(\"font-size\", \"20px\")\n          .style(\"border-radius\", \"50%\")\n          .style(\"width\", \"20px\")\n          .style(\"height\", \"20px\")\n          .style(\"text-align\", \"center\")\n          .style(\"line-height\", \"20px\")\n          .style(\"background-color\", \"#D4E2C8\")\n          .style(\"color\", \"#679D43\")\n          .on(\"click\", () => console.log(\"Minus clicked\"));\n        options.append(\"div\")\n          .text(\"A\")\n          .style(\"font-size\", \"14px\")\n          .style(\"border-radius\", \"50%\")\n          .style(\"width\", \"20px\")\n          .style(\"height\", \"20px\")\n          .style(\"text-align\", \"center\")\n          .style(\"background-color\", \"#D4E2C8\")\n          .style(\"color\", \"#679D43\")\n          .on(\"click\", () => that.convertToImage(event, d));\n        d3.select(\"body\").on(\"click\", function (event) {\n          if (!event.target.closest('.option-box') && !event.target.closest('circle')) {\n            d3.selectAll('.option-box').remove();\n          }\n        });\n        event.stopPropagation();\n      });\n\n\n      node.append(\"text\")\n        .attr(\"dy\", \"0.31em\")\n        .attr(\"x\", d => d.children ? 6 : 6)\n        .attr(\"text-anchor\", d => d.children ? \"end\" : \"start\")\n        // .text(d => d.data.name)\n        .text(d => {\n          if (d.data.group === 2 || d.data.group === 3) {\n            return `${d.data.name}`;\n          } else {\n            return \"\";\n          }\n        })\n        .attr(\"stroke\", \"white\")\n        .attr(\"paint-order\", \"stroke\");\n\n      node.append(\"title\")\n        .text(d => `ID: ${d.data.name}, Distance: ${d.data.distance}`);\n\n      // this.updateThumbnail();\n\n      const legend = svg.append(\"g\")\n        .attr(\"transform\", `translate(${offheight}, ${offwidth + 10})`)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", 10);\n\n      const uniqueGroups = [0, 1, 2, 3];\n\n\n      const legendItems = legend.selectAll(\"g\")\n        .data(uniqueGroups)\n        .enter().append(\"g\")\n        .attr(\"transform\", (d, i) => `translate(0,${i * 20})`);\n\n      legendItems.append(\"rect\")\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .attr(\"fill\", d => groupColorMap[d])\n\n      legendItems.append(\"text\")\n        .attr(\"x\", 24)\n        .attr(\"y\", 9)\n        .attr(\"dy\", \"0.35em\")\n        .text(d => {\n          if (d === 0) {\n            return \"start node\";\n          } else if (d === 1) {\n            return \"normal node\";\n          } else if (d === 2) {\n            return \"gt&search intersection\";\n          } else if (d === 3) {\n            return \"search other\";\n          }\n        });\n\n    }\n\n  },\n  computed: {\n    ...mapState({\n      dataTree: \"dataTree\",\n      dataNodelink: \"dataNodeLink\",\n      retrievalSet: \"retrievalSet\",\n      datasetName: \"datasetName\",\n      modelName: \"modelName\",\n      retrievalInfo: \"retrievalInfo\",\n      selectedNode: \"selectedNode\"\n    }),\n\n  },\n  watch: {\n    selectedNode(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.updateSelectedNode(newVal);\n      }\n\n    },\n    selectedTab(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.$nextTick(() => {\n          this.getViewSize();\n          this.initGraph(this.treeData);\n          // this.initThumbnail();\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.tree-main {\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n\n  .tree-svg {\n    width: 100%;\n    height: 100%;\n  }\n\n  .thumbnail-tree-svg {\n    position: absolute;\n    right: 20px;\n    top: 120px;\n    border: 1px solid #ccc;\n    background: #fff;\n  }\n}\n\n.option-box {\n  border: 1px solid #F7F7F7;\n  background-color: #F7F7F7;\n  padding: 5px;\n  position: absolute;\n  z-index: 1000;\n\n  div {\n    margin: 2px 0;\n    cursor: pointer;\n  }\n\n  div:hover {\n    background-color: #f0f0f0;\n  }\n}\n\n.option-button {\n  padding: 5px 10px;\n  border: 1px solid #000;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: #f0f0f0;\n  font-size: 14px;\n  font-family: Arial, sans-serif;\n  color: red;\n}\n\n.option-button:hover {\n  background-color: #e0e0e0;\n}\n</style>"],"mappings":";;;AASA,YAAAA,EAAA;AACA,SAAAC,QAAA;AACA,OAAAC,GAAA;AAEA;EACAC,IAAA;EACAC,UAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,SAAA;MACAC,aAAA;MACAC,kBAAA;MAAA;MACAC,mBAAA;MAAA;;MAIAC,eAAA;IAEA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,WAAA;IAEA,KAAAR,QAAA,QAAAS,MAAA,CAAAC,KAAA,CAAAC,QAAA;IACA,KAAAC,SAAA,MAAAZ,QAAA;;IAEA;EAEA;EACAa,OAAA;IACAL,WAAA,WAAAA,YAAA;MACA,IAAAM,IAAA,QAAAC,KAAA,CAAAC,QAAA;MACA,KAAAf,QAAA,GAAAa,IAAA,CAAAG,WAAA;MACA,KAAAf,SAAA,GAAAY,IAAA,CAAAI,YAAA;MAEA,KAAAd,kBAAA,QAAAH,QAAA;MACA,KAAAI,mBAAA,QAAAH,SAAA;IACA;IACAiB,kBAAA,WAAAA,mBAAAC,YAAA;MAEA;MACA,IAAAC,eAAA,GAAA3B,EAAA,CAAA4B,MAAA,WAAAC,MAAA,CAAAH,YAAA;;MAEA;MACA,KAAAC,eAAA,CAAAG,KAAA;QACA,IAAAJ,YAAA,UAAAd,eAAA;UACAe,eAAA,CACAI,IAAA;UAAA,CACAA,IAAA;UAAA,CACAA,IAAA;;UAEA,KAAAnB,eAAA;QAEA;UACAe,eAAA,CACAI,IAAA;UAAA,CACAA,IAAA;UAAA,CACAA,IAAA;;UAEA,KAAAnB,eAAA,GAAAc,YAAA;QAEA;MAEA,gBAAAd,eAAA;QACAZ,EAAA,CAAA4B,MAAA,WAAAC,MAAA,MAAAjB,eAAA,GACAmB,IAAA;QAAA,CACAA,IAAA;QAAA,CACAA,IAAA;;QAEA,KAAAnB,eAAA;MAEA;QACAoB,OAAA,CAAAC,GAAA,wBAAAJ,MAAA,CAAAH,YAAA;MACA;IAGA;IACAQ,cAAA,WAAAA,eAAAC,KAAA,EAAAC,IAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,GAAA,EAAAC,QAAA,EAAAC,SAAA,EAAAC,aAAA,EAAAC,UAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,OAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,KAAA;QAAA,OAAAd,mBAAA,GAAAe,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OAEAxD,GAAA,CAAAyD,WAAA;gBAAA,eAAAtB,KAAA,CAAAtB,MAAA,CAAAC,KAAA,CAAA4C,WAAA;gBAAA,WAAAxB,IAAA,CAAA/B,IAAA,CAAAF;cAAA;YAAA;cAAAuC,GAAA,GAAAc,QAAA,CAAAK,IAAA;cACAlB,QAAA,GAAAD,GAAA;cACAE,SAAA,cAAAf,MAAA,EAAAO,IAAA,CAAA/B,IAAA,CAAAF,IAAA;cACA0C,aAAA,GAAA7C,EAAA,CAAA4B,MAAA,CAAAO,KAAA,CAAA2B,MAAA;cAEAhB,UAAA,GAAAD,aAAA,CAAAT,IAAA,GAAA2B,OAAA;cACAhB,WAAA,GAAAD,UAAA,CAAAkB,KAAA;cACAhB,YAAA,GAAAF,UAAA,CAAAmB,MAAA;cAEAhB,OAAA,GAAAjD,EAAA,CAAA4B,MAAA,KAAAC,MAAA,CAAAe,SAAA;cACA,IAAAK,OAAA,CAAAnB,KAAA;gBACA;gBACAoB,GAAA,GAAAlD,EAAA,CAAA4B,MAAA,CAAAS,KAAA,CAAAhB,KAAA,CAAAD,IAAA,GAEA;gBACA+B,IAAA,GAAAD,GAAA,CAAAtB,MAAA;gBACA,IAAAuB,IAAA,CAAArB,KAAA;kBACAqB,IAAA,GAAAD,GAAA,CAAAgB,MAAA;gBACA;gBAEAd,QAAA,GAAAD,IAAA,CAAAe,MAAA,YACAnC,IAAA,OAAAa,SAAA,EACAb,IAAA,sCACAA,IAAA;gBAAA,CACAA,IAAA;gBAAA,CACAA,IAAA;gBAEAsB,KAAA,GAAAD,QAAA,CAAAc,MAAA,UACAnC,IAAA,eAAAY,QAAA,EACAZ,IAAA,cACAA,IAAA,eACAA,IAAA;cACA;;cAEA;cACAc,aAAA,CACAd,IAAA,UACAA,IAAA,iBAAAF,MAAA,CAAAe,SAAA,QACAb,IAAA;cAAA,CACAA,IAAA;YAAA;YAAA;YAAA;cAAA,OAAAyB,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAA1B,OAAA;MAAA;IACA;IACA2B,aAAA,WAAAA,cAAA;MACA,IAAAC,SAAA,GAAArE,EAAA,CAAA4B,MAAA,MAAAP,KAAA,CAAAiD,aAAA;MACAD,SAAA,CACAtC,IAAA,eAAArB,kBAAA,EACAqB,IAAA,gBAAApB,mBAAA,EACAoB,IAAA,mBAAAF,MAAA,MAAAnB,kBAAA,OAAAmB,MAAA,MAAAlB,mBAAA,GACAoB,IAAA,yCACAA,IAAA;IACA;IACAwC,eAAA,WAAAA,gBAAA;MACA,IAAAC,IAAA;MACA,IAAAH,SAAA,GAAArE,EAAA,CAAA4B,MAAA,MAAAP,KAAA,CAAAiD,aAAA;MACAD,SAAA,CAAAI,SAAA,MAAAC,MAAA;MACA,IAAAC,SAAA,GAAAN,SAAA,CAAAH,MAAA,MACAnC,IAAA,uBAAAF,MAAA,CAAA2C,IAAA,CAAA9D,kBAAA,GAAA8D,IAAA,CAAAjE,QAAA,QAAAsB,MAAA,CAAA2C,IAAA,CAAA7D,mBAAA,GAAA6D,IAAA,CAAAhE,SAAA,qBAAAqB,MAAA,CAAA2C,IAAA,CAAAhE,SAAA;;MAEA;MACA,IAAAoE,UAAA,GAAA5E,EAAA,CAAA4B,MAAA,CAAA4C,IAAA,CAAAnD,KAAA,CAAAD,IAAA,EAAAQ,MAAA,WAAAQ,IAAA,GAAAyC,SAAA;MACA,IAAAC,QAAA,GAAA9E,EAAA,CAAA4B,MAAA,CAAA4C,IAAA,CAAAnD,KAAA,CAAAD,IAAA,EAAAQ,MAAA,cAAAQ,IAAA,GAAAyC,SAAA;MAEAF,SAAA,CAAAT,MAAA;QAAA,OAAAU,UAAA;MAAA;MACAD,SAAA,CAAAT,MAAA;QAAA,OAAAY,QAAA;MAAA;IAEA;IACA5D,SAAA,WAAAA,UAAA6D,OAAA;MACA,IAAAP,IAAA;MACA,IAAAR,KAAA,GAAAQ,IAAA,CAAAjE,QAAA;MACA;MACA,IAAAyE,MAAA,GAAAD,OAAA;MACA,IAAA1E,IAAA,GAAA0E,OAAA,CAAAzE,QAAA;MACA,IAAA2E,IAAA,GAAAjF,EAAA,CAAAkF,SAAA,CAAA7E,IAAA;MAEA,IAAA8E,EAAA;MACA,IAAAC,EAAA,GAAApB,KAAA,IAAAiB,IAAA,CAAAhB,MAAA;MAEA,IAAA7C,IAAA,GAAApB,EAAA,CAAAoB,IAAA,GAAAiE,QAAA,EAAAF,EAAA,EAAAC,EAAA;MAEAH,IAAA,CAAAK,IAAA,WAAAC,CAAA,EAAAC,CAAA;QAAA,OAAAxF,EAAA,CAAAyF,SAAA,CAAAF,CAAA,CAAAlF,IAAA,CAAAF,IAAA,EAAAqF,CAAA,CAAAnF,IAAA,CAAAF,IAAA;MAAA;MACAiB,IAAA,CAAA6D,IAAA;MAEA,IAAAS,EAAA,GAAAC,QAAA;MACA,IAAAC,EAAA,IAAAF,EAAA;MACAT,IAAA,CAAAY,IAAA,WAAAC,CAAA;QACA,IAAAA,CAAA,CAAAC,CAAA,GAAAH,EAAA,EAAAA,EAAA,GAAAE,CAAA,CAAAC,CAAA;QACA,IAAAD,CAAA,CAAAC,CAAA,GAAAL,EAAA,EAAAA,EAAA,GAAAI,CAAA,CAAAC,CAAA;MACA;;MAEA;MACA,IAAA9B,MAAA,GAAA+B,IAAA,CAAAC,GAAA,CAAAL,EAAA,GAAAF,EAAA,GAAAP,EAAA,MAAAX,IAAA,CAAAhE,SAAA;MAEAR,EAAA,CAAA4B,MAAA,MAAAP,KAAA,UAAAoD,SAAA,MAAAC,MAAA;MAEA,IAAAxB,GAAA,GAAAlD,EAAA,CAAA4B,MAAA,MAAAP,KAAA,UACAU,IAAA,cAAAqD,EAAA,MAAAM,EAAA,GAAAP,EAAA,EAAAnB,KAAA,EAAAC,MAAA,GACAlC,IAAA,UAAAiC,KAAA,EACAjC,IAAA,WAAAkC,MAAA,EACAlC,IAAA,mEACAmE,IAAA,CAAAlG,EAAA,CAAAmG,IAAA,GAAAC,EAAA,mBAAAjE,KAAA;QACAwC,SAAA,CAAA5C,IAAA,cAAAI,KAAA,CAAAkE,SAAA;MACA;MAEA,IAAA1B,SAAA,GAAAzB,GAAA,CACAgB,MAAA,MACAnC,IAAA;MACA;MACA,IAAAuE,SAAA,IAAAlB,EAAA;MACA,IAAAmB,QAAA,GAAAb,EAAA,GAAAP,EAAA;MACAjC,GAAA,CAAAgB,MAAA,SACAnC,IAAA,2BAAAF,MAAA,CAAAyE,SAAA,QAAAzE,MAAA,CAAA0E,QAAA,QACAxE,IAAA,8BACAA,IAAA,kBACAyE,IAAA,YAAA3E,MAAA,CAAAmD,MAAA;MAEA,IAAAyB,IAAA,GAAA9B,SAAA,CAAAT,MAAA,MACAnC,IAAA,mBACAA,IAAA,mBACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,wBACAA,IAAA,sBACA0C,SAAA,GACApE,IAAA,CAAA4E,IAAA,CAAAyB,KAAA,IACAC,IAAA,SACA5E,IAAA,MAAA/B,EAAA,CAAA4G,cAAA,GACAb,CAAA,WAAAD,CAAA;QAAA,OAAAA,CAAA,CAAAe,CAAA;MAAA,GACAA,CAAA,WAAAf,CAAA;QAAA,OAAAA,CAAA,CAAAC,CAAA;MAAA;MAEA,IAAA3D,IAAA,GAAAuC,SAAA,CAAAT,MAAA,MACAnC,IAAA,mBACAA,IAAA,6BACAA,IAAA,oBACA0C,SAAA,MACApE,IAAA,CAAA4E,IAAA,CAAA6B,WAAA,IACAH,IAAA,MACA5E,IAAA,wBAAA+D,CAAA;QAAA,oBAAAjE,MAAA,CAAAiE,CAAA,CAAAe,CAAA,OAAAhF,MAAA,CAAAiE,CAAA,CAAAC,CAAA;MAAA,GACAhE,IAAA,iBAAA+D,CAAA;QAAA,gBAAAjE,MAAA,CAAAiE,CAAA,CAAAzF,IAAA,CAAAF,IAAA;MAAA;MAEA6B,OAAA,CAAAC,GAAA,UAAAG,IAAA;MAEA,IAAA2E,MAAA,GAAApC,SAAA,CAAAT,MAAA,MACAnC,IAAA,qBACA0C,SAAA,WACApE,IAAA,CAAA4E,IAAA,CAAA6B,WAAA,IACAH,IAAA,WACA5E,IAAA,UACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,oBACAA,IAAA,wBAAA+D,CAAA;QAAA,oBAAAjE,MAAA,CAAAiE,CAAA,CAAAe,CAAA,OAAAhF,MAAA,CAAAiE,CAAA,CAAAC,CAAA;MAAA,GACAiB,KAAA;;MAEAD,MAAA,CAAAE,KAAA;MAEA7E,IAAA,CAAAgE,EAAA,wBAAAjE,KAAA,EAAA2D,CAAA;QACA;;QAEA;QACAiB,MAAA,CAAAhF,IAAA,qBAAAyD,CAAA;UAAA,OAAAA,CAAA,KAAAM,CAAA;QAAA;;QAEA;MACA,GACAM,EAAA,uBAAAjE,KAAA,EAAA2D,CAAA;QACA;QACAiB,MAAA,CAAAhF,IAAA;MACA;MAGA,IAAAmF,aAAA;QACA;QACA;QACA;QACA;MACA;MAEA9E,IAAA,CAAA8B,MAAA,WACAnC,IAAA,mBAAA+D,CAAA;QAAA,OAAAoB,aAAA,CAAApB,CAAA,CAAAzF,IAAA,CAAA8G,KAAA;MAAA,GACApF,IAAA,mBACAA,IAAA;MAEAK,IAAA,CAAAgE,EAAA,oBAAAjE,KAAA,EAAA2D,CAAA;QACA,IAAAsB,WAAA,GAAAC,QAAA,CAAAC,aAAA;QACA,IAAAF,WAAA;UACA,IAAAG,QAAA,CAAAH,WAAA,CAAAI,OAAA,CAAAC,MAAA,MAAAF,QAAA,CAAAzB,CAAA,CAAA4B,EAAA;YACAN,WAAA,CAAA1C,MAAA;YACA;UACA;UACA0C,WAAA,CAAA1C,MAAA;QACA;QACA,IAAAiD,OAAA,GAAA3H,EAAA,CAAA4B,MAAA,SAAAsC,MAAA,QACAnC,IAAA,wBACAA,IAAA,iBAAA+D,CAAA,CAAA4B,EAAA,EACAV,KAAA,yBACAA,KAAA,YAAAnF,MAAA,CAAAM,KAAA,CAAAyF,KAAA,cACAZ,KAAA,WAAAnF,MAAA,CAAAM,KAAA,CAAA0F,KAAA,cACAb,KAAA,oBACAA,KAAA,eACAA,KAAA,gCACAA,KAAA,gCACAA,KAAA,kBACAA,KAAA,mBACAA,KAAA,uBACAA,KAAA,wBACAA,KAAA,yBACAA,KAAA,0BACAA,KAAA;QACAW,OAAA,CAAAzD,MAAA,QACAsC,IAAA,MACAQ,KAAA,sBACAA,KAAA,qBACAA,KAAA,yBACAA,KAAA,kBACAA,KAAA,mBACAA,KAAA,yBACAA,KAAA,wBACAA,KAAA,gCACAZ,EAAA;UAAA,OAAApE,OAAA,CAAAC,GAAA,iBAAA6D,CAAA;QAAA;QACA6B,OAAA,CAAAzD,MAAA,QACAsC,IAAA,MACAA,IAAA,MACAQ,KAAA,sBACAA,KAAA,yBACAA,KAAA,kBACAA,KAAA,mBACAA,KAAA,yBACAA,KAAA,wBACAA,KAAA,gCACAA,KAAA,qBACAZ,EAAA;UAAA,OAAApE,OAAA,CAAAC,GAAA;QAAA;QACA0F,OAAA,CAAAzD,MAAA,QACAsC,IAAA,MACAQ,KAAA,sBACAA,KAAA,yBACAA,KAAA,kBACAA,KAAA,mBACAA,KAAA,yBACAA,KAAA,gCACAA,KAAA,qBACAZ,EAAA;UAAA,OAAA5B,IAAA,CAAAtC,cAAA,CAAAC,KAAA,EAAA2D,CAAA;QAAA;QACA9F,EAAA,CAAA4B,MAAA,SAAAwE,EAAA,oBAAAjE,KAAA;UACA,KAAAA,KAAA,CAAA2B,MAAA,CAAAgE,OAAA,oBAAA3F,KAAA,CAAA2B,MAAA,CAAAgE,OAAA;YACA9H,EAAA,CAAAyE,SAAA,gBAAAC,MAAA;UACA;QACA;QACAvC,KAAA,CAAA4F,eAAA;MACA;MAGA3F,IAAA,CAAA8B,MAAA,SACAnC,IAAA,iBACAA,IAAA,gBAAA+D,CAAA;QAAA,OAAAA,CAAA,CAAAkC,QAAA;MAAA,GACAjG,IAAA,0BAAA+D,CAAA;QAAA,OAAAA,CAAA,CAAAkC,QAAA;MAAA;MACA;MAAA,CACAxB,IAAA,WAAAV,CAAA;QACA,IAAAA,CAAA,CAAAzF,IAAA,CAAA8G,KAAA,UAAArB,CAAA,CAAAzF,IAAA,CAAA8G,KAAA;UACA,UAAAtF,MAAA,CAAAiE,CAAA,CAAAzF,IAAA,CAAAF,IAAA;QACA;UACA;QACA;MACA,GACA4B,IAAA,oBACAA,IAAA;MAEAK,IAAA,CAAA8B,MAAA,UACAsC,IAAA,WAAAV,CAAA;QAAA,cAAAjE,MAAA,CAAAiE,CAAA,CAAAzF,IAAA,CAAAF,IAAA,kBAAA0B,MAAA,CAAAiE,CAAA,CAAAzF,IAAA,CAAA4H,QAAA;MAAA;;MAEA;;MAEA,IAAAC,MAAA,GAAAhF,GAAA,CAAAgB,MAAA,MACAnC,IAAA,2BAAAF,MAAA,CAAAyE,SAAA,QAAAzE,MAAA,CAAA0E,QAAA,aACAxE,IAAA,8BACAA,IAAA;MAEA,IAAAoG,YAAA;MAGA,IAAAC,WAAA,GAAAF,MAAA,CAAAzD,SAAA,MACApE,IAAA,CAAA8H,YAAA,EACAE,KAAA,GAAAnE,MAAA,MACAnC,IAAA,wBAAA+D,CAAA,EAAAwC,CAAA;QAAA,sBAAAzG,MAAA,CAAAyG,CAAA;MAAA;MAEAF,WAAA,CAAAlE,MAAA,SACAnC,IAAA,cACAA,IAAA,eACAA,IAAA,mBAAA+D,CAAA;QAAA,OAAAoB,aAAA,CAAApB,CAAA;MAAA;MAEAsC,WAAA,CAAAlE,MAAA,SACAnC,IAAA,UACAA,IAAA,SACAA,IAAA,iBACAyE,IAAA,WAAAV,CAAA;QACA,IAAAA,CAAA;UACA;QACA,WAAAA,CAAA;UACA;QACA,WAAAA,CAAA;UACA;QACA,WAAAA,CAAA;UACA;QACA;MACA;IAEA;EAEA;EACAyC,QAAA,EAAAC,aAAA,KACAvI,QAAA;IACAgB,QAAA;IACAwH,YAAA;IACAC,YAAA;IACA9E,WAAA;IACA+E,SAAA;IACAC,aAAA;IACAlH,YAAA;EACA,GAEA;EACAmH,KAAA;IACAnH,YAAA,WAAAA,aAAAoH,MAAA,EAAAC,MAAA;MACA,IAAAD,MAAA,KAAAC,MAAA;QACA,KAAAtH,kBAAA,CAAAqH,MAAA;MACA;IAEA;IACAE,WAAA,WAAAA,YAAAF,MAAA,EAAAC,MAAA;MAAA,IAAAE,MAAA;MACA,IAAAH,MAAA,KAAAC,MAAA;QACA,KAAAG,SAAA;UACAD,MAAA,CAAAnI,WAAA;UACAmI,MAAA,CAAA/H,SAAA,CAAA+H,MAAA,CAAA3I,QAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]}]}