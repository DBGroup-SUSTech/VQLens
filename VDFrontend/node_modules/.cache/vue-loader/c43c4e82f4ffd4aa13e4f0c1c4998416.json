{"remainingRequest":"/home/yansha/VDProject/VDFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yansha/VDProject/VDFrontend/src/views/MainView/BottomMainView/TableMainView.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/yansha/VDProject/VDFrontend/src/views/MainView/BottomMainView/TableMainView.vue","mtime":1734699653846},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/vue-loader/lib/index.js","mtime":1735202381045}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgppbXBvcnQgKiBhcyBkMyBmcm9tICJkMyI7CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAidnVleCI7CmltcG9ydCBhcGkgZnJvbSAiQC9hcGkvZGF0YSI7CmltcG9ydCB7IG9uVXBkYXRlZCB9IGZyb20gInZ1ZSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiVGFibGVNYWluVmlldyIsCiAgICBjb21wb25lbnRzOiB7CgogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgc2VsZWN0ZWRUYWJWYWx1ZTogIk5vbmUiLAogICAgICAgICAgICBmaWxlTGlzdDogW10sCiAgICAgICAgICAgIGZpbGVDb250ZW50OiB7fSwKCiAgICAgICAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICAgICAgICBwYWdlRGF0YTogW10sCiAgICAgICAgICAgIHBhZ2VTaXplOiAxMCwgLy8gTnVtYmVyIG9mIGl0ZW1zIHBlciBwYWdlCiAgICAgICAgICAgIHRvdGFsUGFnZTogMCwKICAgICAgICAgICAgc29ydGVkRGF0YTogW10sCgogICAgICAgICAgICBpbWFnZVByZVVybDogIiIsCiAgICAgICAgICAgIGlzU2hvdzogZmFsc2UsCgogICAgICAgICAgICBzZWFyY2hRdWVyeTogIiIsCiAgICAgICAgICAgIGZpbHRlcmREYXRhOiBbXSwKICAgICAgICAgICAgc29ydE9yZGVyOiAiIiwKICAgICAgICAgICAgc29ydENvbDogIiIKCiAgICAgICAgfTsKICAgIH0sCiAgICBtb3VudGVkKCkgewoKICAgIH0sCiAgICBtZXRob2RzOiB7CgogICAgICAgIGFzeW5jIGdldFRhYmxlSW5mbyhkYXRhKSB7CiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLmdldFRhYmxlQ29udGVudCh7ICJkYXRhc2V0TmFtZSI6IGRhdGEgfSk7CiAgICAgICAgICAgIHRoaXMuZmlsZUxpc3QgPSByZXNwb25zZVsiZGF0YSJdWyJ0YWJsZUxpc3QiXQogICAgICAgICAgICB0aGlzLnNlbGVjdGVkVGFiVmFsdWUgPSB0aGlzLmZpbGVMaXN0WzBdCiAgICAgICAgfSwKICAgICAgICBhc3luYyBnZXRQYWdlRGF0YSgpIHsKICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGkuZ2V0UGFnZURhdGEoewogICAgICAgICAgICAgICAgImRhdGFzZXROYW1lIjogdGhpcy4kc3RvcmUuc3RhdGUuZGF0YXNldE5hbWUsCiAgICAgICAgICAgICAgICAiZmlsZU5hbWUiOiB0aGlzLnNlbGVjdGVkVGFiVmFsdWUsCiAgICAgICAgICAgICAgICAiY3VycmVudFBhZ2UiOiB0aGlzLmN1cnJlbnRQYWdlCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgdGhpcy5wYWdlRGF0YSA9IHJlc3BvbnNlWyJkYXRhIl1bInBhZ2VEYXRhIl07CiAgICAgICAgICAgIHRoaXMudG90YWxQYWdlID0gcmVzcG9uc2VbImRhdGEiXVsidG90YWxQYWdlIl07CiAgICAgICAgICAgIHRoaXMuaW1hZ2VQcmVVcmwgPSByZXNwb25zZVsiZGF0YSJdWyJwcmVCYXNlVXJsIl0KICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJzZXRUYWJsZURhdGEiLCB0aGlzLnBhZ2VEYXRhKQoKICAgICAgICB9LAogICAgICAgIGFzeW5jIGhhbmRsZVNlYXJjaChlKSB7CgogICAgICAgICAgICAvLyDlpoLmnpzkuovku7booqvmraPnoa7op6blj5HvvIzlj5HpgIHor7fmsYLvvJoKICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGkuZ2V0Rml0ZXJEYXRhKHsKICAgICAgICAgICAgICAgICJkYXRhc2V0TmFtZSI6IHRoaXMuJHN0b3JlLnN0YXRlLmRhdGFzZXROYW1lLAogICAgICAgICAgICAgICAgImZpbGVOYW1lIjogdGhpcy5zZWxlY3RlZFRhYlZhbHVlLAogICAgICAgICAgICAgICAgImN1cnJlbnRQYWdlIjogdGhpcy5jdXJyZW50UGFnZSwKICAgICAgICAgICAgICAgICJxdWVyeVRleHQiOiB0aGlzLnNlYXJjaFF1ZXJ5CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgdGhpcy5maWx0ZXJkRGF0YSA9IHJlc3BvbnNlWyJkYXRhIl1bImZpbHRlcmREYXRhIl07CiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic2V0VGFibGVEYXRhIiwgdGhpcy5maWx0ZXJkRGF0YSk7CiAgICAgICAgICAgIHRoaXMudG90YWxQYWdlID0gcmVzcG9uc2VbImRhdGEiXVsidG90YWxQYWdlIl07CiAgICAgICAgICAgIHRoaXMuaW1hZ2VQcmVVcmwgPSByZXNwb25zZVsiZGF0YSJdWyJwcmVCYXNlVXJsIl0KCiAgICAgICAgfSwKICAgICAgICBoYW5kbGVQYWdlQ2hhbmdlKHBhZ2UpIHsKICAgICAgICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IHBhZ2U7CiAgICAgICAgfSwKICAgICAgICBnZXRDb2x1bW5JY29uKGNvbCkgewoKICAgICAgICAgICAgaWYgKGNvbCA9PT0gIkltYWdlIikgewogICAgICAgICAgICAgICAgcmV0dXJuICJlbC1pY29uLXZpZXciOwogICAgICAgICAgICB9CgogICAgICAgIH0sCiAgICAgICAgc2hvdWxkU29ydENvbHVtbihjb2wpIHsKCiAgICAgICAgICAgIGlmIChjb2wgPT09ICJkaXN0YW5jZSIpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9IGVsc2UgaWYgKGNvbCA9PSAiSWQiIHx8IGNvbCA9PSAiaWQiKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgaXNDb2x1bW5Tb3J0ZWQoY29sLCBvcmRlcikgewogICAgICAgICAgICByZXR1cm4gdGhpcy5zb3J0Q29sID09PSBjb2wgJiYgdGhpcy5zb3J0T3JkZXIgPT09IG9yZGVyOwogICAgICAgIH0sCiAgICAgICAgYXN5bmMgc29ydENvbHVtbihjb2wsIG9yZGVyKSB7CgogICAgICAgICAgICAvLyDlpoLmnpzkuovku7booqvmraPnoa7op6blj5HvvIzlj5HpgIHor7fmsYLvvJoKICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGkuZ2V0U29ydERhdGEoewogICAgICAgICAgICAgICAgImRhdGFzZXROYW1lIjogdGhpcy4kc3RvcmUuc3RhdGUuZGF0YXNldE5hbWUsCiAgICAgICAgICAgICAgICAiZmlsZU5hbWUiOiB0aGlzLnNlbGVjdGVkVGFiVmFsdWUsCiAgICAgICAgICAgICAgICAiY3VycmVudFBhZ2UiOiB0aGlzLmN1cnJlbnRQYWdlLAogICAgICAgICAgICAgICAgImZpZWxkIjogY29sLAogICAgICAgICAgICAgICAgInNvcnRPcmRlciI6IG9yZGVyCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgdGhpcy5zb3J0ZWREYXRhID0gcmVzcG9uc2VbImRhdGEiXVsic29ydGVkRGF0YSJdOwogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoInNldFRhYmxlRGF0YSIsIHRoaXMuc29ydGVkRGF0YSk7CiAgICAgICAgICAgIHRoaXMudG90YWxQYWdlID0gcmVzcG9uc2VbImRhdGEiXVsidG90YWxQYWdlIl07CiAgICAgICAgICAgIHRoaXMuaW1hZ2VQcmVVcmwgPSByZXNwb25zZVsiZGF0YSJdWyJwcmVCYXNlVXJsIl0KCiAgICAgICAgICAgIHRoaXMuc29ydENvbCA9IGNvbDsKICAgICAgICAgICAgdGhpcy5zb3J0T3JkZXIgPSBvcmRlcjsKCiAgICAgICAgfSwKICAgICAgICBoYW5kbGVJY29uQ2xpY2soY29sKSB7CiAgICAgICAgICAgIGlmIChjb2wgPT09ICJJbWFnZSIpIHsKICAgICAgICAgICAgICAgIHRoaXMuaXNTaG93ID0gIXRoaXMuaXNTaG93OwogICAgICAgICAgICB9CgogICAgICAgIH0sCiAgICAgICAgaGFuZGxlUm93Q2xpY2socm93LCBmaWxlLCBlKSB7CiAgICAgICAgICAgIC8vIOS7jueCueWHu+eahOihjOS4reiOt+WPluWIsOWvueW6lOaVsOaNrueahCBpZAogICAgICAgICAgICBjb25zdCBkYXRhX2lkID0gcm93WyJJZCJdCiAgICAgICAgICAgIC8vIOaPkOS6pOe7meWFqOWxgOaIkeW9k+WJjemAieS4reeahG5vZGUgaWQg5LuO6ICM5L2/5b6X5ZCE5Liq6KeG5Zu+5LmL6Ze055qE6IGU5YqoCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic2V0U2VsZWN0ZWRJZCIsIGRhdGFfaWQpCiAgICAgICAgfQoKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIC4uLm1hcFN0YXRlKHsKICAgICAgICAgICAgZGF0YXNldE5hbWU6ICJkYXRhc2V0TmFtZSIsCiAgICAgICAgICAgIHRhYmxlRGF0YTogInRhYmxlRGF0YSIsCiAgICAgICAgICAgIHVwZGF0ZVRhYmxlOiAidXBkYXRlVGFibGUiCgogICAgICAgIH0pCgogICAgfSwKICAgIHdhdGNoOiB7CiAgICAgICAgZGF0YXNldE5hbWUobmV3VmFsLCBvbGRWYWwpIHsKCiAgICAgICAgICAgIGlmIChuZXdWYWwgIT09IG9sZFZhbCkgewogICAgICAgICAgICAgICAgdGhpcy5nZXRUYWJsZUluZm8obmV3VmFsKTsKICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRUYWJWYWx1ZSA9ICIiOwogICAgICAgICAgICB9CgogICAgICAgIH0sCiAgICAgICAgY3VycmVudFBhZ2UobmV3VmFsLCBvbGRWYWwpIHsKICAgICAgICAgICAgaWYgKHRoaXMuc2VhcmNoUXVlcnkgPT0gIiIpIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS5kYXRhc2V0TmFtZSAhPT0gIiIgJiYgdGhpcy5zZWxlY3RlZFRhYlZhbHVlICE9ICIiKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRUYWJWYWx1ZSkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldFBhZ2VEYXRhKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVTZWFyY2goKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VsZWN0ZWRUYWJWYWx1ZShuZXdWYWwsIG9sZFZhbCkgewogICAgICAgICAgICBpZiAodGhpcy4kc3RvcmUuc3RhdGUuZGF0YXNldE5hbWUgIT09ICIiKSB7CiAgICAgICAgICAgICAgICBpZiAodGhpcy5zZWxlY3RlZFRhYlZhbHVlKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IDE7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRQYWdlRGF0YSgpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgfQoKICAgICAgICB9LAogICAgICAgIHVwZGF0ZVRhYmxlKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgICAgICAgIGlmIChuZXdWYWwgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgIHRoaXMuZ2V0VGFibGVJbmZvKHRoaXMuJHN0b3JlLnN0YXRlLmRhdGFzZXROYW1lKTsKICAgICAgICAgICAgICAgIHRoaXMuZ2V0UGFnZURhdGEoKTsKICAgICAgICAgICAgfQoKICAgICAgICB9CiAgICB9Cn07Cg=="},{"version":3,"sources":["TableMainView.vue"],"names":[],"mappings":";;AAgfile":"TableMainView.vue","sourceRoot":"src/views/MainView/BottomMainView","sourcesContent":["<template>\n\n    <div class=\"table-main\">\n\n        <el-tabs v-model=\"selectedTabValue\" type=\"card\">\n            <el-tab-pane v-for=\"(file, index) in fileList\" :key=\"index\" :label=\"file\" :name=\"file\">\n\n                <el-table v-if=\"tableData\" :data=tableData style=\"width: 100%\" height=\"250\" :stripe=\"true\"\n                    :border=\"true\" size=\"mini\" type=\"index\" :highlight-current-row=\"true\"\n                    @row-click=\"(row, column, event) => handleRowClick(row, file, event)\">\n\n\n                    <el-table-column v-for=\"(value, key) in tableData[0]\" :key=\"key\" :prop=\"key\" :label=\"key\"\n                        height=\"6px\" show-overflow-tooltip fixed>\n\n                        <template #header>\n                            <div class=\"header-wrapper\">\n\n                                <div :title=\"key\" class=\"header-left\"\n                                    style=\"height: 20px; display: inline-flex; align-items: center;\">\n                                    {{ `${key}` }}\n                                </div>\n\n                                <i :class=\"getColumnIcon(key)\" class=\"icon\" @click=\"handleIconClick(key)\"\n                                    style=\"margin-left: 10px; font-size: 14px; vertical-align: middle;\" />\n\n                                <div v-if=\"shouldSortColumn(key)\" class=\"sort-icon-container\"\n                                    style=\"display: flex;flex-direction: column;height: 20px;align-items: center;justify-content: center\">\n                                    <!-- 上升排序箭头 -->\n                                    <i :class=\"{ active: isColumnSorted(key, 'ascending') }\" class=\"el-icon-caret-top\"\n                                        style=\"width: 15px;height: 15px\" @click=\"sortColumn(key, 'ascending')\"></i>\n                                    <!-- 下降排序箭头 -->\n                                    <i :class=\"{ active: isColumnSorted(key, 'descending') }\"\n                                        class=\"el-icon-caret-bottom\" style=\"margin-top: -5px;width: 15px;height: 15px\"\n                                        @click=\"sortColumn(key, 'descending')\"></i>\n                                </div>\n\n                            </div>\n                        </template>\n\n                        <template #default=\"{ row, column }\">\n\n                            <div v-if=\"isShow && column.property === 'Image'\"\n                                style=\"display: flex; justify-content: center; align-items: center;\">\n                                <img :src=\"imagePreUrl + row[column.property]\" alt=\"image\"\n                                    style=\"width: 100px; height: 100px;\" />\n                            </div>\n\n                            <div v-else>\n                                {{ row[column.property] }}\n                            </div>\n                        </template>\n\n                    </el-table-column>\n\n                </el-table>\n\n\n                <div class=\"controls-container\">\n                    <!-- 搜索框 -->\n                    <div class=\"search-container\">\n                        <el-input v-model=\"searchQuery\" placeholder=\"Keyword Search\" @input=\"handleSearch\"\n                            style=\"width: 200px;\" suffix-icon=\"el-icon-search\"></el-input>\n                    </div>\n\n                    <!-- Pagination -->\n                    <el-pagination :current-page=\"currentPage\" :page-size=\"pageSize\" :total=\"totalPage\" small background\n                        class=\"pagination-class\" layout=\"total, prev, pager, next\" @current-change=\"handlePageChange\" />\n                </div>\n\n\n            </el-tab-pane>\n        </el-tabs>\n\n    </div>\n\n</template>\n\n<script>\n\nimport * as d3 from \"d3\";\nimport { mapState } from \"vuex\";\nimport api from \"@/api/data\";\nimport { onUpdated } from \"vue\";\n\nexport default {\n    name: \"TableMainView\",\n    components: {\n\n    },\n    data() {\n        return {\n            selectedTabValue: \"None\",\n            fileList: [],\n            fileContent: {},\n\n            currentPage: 1,\n            pageData: [],\n            pageSize: 10, // Number of items per page\n            totalPage: 0,\n            sortedData: [],\n\n            imagePreUrl: \"\",\n            isShow: false,\n\n            searchQuery: \"\",\n            filterdData: [],\n            sortOrder: \"\",\n            sortCol: \"\"\n\n        };\n    },\n    mounted() {\n\n    },\n    methods: {\n\n        async getTableInfo(data) {\n            const response = await api.getTableContent({ \"datasetName\": data });\n            this.fileList = response[\"data\"][\"tableList\"]\n            this.selectedTabValue = this.fileList[0]\n        },\n        async getPageData() {\n            const response = await api.getPageData({\n                \"datasetName\": this.$store.state.datasetName,\n                \"fileName\": this.selectedTabValue,\n                \"currentPage\": this.currentPage\n            });\n\n            this.pageData = response[\"data\"][\"pageData\"];\n            this.totalPage = response[\"data\"][\"totalPage\"];\n            this.imagePreUrl = response[\"data\"][\"preBaseUrl\"]\n            this.$store.commit(\"setTableData\", this.pageData)\n\n        },\n        async handleSearch(e) {\n\n            // 如果事件被正确触发，发送请求：\n            const response = await api.getFiterData({\n                \"datasetName\": this.$store.state.datasetName,\n                \"fileName\": this.selectedTabValue,\n                \"currentPage\": this.currentPage,\n                \"queryText\": this.searchQuery\n            });\n\n            this.filterdData = response[\"data\"][\"filterdData\"];\n            this.$store.commit(\"setTableData\", this.filterdData);\n            this.totalPage = response[\"data\"][\"totalPage\"];\n            this.imagePreUrl = response[\"data\"][\"preBaseUrl\"]\n\n        },\n        handlePageChange(page) {\n            this.currentPage = page;\n        },\n        getColumnIcon(col) {\n\n            if (col === \"Image\") {\n                return \"el-icon-view\";\n            }\n\n        },\n        shouldSortColumn(col) {\n\n            if (col === \"distance\") {\n                return true;\n            } else if (col == \"Id\" || col == \"id\") {\n                return true;\n            }\n        },\n        isColumnSorted(col, order) {\n            return this.sortCol === col && this.sortOrder === order;\n        },\n        async sortColumn(col, order) {\n\n            // 如果事件被正确触发，发送请求：\n            const response = await api.getSortData({\n                \"datasetName\": this.$store.state.datasetName,\n                \"fileName\": this.selectedTabValue,\n                \"currentPage\": this.currentPage,\n                \"field\": col,\n                \"sortOrder\": order\n            });\n\n            this.sortedData = response[\"data\"][\"sortedData\"];\n            this.$store.commit(\"setTableData\", this.sortedData);\n            this.totalPage = response[\"data\"][\"totalPage\"];\n            this.imagePreUrl = response[\"data\"][\"preBaseUrl\"]\n\n            this.sortCol = col;\n            this.sortOrder = order;\n\n        },\n        handleIconClick(col) {\n            if (col === \"Image\") {\n                this.isShow = !this.isShow;\n            }\n\n        },\n        handleRowClick(row, file, e) {\n            // 从点击的行中获取到对应数据的 id\n            const data_id = row[\"Id\"]\n            // 提交给全局我当前选中的node id 从而使得各个视图之间的联动\n            this.$store.commit(\"setSelectedId\", data_id)\n        }\n\n    },\n    computed: {\n        ...mapState({\n            datasetName: \"datasetName\",\n            tableData: \"tableData\",\n            updateTable: \"updateTable\"\n\n        })\n\n    },\n    watch: {\n        datasetName(newVal, oldVal) {\n\n            if (newVal !== oldVal) {\n                this.getTableInfo(newVal);\n                this.selectedTabValue = \"\";\n            }\n\n        },\n        currentPage(newVal, oldVal) {\n            if (this.searchQuery == \"\") {\n                if (this.$store.state.datasetName !== \"\" && this.selectedTabValue != \"\") {\n                    if (this.selectedTabValue) {\n                        this.getPageData();\n                    }\n                }\n            } else {\n                this.handleSearch();\n            }\n        },\n        selectedTabValue(newVal, oldVal) {\n            if (this.$store.state.datasetName !== \"\") {\n                if (this.selectedTabValue) {\n                    this.currentPage = 1;\n                    this.getPageData();\n                }\n\n            }\n\n        },\n        updateTable(newVal, oldVal) {\n            if (newVal === true) {\n                this.getTableInfo(this.$store.state.datasetName);\n                this.getPageData();\n            }\n\n        }\n    }\n};\n</script>\n\n\n<style scoped lang=\"scss\">\n.table-main {\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n\n\n.controls-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 50px;\n    /* 给搜索框和分页组件添加间距 */\n    margin-top: 2.5px;\n}\n\n\n.search-container {\n    margin-left: 20px;\n}\n\n\n.header-wrapper {\n    height: 20px;\n    white-space: nowrap;\n    /*强制单行显示*/\n    text-overflow: ellipsis;\n    /*超出部分省略号表示*/\n    overflow: hidden;\n    /*超出部分隐藏*/\n    padding: 5px 0;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    //justify-content: center;\n    align-items: center;\n    box-sizing: border-box;\n    color: #595959;\n}\n\n.active {\n    color: #e48e41;\n}\n</style>\n\n<style>\n.el-tabs--card>.el-tabs__header {\n    padding: 0;\n    position: relative;\n    margin: 0 0 0px;\n    background-color: white;\n}\n\n.el-tabs__content {\n    overflow: hidden;\n    position: relative;\n    margin-left: 1.5px;\n    padding-bottom: 15px;\n    background-color: white;\n}\n</style>"]}]}