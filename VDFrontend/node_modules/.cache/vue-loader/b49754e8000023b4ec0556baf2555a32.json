{"remainingRequest":"/home/yansha/VDProject/VDFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yansha/VDProject/VDFrontend/src/views/MainView/RightMainView/NodeLinkView.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/yansha/VDProject/VDFrontend/src/views/MainView/RightMainView/NodeLinkView.vue","mtime":1744442733412},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/babel-loader/lib/index.js","mtime":1735202380921},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1735202380381},{"path":"/home/yansha/VDProject/VDFrontend/node_modules/vue-loader/lib/index.js","mtime":1735202381045}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBkMyBmcm9tICIuLi8uLi8uLi91dGlscy9kMy1pbXBvcnQiOwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gInZ1ZXgiOwppbXBvcnQgYXBpIGZyb20gIkAvYXBpL2RhdGEiOwppbXBvcnQgeyBOb2RlR3JhcGggfSBmcm9tICIuLi8uLi8uLi9jb21wb25lbnRzL0dyYXBoL05vZGVHcmFwaCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiTm9kZUxpbmtWaWV3IiwKICAgIGNvbXBvbmVudHM6IHt9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBub2RlbGlua2RhdGE6IHt9LAogICAgICAgICAgICB3aWR0aDogIiIsCiAgICAgICAgICAgIGhlaWdodDogIiIsCiAgICAgICAgICAgIG5vZGVHcmFwaDogbnVsbCwKCiAgICAgICAgfTsKICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMuaW5pdE5vZGVHcmFwaCgpOwoKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgaW5pdE5vZGVHcmFwaCgpIHsKCiAgICAgICAgICAgIGNvbnN0IGRhZyA9IHRoaXMuJHJlZnMubm9kZUxpbmtHcmFwaDsKICAgICAgICAgICAgdGhpcy53aWR0aCA9IGRhZy5jbGllbnRXaWR0aCAqIDI7CiAgICAgICAgICAgIHRoaXMuaGVpZ2h0ID0gZGFnLmNsaWVudEhlaWdodCAqIDI7CgogICAgICAgICAgICBjb25zdCBncmFwaENvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdub2RlLWdyYXBoLWNvbnRhaW5lcicpOwogICAgICAgICAgICB0aGlzLm5vZGVHcmFwaCA9IG5ldyBOb2RlR3JhcGgoewogICAgICAgICAgICAgICAgY29tcG9uZW50OiBncmFwaENvbnRhaW5lciwKICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMuJHN0b3JlLnN0YXRlLmRhdGFOb2RlTGluaywKICAgICAgICAgICAgICAgIHN0cmVuZ3RoczogewogICAgICAgICAgICAgICAgICAgIGxpbmtTdHJlbmd0aDogMSwgIC8vIOiuvue9rumAguW9k+eahOmTvuaOpeW8uuW6pgogICAgICAgICAgICAgICAgICAgIGxpbmtEaXN0YW5jZTogOCwgICAvLyDorr7nva7pgILlvZPnmoTpk77mjqXot53nprsKICAgICAgICAgICAgICAgICAgICBub2RlU3RyZW5ndGg6IC01LCAgLy8g6K6+572u6YCC5b2T55qE6IqC54K55by65bqmCiAgICAgICAgICAgICAgICAgICAgY29sbGlkZVN0cmVuZ3RoOiA1ICAgLy8g6K6+572u6YCC5b2T55qE56Kw5pKe5by65bqmCgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHdpZHRoOiB0aGlzLndpZHRoLCAgICAgICAgICAgIC8vIOiuvue9ruWbvuW9ouWuveW6pgogICAgICAgICAgICAgICAgaGVpZ2h0OiB0aGlzLmhlaWdodCwgICAgICAgICAgLy8g6K6+572u5Zu+5b2i6auY5bqmCiAgICAgICAgICAgICAgICBub2RlUmFkaXVzOiA2LCAgICAgICAvLyDorr7nva7oioLngrnljYrlvoQKICAgICAgICAgICAgICAgIG1pbkxpbmtTdHJva2VXaWR0aDogMSwgLy8g6K6+572u5pyA5bCP6ZO+5o6l5a695bqmIAogICAgICAgICAgICAgICAgbWF4TGlua1N0cm9rZVdpZHRoOiAzLCAgLy8g6K6+572u5pyA5aSn6ZO+5o6l5a695bqmCiAgICAgICAgICAgICAgICBzZWxlY3RlZE5vZGU6IHRoaXMuJHN0b3JlLnN0YXRlLnNlbGVjdGVkTm9kZQogICAgICAgICAgICB9KQoKICAgICAgICB9LAogICAgICAgIHVwZGF0ZVNlbGVjdGVkTm9kZShzZWxlY3RlZE5vZGUpIHsKICAgICAgICAgICAgaWYgKHRoaXMubm9kZUdyYXBoKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiU2VsZWN0ZWQgTm9kZToiLCBzZWxlY3RlZE5vZGUsIHRoaXMubm9kZUdyYXBoLm5vZGVFbGVtZW50cyk7CgogICAgICAgICAgICAgICAgLy8g5qOA5p+l6IqC54K55piv5ZCm5a2Y5ZyoCiAgICAgICAgICAgICAgICBjb25zdCBub2RlRGF0YSA9IHRoaXMubm9kZUdyYXBoLm5vZGVFbGVtZW50cy5kYXRhKCk7CiAgICAgICAgICAgICAgICBjb25zdCBleGlzdHMgPSBub2RlRGF0YS5zb21lKGQgPT4gZC5pZCA9PSBzZWxlY3RlZE5vZGUpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIuivpeeCueWtmOWcqO+8ge+8ge+8ge+8ge+8ge+8ge+8ge+8ge+8ge+8ge+8gSIsIGV4aXN0cyk7CiAgICAgICAgICAgICAgICBpZiAoZXhpc3RzKSB7CgogICAgICAgICAgICAgICAgICAgIC8vIOWPquacieWcqOiKgueCueWtmOWcqOaXtuaJjeiuvue9ruagt+W8jwogICAgICAgICAgICAgICAgICAgIHRoaXMubm9kZUdyYXBoLm5vZGVFbGVtZW50cwogICAgICAgICAgICAgICAgICAgICAgICAuc3R5bGUoJ3N0cm9rZScsIGQgPT4gKGQuaWQgPT0gc2VsZWN0ZWROb2RlID8gJ3llbGxvdycgOiAnd2hpdGUnKSkKICAgICAgICAgICAgICAgICAgICAgICAgLnN0eWxlKCdzdHJva2Utd2lkdGgnLCBkID0+IChkLmlkID09IHNlbGVjdGVkTm9kZSA/IDQgOiAxLjUpKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CgogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJOb2RlIGRvZXMgbm90IGV4aXN0OiIsIHNlbGVjdGVkTm9kZSk7CiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c6IqC54K55LiN5a2Y5Zyo77yM6YeN572u5omA5pyJ6IqC54K555qE5qC35byPCiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub2RlR3JhcGgubm9kZUVsZW1lbnRzCiAgICAgICAgICAgICAgICAgICAgICAgIC5zdHlsZSgnc3Ryb2tlJywgJ3doaXRlJykgLy8g5omA5pyJ6IqC54K555qE6L655qGG6aKc6ImyCiAgICAgICAgICAgICAgICAgICAgICAgIC5zdHlsZSgnc3Ryb2tlLXdpZHRoJywgMS41KTsgLy8g5omA5pyJ6IqC54K555qE6L655qGG5a695bqmCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIk5vZGUgZG9lcyBub3QgZXhpc3Q6Iiwgc2VsZWN0ZWROb2RlKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICAuLi5tYXBTdGF0ZSh7CiAgICAgICAgICAgIGRhdGFOb2RlbGluazogImRhdGFOb2RlTGluayIsCiAgICAgICAgICAgIHJldHJpZXZhbFNldDogInJldHJpZXZhbFNldCIsCiAgICAgICAgICAgIGRhdGFzZXROYW1lOiAiZGF0YXNldE5hbWUiLAogICAgICAgICAgICBtb2RlbE5hbWU6ICJtb2RlbE5hbWUiLAogICAgICAgICAgICByZXRyaWV2YWxJbmZvOiAicmV0cmlldmFsSW5mbyIsCiAgICAgICAgICAgIHNlbGVjdGVkTm9kZTogInNlbGVjdGVkTm9kZSIKICAgICAgICB9KSwKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIHNlbGVjdGVkTm9kZShuZXdWYWwsIG9sZFZhbCkgewogICAgICAgICAgICBpZiAobmV3VmFsICE9PSBvbGRWYWwgJiBuZXdWYWwgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU2VsZWN0ZWROb2RlKG5ld1ZhbCk7CiAgICAgICAgICAgIH0KCgoKICAgICAgICB9LAogICAgfQp9Owo="},{"version":3,"sources":["NodeLinkView.vue"],"names":[],"mappings":";AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA","file":"NodeLinkView.vue","sourceRoot":"src/views/MainView/RightMainView","sourcesContent":["<template>\n    <div id=\"node-graph-container\" class=\"node-link-main\" ref=\"nodeLinkGraph\">\n    </div>\n</template>\n\n<script>\nimport d3 from \"../../../utils/d3-import\";\nimport { mapState } from \"vuex\";\nimport api from \"@/api/data\";\nimport { NodeGraph } from \"../../../components/Graph/NodeGraph\";\n\nexport default {\n    name: \"NodeLinkView\",\n    components: {},\n    data() {\n        return {\n            nodelinkdata: {},\n            width: \"\",\n            height: \"\",\n            nodeGraph: null,\n\n        };\n    },\n    mounted() {\n        this.initNodeGraph();\n\n    },\n    methods: {\n        initNodeGraph() {\n\n            const dag = this.$refs.nodeLinkGraph;\n            this.width = dag.clientWidth * 2;\n            this.height = dag.clientHeight * 2;\n\n            const graphContainer = document.getElementById('node-graph-container');\n            this.nodeGraph = new NodeGraph({\n                component: graphContainer,\n                data: this.$store.state.dataNodeLink,\n                strengths: {\n                    linkStrength: 1,  // 设置适当的链接强度\n                    linkDistance: 8,   // 设置适当的链接距离\n                    nodeStrength: -5,  // 设置适当的节点强度\n                    collideStrength: 5   // 设置适当的碰撞强度\n\n                },\n                width: this.width,            // 设置图形宽度\n                height: this.height,          // 设置图形高度\n                nodeRadius: 6,       // 设置节点半径\n                minLinkStrokeWidth: 1, // 设置最小链接宽度 \n                maxLinkStrokeWidth: 3,  // 设置最大链接宽度\n                selectedNode: this.$store.state.selectedNode\n            })\n\n        },\n        updateSelectedNode(selectedNode) {\n            if (this.nodeGraph) {\n                console.log(\"Selected Node:\", selectedNode, this.nodeGraph.nodeElements);\n\n                // 检查节点是否存在\n                const nodeData = this.nodeGraph.nodeElements.data();\n                const exists = nodeData.some(d => d.id == selectedNode);\n                console.log(\"该点存在！！！！！！！！！！！\", exists);\n                if (exists) {\n\n                    // 只有在节点存在时才设置样式\n                    this.nodeGraph.nodeElements\n                        .style('stroke', d => (d.id == selectedNode ? 'yellow' : 'white'))\n                        .style('stroke-width', d => (d.id == selectedNode ? 4 : 1.5));\n                } else {\n\n                    console.log(\"Node does not exist:\", selectedNode);\n                    // 如果节点不存在，重置所有节点的样式\n                    this.nodeGraph.nodeElements\n                        .style('stroke', 'white') // 所有节点的边框颜色\n                        .style('stroke-width', 1.5); // 所有节点的边框宽度\n                    console.log(\"Node does not exist:\", selectedNode);\n                }\n            }\n\n        }\n    },\n    computed: {\n        ...mapState({\n            dataNodelink: \"dataNodeLink\",\n            retrievalSet: \"retrievalSet\",\n            datasetName: \"datasetName\",\n            modelName: \"modelName\",\n            retrievalInfo: \"retrievalInfo\",\n            selectedNode: \"selectedNode\"\n        }),\n    },\n    watch: {\n        selectedNode(newVal, oldVal) {\n            if (newVal !== oldVal & newVal !== null) {\n                this.updateSelectedNode(newVal);\n            }\n\n\n\n        },\n    }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.node-link-main {\n    height: 100%;\n    width: 100%;\n    overflow: auto;\n    position: relative;\n\n    .dag-svg {\n        height: 100%;\n        width: 100%;\n    }\n\n    .thumbnail-svg {\n        position: absolute;\n        bottom: 20px;\n        left: 20px;\n        border: 1px solid #ccc;\n        background: #fff;\n    }\n}\n\n.option-box {\n    border: 1px solid #F7F7F7;\n    background-color: #F7F7F7;\n    padding: 5px;\n    position: absolute;\n    z-index: 1000;\n\n    div {\n        margin: 2px 0;\n        cursor: pointer;\n    }\n\n    div:hover {\n        background-color: #f0f0f0;\n    }\n}\n\n.option-button {\n    padding: 5px 10px;\n    border: 1px solid #000;\n    border-radius: 5px;\n    cursor: pointer;\n    background-color: #f0f0f0;\n    font-size: 14px;\n    font-family: Arial, sans-serif;\n    color: red;\n}\n\n.option-button:hover {\n    background-color: #e0e0e0;\n}\n</style>"]}]}